<api
  api-source="class-parse">
  <package
    name="com.annimon.stream"
    jni-name="com/annimon/stream">
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="Collector"
      jni-signature="Lcom/annimon/stream/Collector;"
      source-file-name="Collector.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="A"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="accumulator"
        native="false"
        return="com.annimon.stream.function.BiConsumer&lt;A, T&gt;"
        jni-return="Lcom/annimon/stream/function/BiConsumer&lt;TA;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/function/BiConsumer;" />
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="finisher"
        native="false"
        return="com.annimon.stream.function.Function&lt;A, R&gt;"
        jni-return="Lcom/annimon/stream/function/Function&lt;TA;TR;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/function/Function;" />
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="supplier"
        native="false"
        return="com.annimon.stream.function.Supplier&lt;A&gt;"
        jni-return="Lcom/annimon/stream/function/Supplier&lt;TA;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/function/Supplier;" />
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors"
      jni-signature="Lcom/annimon/stream/Collectors;"
      source-file-name="Collectors.java"
      static="false"
      visibility="public">
      <method
        abstract="false"
        deprecated="deprecated"
        final="false"
        name="averaging"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.lang.Double&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/lang/Double;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.Function&lt;? super T, java.lang.Double&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;Ljava/lang/Double;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="averagingDouble"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.lang.Double&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/lang/Double;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ToDoubleFunction;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.ToDoubleFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToDoubleFunction&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="averagingInt"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.lang.Double&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/lang/Double;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ToIntFunction;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.ToIntFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToIntFunction&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="averagingLong"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.lang.Double&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/lang/Double;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ToLongFunction;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.ToLongFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToLongFunction&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="collectingAndThen"
        native="false"
        return="com.annimon.stream.Collector&lt;T, A, OR&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;TA;TOR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/Collector;Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="A"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="IR"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="OR"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="c"
          type="com.annimon.stream.Collector&lt;T, A, IR&gt;"
          jni-type="Lcom/annimon/stream/Collector&lt;TT;TA;TIR;&gt;;" />
        <parameter
          name="finisher"
          type="com.annimon.stream.function.Function&lt;IR, OR&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;TIR;TOR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="counting"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.lang.Long&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/lang/Long;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filtering"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, R&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Predicate;Lcom/annimon/stream/Collector;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="A"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="predicate"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
        <parameter
          name="downstream"
          type="com.annimon.stream.Collector&lt;? super T, A, R&gt;"
          jni-type="Lcom/annimon/stream/Collector&lt;-TT;TA;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="flatMapping"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, R&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/Collector;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="U"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="A"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends com.annimon.stream.Stream&lt;? extends U&gt;&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+Lcom/annimon/stream/Stream&lt;+TU;&gt;;&gt;;" />
        <parameter
          name="downstream"
          type="com.annimon.stream.Collector&lt;? super U, A, R&gt;"
          jni-type="Lcom/annimon/stream/Collector&lt;-TU;TA;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="groupingBy"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.util.Map&lt;K, java.util.List&lt;T&gt;&gt;&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/util/Map&lt;TK;Ljava/util/List&lt;TT;&gt;;&gt;;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="K"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="classifier"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends K&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TK;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="groupingBy"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.util.Map&lt;K, D&gt;&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/util/Map&lt;TK;TD;&gt;;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/Collector;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="K"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="A"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="D"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="classifier"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends K&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TK;&gt;;" />
        <parameter
          name="downstream"
          type="com.annimon.stream.Collector&lt;? super T, A, D&gt;"
          jni-type="Lcom/annimon/stream/Collector&lt;-TT;TA;TD;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="groupingBy"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, M&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*TM;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Supplier;Lcom/annimon/stream/Collector;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="K"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="D"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="A"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="M"
            jni-classBound=""
            classBound=""
            interfaceBounds="java.util.Map&lt;K, D&gt;"
            jni-interfaceBounds="Ljava/util/Map&lt;TK;TD;&gt;;" />
        </typeParameters>
        <parameter
          name="classifier"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends K&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TK;&gt;;" />
        <parameter
          name="mapFactory"
          type="com.annimon.stream.function.Supplier&lt;M&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;TM;&gt;;" />
        <parameter
          name="downstream"
          type="com.annimon.stream.Collector&lt;? super T, A, D&gt;"
          jni-type="Lcom/annimon/stream/Collector&lt;-TT;TA;TD;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="joining"
        native="false"
        return="com.annimon.stream.Collector&lt;java.lang.CharSequence, ?, java.lang.String&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;Ljava/lang/CharSequence;*Ljava/lang/String;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Collector;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="joining"
        native="false"
        return="com.annimon.stream.Collector&lt;java.lang.CharSequence, ?, java.lang.String&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;Ljava/lang/CharSequence;*Ljava/lang/String;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/CharSequence;)Lcom/annimon/stream/Collector;">
        <parameter
          name="delimiter"
          type="java.lang.CharSequence"
          jni-type="Ljava/lang/CharSequence;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="joining"
        native="false"
        return="com.annimon.stream.Collector&lt;java.lang.CharSequence, ?, java.lang.String&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;Ljava/lang/CharSequence;*Ljava/lang/String;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/annimon/stream/Collector;">
        <parameter
          name="delimiter"
          type="java.lang.CharSequence"
          jni-type="Ljava/lang/CharSequence;" />
        <parameter
          name="prefix"
          type="java.lang.CharSequence"
          jni-type="Ljava/lang/CharSequence;" />
        <parameter
          name="suffix"
          type="java.lang.CharSequence"
          jni-type="Ljava/lang/CharSequence;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="joining"
        native="false"
        return="com.annimon.stream.Collector&lt;java.lang.CharSequence, ?, java.lang.String&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;Ljava/lang/CharSequence;*Ljava/lang/String;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/String;)Lcom/annimon/stream/Collector;">
        <parameter
          name="delimiter"
          type="java.lang.CharSequence"
          jni-type="Ljava/lang/CharSequence;" />
        <parameter
          name="prefix"
          type="java.lang.CharSequence"
          jni-type="Ljava/lang/CharSequence;" />
        <parameter
          name="suffix"
          type="java.lang.CharSequence"
          jni-type="Ljava/lang/CharSequence;" />
        <parameter
          name="emptyValue"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapping"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, R&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/Collector;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="U"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="A"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends U&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TU;&gt;;" />
        <parameter
          name="downstream"
          type="com.annimon.stream.Collector&lt;? super U, A, R&gt;"
          jni-type="Lcom/annimon/stream/Collector&lt;-TU;TA;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="partitioningBy"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.util.Map&lt;java.lang.Boolean, java.util.List&lt;T&gt;&gt;&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/util/Map&lt;Ljava/lang/Boolean;Ljava/util/List&lt;TT;&gt;;&gt;;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="predicate"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="partitioningBy"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.util.Map&lt;java.lang.Boolean, D&gt;&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/util/Map&lt;Ljava/lang/Boolean;TD;&gt;;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Predicate;Lcom/annimon/stream/Collector;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="D"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="A"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="predicate"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
        <parameter
          name="downstream"
          type="com.annimon.stream.Collector&lt;? super T, A, D&gt;"
          jni-type="Lcom/annimon/stream/Collector&lt;-TT;TA;TD;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="reducing"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, T&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Lcom/annimon/stream/function/BinaryOperator;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="identity"
          type="T"
          jni-type="TT;" />
        <parameter
          name="op"
          type="com.annimon.stream.function.BinaryOperator&lt;T&gt;"
          jni-type="Lcom/annimon/stream/function/BinaryOperator&lt;TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="reducing"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, R&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/BinaryOperator;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="identity"
          type="R"
          jni-type="TR;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TR;&gt;;" />
        <parameter
          name="op"
          type="com.annimon.stream.function.BinaryOperator&lt;R&gt;"
          jni-type="Lcom/annimon/stream/function/BinaryOperator&lt;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="summingDouble"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.lang.Double&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/lang/Double;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ToDoubleFunction;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.ToDoubleFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToDoubleFunction&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="summingInt"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.lang.Integer&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/lang/Integer;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ToIntFunction;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.ToIntFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToIntFunction&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="summingLong"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.lang.Long&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/lang/Long;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ToLongFunction;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.ToLongFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToLongFunction&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toCollection"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, R&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="R"
            jni-classBound=""
            classBound=""
            interfaceBounds="java.util.Collection&lt;T&gt;"
            jni-interfaceBounds="Ljava/util/Collection&lt;TT;&gt;;" />
        </typeParameters>
        <parameter
          name="collectionSupplier"
          type="com.annimon.stream.function.Supplier&lt;R&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toList"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.util.List&lt;T&gt;&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/util/List&lt;TT;&gt;;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toMap"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.util.Map&lt;K, T&gt;&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/util/Map&lt;TK;TT;&gt;;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="K"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="keyMapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends K&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TK;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toMap"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.util.Map&lt;K, V&gt;&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/util/Map&lt;TK;TV;&gt;;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="K"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="V"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="keyMapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends K&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TK;&gt;;" />
        <parameter
          name="valueMapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends V&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TV;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toMap"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.util.Map&lt;K, V&gt;&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/util/Map&lt;TK;TV;&gt;;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/BinaryOperator;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="K"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="V"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="keyMapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends K&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TK;&gt;;" />
        <parameter
          name="valueMapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends V&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TV;&gt;;" />
        <parameter
          name="mergeFunction"
          type="com.annimon.stream.function.BinaryOperator&lt;V&gt;"
          jni-type="Lcom/annimon/stream/function/BinaryOperator&lt;TV;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toMap"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, M&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*TM;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/BinaryOperator;Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="K"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="V"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="M"
            jni-classBound=""
            classBound=""
            interfaceBounds="java.util.Map&lt;K, V&gt;"
            jni-interfaceBounds="Ljava/util/Map&lt;TK;TV;&gt;;" />
        </typeParameters>
        <parameter
          name="keyMapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends K&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TK;&gt;;" />
        <parameter
          name="valueMapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends V&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TV;&gt;;" />
        <parameter
          name="mergeFunction"
          type="com.annimon.stream.function.BinaryOperator&lt;V&gt;"
          jni-type="Lcom/annimon/stream/function/BinaryOperator&lt;TV;&gt;;" />
        <parameter
          name="mapFactory"
          type="com.annimon.stream.function.Supplier&lt;M&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;TM;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toMap"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, M&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*TM;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="K"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="V"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="M"
            jni-classBound=""
            classBound=""
            interfaceBounds="java.util.Map&lt;K, V&gt;"
            jni-interfaceBounds="Ljava/util/Map&lt;TK;TV;&gt;;" />
        </typeParameters>
        <parameter
          name="keyMapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends K&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TK;&gt;;" />
        <parameter
          name="valueMapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends V&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TV;&gt;;" />
        <parameter
          name="mapFactory"
          type="com.annimon.stream.function.Supplier&lt;M&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;TM;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toSet"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.util.Set&lt;T&gt;&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/util/Set&lt;TT;&gt;;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toUnmodifiableList"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.util.List&lt;T&gt;&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/util/List&lt;TT;&gt;;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toUnmodifiableMap"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.util.Map&lt;K, V&gt;&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/util/Map&lt;TK;TV;&gt;;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="K"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="V"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="keyMapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends K&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TK;&gt;;" />
        <parameter
          name="valueMapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends V&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TV;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toUnmodifiableMap"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.util.Map&lt;K, V&gt;&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/util/Map&lt;TK;TV;&gt;;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/BinaryOperator;)Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="K"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="V"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="keyMapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends K&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TK;&gt;;" />
        <parameter
          name="valueMapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends V&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TV;&gt;;" />
        <parameter
          name="mergeFunction"
          type="com.annimon.stream.function.BinaryOperator&lt;V&gt;"
          jni-type="Lcom/annimon/stream/function/BinaryOperator&lt;TV;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toUnmodifiableSet"
        native="false"
        return="com.annimon.stream.Collector&lt;T, ?, java.util.Set&lt;T&gt;&gt;"
        jni-return="Lcom/annimon/stream/Collector&lt;TT;*Ljava/util/Set&lt;TT;&gt;;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Collector;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.1"
      jni-signature="Lcom/annimon/stream/Collectors$1;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Supplier"
        name-generic-aware="com.annimon.stream.function.Supplier&lt;long[]&gt;"
        jni-type="Lcom/annimon/stream/function/Supplier&lt;[J&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="long[]"
        jni-return="[J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="toMap"
      enclosing-method-signature="(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.10"
      jni-signature="Lcom/annimon/stream/Collectors$10;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiConsumer"
        name-generic-aware="com.annimon.stream.function.BiConsumer&lt;M, T&gt;"
        jni-type="Lcom/annimon/stream/function/BiConsumer&lt;TM;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
        <parameter
          name="p1"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Map;Ljava/lang/Object;)V">
        <parameter
          name="map"
          type="M"
          jni-type="TM;" />
        <parameter
          name="t"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="toMap"
      enclosing-method-signature="(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/BinaryOperator;Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.11"
      jni-signature="Lcom/annimon/stream/Collectors$11;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiConsumer"
        name-generic-aware="com.annimon.stream.function.BiConsumer&lt;M, T&gt;"
        jni-type="Lcom/annimon/stream/function/BiConsumer&lt;TM;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
        <parameter
          name="p1"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Map;Ljava/lang/Object;)V">
        <parameter
          name="map"
          type="M"
          jni-type="TM;" />
        <parameter
          name="t"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="joining"
      enclosing-method-signature="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/String;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.12"
      jni-signature="Lcom/annimon/stream/Collectors$12;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Supplier"
        name-generic-aware="com.annimon.stream.function.Supplier&lt;java.lang.StringBuilder&gt;"
        jni-type="Lcom/annimon/stream/function/Supplier&lt;Ljava/lang/StringBuilder;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="java.lang.StringBuilder"
        jni-return="Ljava/lang/StringBuilder;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/StringBuilder;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="joining"
      enclosing-method-signature="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/String;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.13"
      jni-signature="Lcom/annimon/stream/Collectors$13;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiConsumer"
        name-generic-aware="com.annimon.stream.function.BiConsumer&lt;java.lang.StringBuilder, java.lang.CharSequence&gt;"
        jni-type="Lcom/annimon/stream/function/BiConsumer&lt;Ljava/lang/StringBuilder;Ljava/lang/CharSequence;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
        <parameter
          name="p1"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/StringBuilder;Ljava/lang/CharSequence;)V">
        <parameter
          name="t"
          type="java.lang.StringBuilder"
          jni-type="Ljava/lang/StringBuilder;" />
        <parameter
          name="u"
          type="java.lang.CharSequence"
          jni-type="Ljava/lang/CharSequence;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="joining"
      enclosing-method-signature="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/String;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.14"
      jni-signature="Lcom/annimon/stream/Collectors$14;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Function"
        name-generic-aware="com.annimon.stream.function.Function&lt;java.lang.StringBuilder, java.lang.String&gt;"
        jni-type="Lcom/annimon/stream/function/Function&lt;Ljava/lang/StringBuilder;Ljava/lang/String;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.String"
        jni-return="Ljava/lang/String;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/StringBuilder;)Ljava/lang/String;">
        <parameter
          name="value"
          type="java.lang.StringBuilder"
          jni-type="Ljava/lang/StringBuilder;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="averaging"
      enclosing-method-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.15"
      jni-signature="Lcom/annimon/stream/Collectors$15;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.ToDoubleFunction"
        name-generic-aware="com.annimon.stream.function.ToDoubleFunction&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/ToDoubleFunction&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)D">
        <parameter
          name="t"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="averagingInt"
      enclosing-method-signature="(Lcom/annimon/stream/function/ToIntFunction;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.16"
      jni-signature="Lcom/annimon/stream/Collectors$16;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiConsumer"
        name-generic-aware="com.annimon.stream.function.BiConsumer&lt;long[], T&gt;"
        jni-type="Lcom/annimon/stream/function/BiConsumer&lt;[JTT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
        <parameter
          name="p1"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([JLjava/lang/Object;)V">
        <parameter
          name="t"
          type="long[]"
          jni-type="[J" />
        <parameter
          name="u"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="averagingLong"
      enclosing-method-signature="(Lcom/annimon/stream/function/ToLongFunction;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.17"
      jni-signature="Lcom/annimon/stream/Collectors$17;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiConsumer"
        name-generic-aware="com.annimon.stream.function.BiConsumer&lt;long[], T&gt;"
        jni-type="Lcom/annimon/stream/function/BiConsumer&lt;[JTT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
        <parameter
          name="p1"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([JLjava/lang/Object;)V">
        <parameter
          name="t"
          type="long[]"
          jni-type="[J" />
        <parameter
          name="u"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="averagingHelper"
      enclosing-method-signature="(Lcom/annimon/stream/function/BiConsumer;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.18"
      jni-signature="Lcom/annimon/stream/Collectors$18;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Function"
        name-generic-aware="com.annimon.stream.function.Function&lt;long[], java.lang.Double&gt;"
        jni-type="Lcom/annimon/stream/function/Function&lt;[JLjava/lang/Double;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Double"
        jni-return="Ljava/lang/Double;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([J)Ljava/lang/Double;">
        <parameter
          name="t"
          type="long[]"
          jni-type="[J" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="averagingDouble"
      enclosing-method-signature="(Lcom/annimon/stream/function/ToDoubleFunction;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.19"
      jni-signature="Lcom/annimon/stream/Collectors$19;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiConsumer"
        name-generic-aware="com.annimon.stream.function.BiConsumer&lt;double[], T&gt;"
        jni-type="Lcom/annimon/stream/function/BiConsumer&lt;[DTT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
        <parameter
          name="p1"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([DLjava/lang/Object;)V">
        <parameter
          name="t"
          type="double[]"
          jni-type="[D" />
        <parameter
          name="u"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.2"
      jni-signature="Lcom/annimon/stream/Collectors$2;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Supplier"
        name-generic-aware="com.annimon.stream.function.Supplier&lt;double[]&gt;"
        jni-type="Lcom/annimon/stream/function/Supplier&lt;[D&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="double[]"
        jni-return="[D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="averagingDouble"
      enclosing-method-signature="(Lcom/annimon/stream/function/ToDoubleFunction;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.20"
      jni-signature="Lcom/annimon/stream/Collectors$20;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Function"
        name-generic-aware="com.annimon.stream.function.Function&lt;double[], java.lang.Double&gt;"
        jni-type="Lcom/annimon/stream/function/Function&lt;[DLjava/lang/Double;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Double"
        jni-return="Ljava/lang/Double;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([D)Ljava/lang/Double;">
        <parameter
          name="t"
          type="double[]"
          jni-type="[D" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="summingInt"
      enclosing-method-signature="(Lcom/annimon/stream/function/ToIntFunction;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.21"
      jni-signature="Lcom/annimon/stream/Collectors$21;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Supplier"
        name-generic-aware="com.annimon.stream.function.Supplier&lt;int[]&gt;"
        jni-type="Lcom/annimon/stream/function/Supplier&lt;[I&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="int[]"
        jni-return="[I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="summingInt"
      enclosing-method-signature="(Lcom/annimon/stream/function/ToIntFunction;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.22"
      jni-signature="Lcom/annimon/stream/Collectors$22;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiConsumer"
        name-generic-aware="com.annimon.stream.function.BiConsumer&lt;int[], T&gt;"
        jni-type="Lcom/annimon/stream/function/BiConsumer&lt;[ITT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
        <parameter
          name="p1"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([ILjava/lang/Object;)V">
        <parameter
          name="t"
          type="int[]"
          jni-type="[I" />
        <parameter
          name="u"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="summingInt"
      enclosing-method-signature="(Lcom/annimon/stream/function/ToIntFunction;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.23"
      jni-signature="Lcom/annimon/stream/Collectors$23;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Function"
        name-generic-aware="com.annimon.stream.function.Function&lt;int[], java.lang.Integer&gt;"
        jni-type="Lcom/annimon/stream/function/Function&lt;[ILjava/lang/Integer;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Integer"
        jni-return="Ljava/lang/Integer;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([I)Ljava/lang/Integer;">
        <parameter
          name="value"
          type="int[]"
          jni-type="[I" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="summingLong"
      enclosing-method-signature="(Lcom/annimon/stream/function/ToLongFunction;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.24"
      jni-signature="Lcom/annimon/stream/Collectors$24;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiConsumer"
        name-generic-aware="com.annimon.stream.function.BiConsumer&lt;long[], T&gt;"
        jni-type="Lcom/annimon/stream/function/BiConsumer&lt;[JTT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
        <parameter
          name="p1"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([JLjava/lang/Object;)V">
        <parameter
          name="t"
          type="long[]"
          jni-type="[J" />
        <parameter
          name="u"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="summingLong"
      enclosing-method-signature="(Lcom/annimon/stream/function/ToLongFunction;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.25"
      jni-signature="Lcom/annimon/stream/Collectors$25;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Function"
        name-generic-aware="com.annimon.stream.function.Function&lt;long[], java.lang.Long&gt;"
        jni-type="Lcom/annimon/stream/function/Function&lt;[JLjava/lang/Long;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Long"
        jni-return="Ljava/lang/Long;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([J)Ljava/lang/Long;">
        <parameter
          name="value"
          type="long[]"
          jni-type="[J" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="summingDouble"
      enclosing-method-signature="(Lcom/annimon/stream/function/ToDoubleFunction;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.26"
      jni-signature="Lcom/annimon/stream/Collectors$26;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiConsumer"
        name-generic-aware="com.annimon.stream.function.BiConsumer&lt;double[], T&gt;"
        jni-type="Lcom/annimon/stream/function/BiConsumer&lt;[DTT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
        <parameter
          name="p1"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([DLjava/lang/Object;)V">
        <parameter
          name="t"
          type="double[]"
          jni-type="[D" />
        <parameter
          name="u"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="summingDouble"
      enclosing-method-signature="(Lcom/annimon/stream/function/ToDoubleFunction;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.27"
      jni-signature="Lcom/annimon/stream/Collectors$27;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Function"
        name-generic-aware="com.annimon.stream.function.Function&lt;double[], java.lang.Double&gt;"
        jni-type="Lcom/annimon/stream/function/Function&lt;[DLjava/lang/Double;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Double"
        jni-return="Ljava/lang/Double;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([D)Ljava/lang/Double;">
        <parameter
          name="value"
          type="double[]"
          jni-type="[D" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="counting"
      enclosing-method-signature="()Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.28"
      jni-signature="Lcom/annimon/stream/Collectors$28;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.ToLongFunction"
        name-generic-aware="com.annimon.stream.function.ToLongFunction&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/ToLongFunction&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)J">
        <parameter
          name="t"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="reducing"
      enclosing-method-signature="(Ljava/lang/Object;Lcom/annimon/stream/function/BinaryOperator;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.29"
      jni-signature="Lcom/annimon/stream/Collectors$29;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Supplier"
        name-generic-aware="com.annimon.stream.function.Supplier&lt;com.annimon.stream.Collectors.Tuple1&lt;T&gt;&gt;"
        jni-type="Lcom/annimon/stream/function/Supplier&lt;Lcom/annimon/stream/Collectors$Tuple1&lt;TT;&gt;;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="com.annimon.stream.Collectors.Tuple1&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Collectors$Tuple1&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Collectors$Tuple1;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()Ljava/lang/Object;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="toCollection"
      enclosing-method-signature="(Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.3"
      jni-signature="Lcom/annimon/stream/Collectors$3;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiConsumer"
        name-generic-aware="com.annimon.stream.function.BiConsumer&lt;R, T&gt;"
        jni-type="Lcom/annimon/stream/function/BiConsumer&lt;TR;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
        <parameter
          name="p1"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Collection;Ljava/lang/Object;)V">
        <parameter
          name="t"
          type="R"
          jni-type="TR;" />
        <parameter
          name="u"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="reducing"
      enclosing-method-signature="(Ljava/lang/Object;Lcom/annimon/stream/function/BinaryOperator;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.30"
      jni-signature="Lcom/annimon/stream/Collectors$30;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiConsumer"
        name-generic-aware="com.annimon.stream.function.BiConsumer&lt;com.annimon.stream.Collectors.Tuple1&lt;T&gt;, T&gt;"
        jni-type="Lcom/annimon/stream/function/BiConsumer&lt;Lcom/annimon/stream/Collectors$Tuple1&lt;TT;&gt;;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/Collectors$Tuple1;Ljava/lang/Object;)V">
        <parameter
          name="tuple"
          type="com.annimon.stream.Collectors.Tuple1&lt;T&gt;"
          jni-type="Lcom/annimon/stream/Collectors$Tuple1&lt;TT;&gt;;" />
        <parameter
          name="value"
          type="T"
          jni-type="TT;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
        <parameter
          name="p1"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="reducing"
      enclosing-method-signature="(Ljava/lang/Object;Lcom/annimon/stream/function/BinaryOperator;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.31"
      jni-signature="Lcom/annimon/stream/Collectors$31;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Function"
        name-generic-aware="com.annimon.stream.function.Function&lt;com.annimon.stream.Collectors.Tuple1&lt;T&gt;, T&gt;"
        jni-type="Lcom/annimon/stream/function/Function&lt;Lcom/annimon/stream/Collectors$Tuple1&lt;TT;&gt;;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/Collectors$Tuple1;)Ljava/lang/Object;">
        <parameter
          name="tuple"
          type="com.annimon.stream.Collectors.Tuple1&lt;T&gt;"
          jni-type="Lcom/annimon/stream/Collectors$Tuple1&lt;TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="reducing"
      enclosing-method-signature="(Ljava/lang/Object;Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/BinaryOperator;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.32"
      jni-signature="Lcom/annimon/stream/Collectors$32;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Supplier"
        name-generic-aware="com.annimon.stream.function.Supplier&lt;com.annimon.stream.Collectors.Tuple1&lt;R&gt;&gt;"
        jni-type="Lcom/annimon/stream/function/Supplier&lt;Lcom/annimon/stream/Collectors$Tuple1&lt;TR;&gt;;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="com.annimon.stream.Collectors.Tuple1&lt;R&gt;"
        jni-return="Lcom/annimon/stream/Collectors$Tuple1&lt;TR;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Collectors$Tuple1;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()Ljava/lang/Object;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="reducing"
      enclosing-method-signature="(Ljava/lang/Object;Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/BinaryOperator;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.33"
      jni-signature="Lcom/annimon/stream/Collectors$33;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiConsumer"
        name-generic-aware="com.annimon.stream.function.BiConsumer&lt;com.annimon.stream.Collectors.Tuple1&lt;R&gt;, T&gt;"
        jni-type="Lcom/annimon/stream/function/BiConsumer&lt;Lcom/annimon/stream/Collectors$Tuple1&lt;TR;&gt;;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/Collectors$Tuple1;Ljava/lang/Object;)V">
        <parameter
          name="tuple"
          type="com.annimon.stream.Collectors.Tuple1&lt;R&gt;"
          jni-type="Lcom/annimon/stream/Collectors$Tuple1&lt;TR;&gt;;" />
        <parameter
          name="value"
          type="T"
          jni-type="TT;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
        <parameter
          name="p1"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="reducing"
      enclosing-method-signature="(Ljava/lang/Object;Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/BinaryOperator;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.34"
      jni-signature="Lcom/annimon/stream/Collectors$34;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Function"
        name-generic-aware="com.annimon.stream.function.Function&lt;com.annimon.stream.Collectors.Tuple1&lt;R&gt;, R&gt;"
        jni-type="Lcom/annimon/stream/function/Function&lt;Lcom/annimon/stream/Collectors$Tuple1&lt;TR;&gt;;TR;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/Collectors$Tuple1;)Ljava/lang/Object;">
        <parameter
          name="tuple"
          type="com.annimon.stream.Collectors.Tuple1&lt;R&gt;"
          jni-type="Lcom/annimon/stream/Collectors$Tuple1&lt;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="filtering"
      enclosing-method-signature="(Lcom/annimon/stream/function/Predicate;Lcom/annimon/stream/Collector;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.35"
      jni-signature="Lcom/annimon/stream/Collectors$35;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiConsumer"
        name-generic-aware="com.annimon.stream.function.BiConsumer&lt;A, T&gt;"
        jni-type="Lcom/annimon/stream/function/BiConsumer&lt;TA;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="a"
          type="A"
          jni-type="TA;" />
        <parameter
          name="t"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="mapping"
      enclosing-method-signature="(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/Collector;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.36"
      jni-signature="Lcom/annimon/stream/Collectors$36;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiConsumer"
        name-generic-aware="com.annimon.stream.function.BiConsumer&lt;A, T&gt;"
        jni-type="Lcom/annimon/stream/function/BiConsumer&lt;TA;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="a"
          type="A"
          jni-type="TA;" />
        <parameter
          name="t"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="flatMapping"
      enclosing-method-signature="(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/Collector;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.37"
      jni-signature="Lcom/annimon/stream/Collectors$37;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiConsumer"
        name-generic-aware="com.annimon.stream.function.BiConsumer&lt;A, T&gt;"
        jni-type="Lcom/annimon/stream/function/BiConsumer&lt;TA;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="a"
          type="A"
          jni-type="TA;" />
        <parameter
          name="t"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors$37;"
      enclosing-method-name="accept"
      enclosing-method-signature="(Ljava/lang/Object;Ljava/lang/Object;)V"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="Collectors.37.1"
      jni-signature="Lcom/annimon/stream/Collectors$37$1;"
      source-file-name="Collectors.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.Consumer"
        name-generic-aware="com.annimon.stream.function.Consumer&lt;U&gt;"
        jni-type="Lcom/annimon/stream/function/Consumer&lt;TU;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)V">
        <parameter
          name="u"
          type="U"
          jni-type="TU;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="groupingBy"
      enclosing-method-signature="(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Supplier;Lcom/annimon/stream/Collector;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.38"
      jni-signature="Lcom/annimon/stream/Collectors$38;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Function"
        name-generic-aware="com.annimon.stream.function.Function&lt;java.util.Map&lt;K, A&gt;, M&gt;"
        jni-type="Lcom/annimon/stream/function/Function&lt;Ljava/util/Map&lt;TK;TA;&gt;;TM;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="M"
        jni-return="TM;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Map;)Ljava/util/Map;">
        <parameter
          name="map"
          type="java.util.Map&lt;K, A&gt;"
          jni-type="Ljava/util/Map&lt;TK;TA;&gt;;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="groupingBy"
      enclosing-method-signature="(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Supplier;Lcom/annimon/stream/Collector;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.39"
      jni-signature="Lcom/annimon/stream/Collectors$39;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiConsumer"
        name-generic-aware="com.annimon.stream.function.BiConsumer&lt;java.util.Map&lt;K, A&gt;, T&gt;"
        jni-type="Lcom/annimon/stream/function/BiConsumer&lt;Ljava/util/Map&lt;TK;TA;&gt;;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
        <parameter
          name="p1"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Map;Ljava/lang/Object;)V">
        <parameter
          name="map"
          type="java.util.Map&lt;K, A&gt;"
          jni-type="Ljava/util/Map&lt;TK;TA;&gt;;" />
        <parameter
          name="t"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="toList"
      enclosing-method-signature="()Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.4"
      jni-signature="Lcom/annimon/stream/Collectors$4;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Supplier"
        name-generic-aware="com.annimon.stream.function.Supplier&lt;java.util.List&lt;T&gt;&gt;"
        jni-type="Lcom/annimon/stream/function/Supplier&lt;Ljava/util/List&lt;TT;&gt;;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="java.util.List&lt;T&gt;"
        jni-return="Ljava/util/List&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/util/List;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="partitioningBy"
      enclosing-method-signature="(Lcom/annimon/stream/function/Predicate;Lcom/annimon/stream/Collector;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.40"
      jni-signature="Lcom/annimon/stream/Collectors$40;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Supplier"
        name-generic-aware="com.annimon.stream.function.Supplier&lt;com.annimon.stream.Collectors.Tuple2&lt;A&gt;&gt;"
        jni-type="Lcom/annimon/stream/function/Supplier&lt;Lcom/annimon/stream/Collectors$Tuple2&lt;TA;&gt;;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="com.annimon.stream.Collectors.Tuple2&lt;A&gt;"
        jni-return="Lcom/annimon/stream/Collectors$Tuple2&lt;TA;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Collectors$Tuple2;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()Ljava/lang/Object;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="partitioningBy"
      enclosing-method-signature="(Lcom/annimon/stream/function/Predicate;Lcom/annimon/stream/Collector;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.41"
      jni-signature="Lcom/annimon/stream/Collectors$41;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiConsumer"
        name-generic-aware="com.annimon.stream.function.BiConsumer&lt;com.annimon.stream.Collectors.Tuple2&lt;A&gt;, T&gt;"
        jni-type="Lcom/annimon/stream/function/BiConsumer&lt;Lcom/annimon/stream/Collectors$Tuple2&lt;TA;&gt;;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/Collectors$Tuple2;Ljava/lang/Object;)V">
        <parameter
          name="container"
          type="com.annimon.stream.Collectors.Tuple2&lt;A&gt;"
          jni-type="Lcom/annimon/stream/Collectors$Tuple2&lt;TA;&gt;;" />
        <parameter
          name="t"
          type="T"
          jni-type="TT;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
        <parameter
          name="p1"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="partitioningBy"
      enclosing-method-signature="(Lcom/annimon/stream/function/Predicate;Lcom/annimon/stream/Collector;)Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.42"
      jni-signature="Lcom/annimon/stream/Collectors$42;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Function"
        name-generic-aware="com.annimon.stream.function.Function&lt;com.annimon.stream.Collectors.Tuple2&lt;A&gt;, java.util.Map&lt;java.lang.Boolean, D&gt;&gt;"
        jni-type="Lcom/annimon/stream/function/Function&lt;Lcom/annimon/stream/Collectors$Tuple2&lt;TA;&gt;;Ljava/util/Map&lt;Ljava/lang/Boolean;TD;&gt;;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.util.Map&lt;java.lang.Boolean, D&gt;"
        jni-return="Ljava/util/Map&lt;Ljava/lang/Boolean;TD;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/Collectors$Tuple2;)Ljava/util/Map;">
        <parameter
          name="container"
          type="com.annimon.stream.Collectors.Tuple2&lt;A&gt;"
          jni-type="Lcom/annimon/stream/Collectors$Tuple2&lt;TA;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="hashMapSupplier"
      enclosing-method-signature="()Lcom/annimon/stream/function/Supplier;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.43"
      jni-signature="Lcom/annimon/stream/Collectors$43;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Supplier"
        name-generic-aware="com.annimon.stream.function.Supplier&lt;java.util.Map&lt;K, V&gt;&gt;"
        jni-type="Lcom/annimon/stream/function/Supplier&lt;Ljava/util/Map&lt;TK;TV;&gt;;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="java.util.Map&lt;K, V&gt;"
        jni-return="Ljava/util/Map&lt;TK;TV;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/util/Map;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="toUnmodifiableMapConverter"
      enclosing-method-signature="()Lcom/annimon/stream/function/UnaryOperator;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.44"
      jni-signature="Lcom/annimon/stream/Collectors$44;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.UnaryOperator"
        name-generic-aware="com.annimon.stream.function.UnaryOperator&lt;java.util.Map&lt;K, V&gt;&gt;"
        jni-type="Lcom/annimon/stream/function/UnaryOperator&lt;Ljava/util/Map&lt;TK;TV;&gt;;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.util.Map&lt;K, V&gt;"
        jni-return="Ljava/util/Map&lt;TK;TV;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Map;)Ljava/util/Map;">
        <parameter
          name="map"
          type="java.util.Map&lt;K, V&gt;"
          jni-type="Ljava/util/Map&lt;TK;TV;&gt;;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="castIdentity"
      enclosing-method-signature="()Lcom/annimon/stream/function/Function;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.45"
      jni-signature="Lcom/annimon/stream/Collectors$45;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Function"
        name-generic-aware="com.annimon.stream.function.Function&lt;A, R&gt;"
        jni-type="Lcom/annimon/stream/function/Function&lt;TA;TR;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="value"
          type="A"
          jni-type="TA;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="toList"
      enclosing-method-signature="()Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.5"
      jni-signature="Lcom/annimon/stream/Collectors$5;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiConsumer"
        name-generic-aware="com.annimon.stream.function.BiConsumer&lt;java.util.List&lt;T&gt;, T&gt;"
        jni-type="Lcom/annimon/stream/function/BiConsumer&lt;Ljava/util/List&lt;TT;&gt;;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
        <parameter
          name="p1"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/List;Ljava/lang/Object;)V">
        <parameter
          name="t"
          type="java.util.List&lt;T&gt;"
          jni-type="Ljava/util/List&lt;TT;&gt;;" />
        <parameter
          name="u"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="toUnmodifiableList"
      enclosing-method-signature="()Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.6"
      jni-signature="Lcom/annimon/stream/Collectors$6;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.UnaryOperator"
        name-generic-aware="com.annimon.stream.function.UnaryOperator&lt;java.util.List&lt;T&gt;&gt;"
        jni-type="Lcom/annimon/stream/function/UnaryOperator&lt;Ljava/util/List&lt;TT;&gt;;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.util.List&lt;T&gt;"
        jni-return="Ljava/util/List&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/List;)Ljava/util/List;">
        <parameter
          name="list"
          type="java.util.List&lt;T&gt;"
          jni-type="Ljava/util/List&lt;TT;&gt;;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="toSet"
      enclosing-method-signature="()Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.7"
      jni-signature="Lcom/annimon/stream/Collectors$7;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Supplier"
        name-generic-aware="com.annimon.stream.function.Supplier&lt;java.util.Set&lt;T&gt;&gt;"
        jni-type="Lcom/annimon/stream/function/Supplier&lt;Ljava/util/Set&lt;TT;&gt;;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="java.util.Set&lt;T&gt;"
        jni-return="Ljava/util/Set&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/util/Set;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="toSet"
      enclosing-method-signature="()Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.8"
      jni-signature="Lcom/annimon/stream/Collectors$8;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiConsumer"
        name-generic-aware="com.annimon.stream.function.BiConsumer&lt;java.util.Set&lt;T&gt;, T&gt;"
        jni-type="Lcom/annimon/stream/function/BiConsumer&lt;Ljava/util/Set&lt;TT;&gt;;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
        <parameter
          name="p1"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Set;Ljava/lang/Object;)V">
        <parameter
          name="set"
          type="java.util.Set&lt;T&gt;"
          jni-type="Ljava/util/Set&lt;TT;&gt;;" />
        <parameter
          name="t"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Collectors;"
      enclosing-method-name="toUnmodifiableSet"
      enclosing-method-signature="()Lcom/annimon/stream/Collector;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.9"
      jni-signature="Lcom/annimon/stream/Collectors$9;"
      source-file-name="Collectors.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.UnaryOperator"
        name-generic-aware="com.annimon.stream.function.UnaryOperator&lt;java.util.Set&lt;T&gt;&gt;"
        jni-type="Lcom/annimon/stream/function/UnaryOperator&lt;Ljava/util/Set&lt;TT;&gt;;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.util.Set&lt;T&gt;"
        jni-return="Ljava/util/Set&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Set;)Ljava/util/Set;">
        <parameter
          name="set"
          type="java.util.Set&lt;T&gt;"
          jni-type="Ljava/util/Set&lt;TT;&gt;;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.CollectorsImpl"
      jni-signature="Lcom/annimon/stream/Collectors$CollectorsImpl;"
      source-file-name="Collectors.java"
      static="true"
      visibility="private">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="A"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <implements
        name="com.annimon.stream.Collector"
        name-generic-aware="com.annimon.stream.Collector&lt;T, A, R&gt;"
        jni-type="Lcom/annimon/stream/Collector&lt;TT;TA;TR;&gt;;" />
      <constructor
        deprecated="not deprecated"
        final="false"
        name="Collectors.CollectorsImpl"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;Lcom/annimon/stream/function/BiConsumer;)V">
        <parameter
          name="supplier"
          type="com.annimon.stream.function.Supplier&lt;A&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;TA;&gt;;" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.BiConsumer&lt;A, T&gt;"
          jni-type="Lcom/annimon/stream/function/BiConsumer&lt;TA;TT;&gt;;" />
      </constructor>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="Collectors.CollectorsImpl"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;Lcom/annimon/stream/function/BiConsumer;Lcom/annimon/stream/function/Function;)V">
        <parameter
          name="supplier"
          type="com.annimon.stream.function.Supplier&lt;A&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;TA;&gt;;" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.BiConsumer&lt;A, T&gt;"
          jni-type="Lcom/annimon/stream/function/BiConsumer&lt;TA;TT;&gt;;" />
        <parameter
          name="finisher"
          type="com.annimon.stream.function.Function&lt;A, R&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;TA;TR;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accumulator"
        native="false"
        return="com.annimon.stream.function.BiConsumer&lt;A, T&gt;"
        jni-return="Lcom/annimon/stream/function/BiConsumer&lt;TA;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/function/BiConsumer;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="finisher"
        native="false"
        return="com.annimon.stream.function.Function&lt;A, R&gt;"
        jni-return="Lcom/annimon/stream/function/Function&lt;TA;TR;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/function/Function;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="supplier"
        native="false"
        return="com.annimon.stream.function.Supplier&lt;A&gt;"
        jni-return="Lcom/annimon/stream/function/Supplier&lt;TA;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/function/Supplier;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.Tuple1"
      jni-signature="Lcom/annimon/stream/Collectors$Tuple1;"
      source-file-name="Collectors.java"
      static="true"
      visibility="private">
      <typeParameters>
        <typeParameter
          name="A"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Collectors.Tuple2"
      jni-signature="Lcom/annimon/stream/Collectors$Tuple2;"
      source-file-name="Collectors.java"
      static="true"
      visibility="private">
      <typeParameters>
        <typeParameter
          name="A"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="ComparatorCompat"
      jni-signature="Lcom/annimon/stream/ComparatorCompat;"
      source-file-name="ComparatorCompat.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <implements
        name="java.util.Comparator"
        name-generic-aware="java.util.Comparator&lt;T&gt;"
        jni-type="Ljava/util/Comparator&lt;TT;&gt;;" />
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ComparatorCompat"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Comparator;)V">
        <parameter
          name="comparator"
          type="java.util.Comparator&lt;? super T&gt;"
          jni-type="Ljava/util/Comparator&lt;-TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="chain"
        native="false"
        return="com.annimon.stream.ComparatorCompat&lt;T&gt;"
        jni-return="Lcom/annimon/stream/ComparatorCompat&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Comparator;)Lcom/annimon/stream/ComparatorCompat;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="comparator"
          type="java.util.Comparator&lt;T&gt;"
          jni-type="Ljava/util/Comparator&lt;TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="deprecated"
        final="false"
        name="comparator"
        native="false"
        return="java.util.Comparator&lt;T&gt;"
        jni-return="Ljava/util/Comparator&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/util/Comparator;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="compare"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)I">
        <parameter
          name="o1"
          type="T"
          jni-type="TT;" />
        <parameter
          name="o2"
          type="T"
          jni-type="TT;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="comparing"
        native="false"
        return="com.annimon.stream.ComparatorCompat&lt;T&gt;"
        jni-return="Lcom/annimon/stream/ComparatorCompat&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/ComparatorCompat;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="U"
            jni-classBound=""
            classBound=""
            interfaceBounds="java.lang.Comparable&lt;? super U&gt;"
            jni-interfaceBounds="Ljava/lang/Comparable&lt;-TU;&gt;;" />
        </typeParameters>
        <parameter
          name="keyExtractor"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends U&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TU;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="comparing"
        native="false"
        return="com.annimon.stream.ComparatorCompat&lt;T&gt;"
        jni-return="Lcom/annimon/stream/ComparatorCompat&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;Ljava/util/Comparator;)Lcom/annimon/stream/ComparatorCompat;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="U"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="keyExtractor"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends U&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TU;&gt;;" />
        <parameter
          name="keyComparator"
          type="java.util.Comparator&lt;? super U&gt;"
          jni-type="Ljava/util/Comparator&lt;-TU;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="comparingDouble"
        native="false"
        return="com.annimon.stream.ComparatorCompat&lt;T&gt;"
        jni-return="Lcom/annimon/stream/ComparatorCompat&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ToDoubleFunction;)Lcom/annimon/stream/ComparatorCompat;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="keyExtractor"
          type="com.annimon.stream.function.ToDoubleFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToDoubleFunction&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="comparingInt"
        native="false"
        return="com.annimon.stream.ComparatorCompat&lt;T&gt;"
        jni-return="Lcom/annimon/stream/ComparatorCompat&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ToIntFunction;)Lcom/annimon/stream/ComparatorCompat;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="keyExtractor"
          type="com.annimon.stream.function.ToIntFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToIntFunction&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="comparingLong"
        native="false"
        return="com.annimon.stream.ComparatorCompat&lt;T&gt;"
        jni-return="Lcom/annimon/stream/ComparatorCompat&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ToLongFunction;)Lcom/annimon/stream/ComparatorCompat;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="keyExtractor"
          type="com.annimon.stream.function.ToLongFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToLongFunction&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="naturalOrder"
        native="false"
        return="com.annimon.stream.ComparatorCompat&lt;T&gt;"
        jni-return="Lcom/annimon/stream/ComparatorCompat&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/ComparatorCompat;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound=""
            classBound=""
            interfaceBounds="java.lang.Comparable&lt;? super T&gt;"
            jni-interfaceBounds="Ljava/lang/Comparable&lt;-TT;&gt;;" />
        </typeParameters>
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nullsFirst"
        native="false"
        return="com.annimon.stream.ComparatorCompat&lt;T&gt;"
        jni-return="Lcom/annimon/stream/ComparatorCompat&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/ComparatorCompat;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nullsFirst"
        native="false"
        return="com.annimon.stream.ComparatorCompat&lt;T&gt;"
        jni-return="Lcom/annimon/stream/ComparatorCompat&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Comparator;)Lcom/annimon/stream/ComparatorCompat;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="comparator"
          type="java.util.Comparator&lt;? super T&gt;"
          jni-type="Ljava/util/Comparator&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nullsLast"
        native="false"
        return="com.annimon.stream.ComparatorCompat&lt;T&gt;"
        jni-return="Lcom/annimon/stream/ComparatorCompat&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/ComparatorCompat;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nullsLast"
        native="false"
        return="com.annimon.stream.ComparatorCompat&lt;T&gt;"
        jni-return="Lcom/annimon/stream/ComparatorCompat&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Comparator;)Lcom/annimon/stream/ComparatorCompat;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="comparator"
          type="java.util.Comparator&lt;? super T&gt;"
          jni-type="Ljava/util/Comparator&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="reversed"
        native="false"
        return="com.annimon.stream.ComparatorCompat&lt;T&gt;"
        jni-return="Lcom/annimon/stream/ComparatorCompat&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/ComparatorCompat;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="reversed"
        native="false"
        return="java.util.Comparator"
        jni-return="Ljava/util/Comparator;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()Ljava/util/Comparator;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="reversed"
        native="false"
        return="java.util.Comparator&lt;T&gt;"
        jni-return="Ljava/util/Comparator&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Comparator;)Ljava/util/Comparator;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="comparator"
          type="java.util.Comparator&lt;T&gt;"
          jni-type="Ljava/util/Comparator&lt;TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="reverseOrder"
        native="false"
        return="com.annimon.stream.ComparatorCompat&lt;T&gt;"
        jni-return="Lcom/annimon/stream/ComparatorCompat&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/ComparatorCompat;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound=""
            classBound=""
            interfaceBounds="java.lang.Comparable&lt;? super T&gt;"
            jni-interfaceBounds="Ljava/lang/Comparable&lt;-TT;&gt;;" />
        </typeParameters>
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="thenComparing"
        native="false"
        return="com.annimon.stream.ComparatorCompat&lt;T&gt;"
        jni-return="Lcom/annimon/stream/ComparatorCompat&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/ComparatorCompat;">
        <typeParameters>
          <typeParameter
            name="U"
            jni-classBound=""
            classBound=""
            interfaceBounds="java.lang.Comparable&lt;? super U&gt;"
            jni-interfaceBounds="Ljava/lang/Comparable&lt;-TU;&gt;;" />
        </typeParameters>
        <parameter
          name="keyExtractor"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends U&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TU;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="thenComparing"
        native="false"
        return="com.annimon.stream.ComparatorCompat&lt;T&gt;"
        jni-return="Lcom/annimon/stream/ComparatorCompat&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;Ljava/util/Comparator;)Lcom/annimon/stream/ComparatorCompat;">
        <typeParameters>
          <typeParameter
            name="U"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="keyExtractor"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends U&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TU;&gt;;" />
        <parameter
          name="keyComparator"
          type="java.util.Comparator&lt;? super U&gt;"
          jni-type="Ljava/util/Comparator&lt;-TU;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="thenComparing"
        native="false"
        return="com.annimon.stream.ComparatorCompat&lt;T&gt;"
        jni-return="Lcom/annimon/stream/ComparatorCompat&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Comparator;)Lcom/annimon/stream/ComparatorCompat;">
        <parameter
          name="other"
          type="java.util.Comparator&lt;? super T&gt;"
          jni-type="Ljava/util/Comparator&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="thenComparing"
        native="false"
        return="java.util.Comparator"
        jni-return="Ljava/util/Comparator;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/util/Comparator;)Ljava/util/Comparator;">
        <parameter
          name="p0"
          type="java.util.Comparator"
          jni-type="Ljava/util/Comparator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="thenComparing"
        native="false"
        return="java.util.Comparator&lt;T&gt;"
        jni-return="Ljava/util/Comparator&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Comparator;Ljava/util/Comparator;)Ljava/util/Comparator;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="c1"
          type="java.util.Comparator&lt;? super T&gt;"
          jni-type="Ljava/util/Comparator&lt;-TT;&gt;;" />
        <parameter
          name="c2"
          type="java.util.Comparator&lt;? super T&gt;"
          jni-type="Ljava/util/Comparator&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="thenComparingDouble"
        native="false"
        return="com.annimon.stream.ComparatorCompat&lt;T&gt;"
        jni-return="Lcom/annimon/stream/ComparatorCompat&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ToDoubleFunction;)Lcom/annimon/stream/ComparatorCompat;">
        <parameter
          name="keyExtractor"
          type="com.annimon.stream.function.ToDoubleFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToDoubleFunction&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="thenComparingInt"
        native="false"
        return="com.annimon.stream.ComparatorCompat&lt;T&gt;"
        jni-return="Lcom/annimon/stream/ComparatorCompat&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ToIntFunction;)Lcom/annimon/stream/ComparatorCompat;">
        <parameter
          name="keyExtractor"
          type="com.annimon.stream.function.ToIntFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToIntFunction&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="thenComparingLong"
        native="false"
        return="com.annimon.stream.ComparatorCompat&lt;T&gt;"
        jni-return="Lcom/annimon/stream/ComparatorCompat&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ToLongFunction;)Lcom/annimon/stream/ComparatorCompat;">
        <parameter
          name="keyExtractor"
          type="com.annimon.stream.function.ToLongFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToLongFunction&lt;-TT;&gt;;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/ComparatorCompat;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="ComparatorCompat.1"
      jni-signature="Lcom/annimon/stream/ComparatorCompat$1;"
      source-file-name="ComparatorCompat.java"
      static="true"
      visibility="">
      <implements
        name="java.util.Comparator"
        name-generic-aware="java.util.Comparator&lt;java.lang.Comparable&lt;java.lang.Object&gt;&gt;"
        jni-type="Ljava/util/Comparator&lt;Ljava/lang/Comparable&lt;Ljava/lang/Object;&gt;;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="compare"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Comparable;Ljava/lang/Comparable;)I">
        <parameter
          name="o1"
          type="java.lang.Comparable&lt;java.lang.Object&gt;"
          jni-type="Ljava/lang/Comparable&lt;Ljava/lang/Object;&gt;;" />
        <parameter
          name="o2"
          type="java.lang.Comparable&lt;java.lang.Object&gt;"
          jni-type="Ljava/lang/Comparable&lt;Ljava/lang/Object;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="compare"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)I">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
        <parameter
          name="p1"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/ComparatorCompat;"
      enclosing-method-name="thenComparing"
      enclosing-method-signature="(Ljava/util/Comparator;Ljava/util/Comparator;)Ljava/util/Comparator;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="ComparatorCompat.2"
      jni-signature="Lcom/annimon/stream/ComparatorCompat$2;"
      source-file-name="ComparatorCompat.java"
      static="true"
      visibility="">
      <implements
        name="java.util.Comparator"
        name-generic-aware="java.util.Comparator&lt;T&gt;"
        jni-type="Ljava/util/Comparator&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="compare"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)I">
        <parameter
          name="t1"
          type="T"
          jni-type="TT;" />
        <parameter
          name="t2"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/ComparatorCompat;"
      enclosing-method-name="comparing"
      enclosing-method-signature="(Lcom/annimon/stream/function/Function;Ljava/util/Comparator;)Lcom/annimon/stream/ComparatorCompat;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="ComparatorCompat.3"
      jni-signature="Lcom/annimon/stream/ComparatorCompat$3;"
      source-file-name="ComparatorCompat.java"
      static="true"
      visibility="">
      <implements
        name="java.util.Comparator"
        name-generic-aware="java.util.Comparator&lt;T&gt;"
        jni-type="Ljava/util/Comparator&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="compare"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)I">
        <parameter
          name="t1"
          type="T"
          jni-type="TT;" />
        <parameter
          name="t2"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/ComparatorCompat;"
      enclosing-method-name="comparing"
      enclosing-method-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/ComparatorCompat;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="ComparatorCompat.4"
      jni-signature="Lcom/annimon/stream/ComparatorCompat$4;"
      source-file-name="ComparatorCompat.java"
      static="true"
      visibility="">
      <implements
        name="java.util.Comparator"
        name-generic-aware="java.util.Comparator&lt;T&gt;"
        jni-type="Ljava/util/Comparator&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="compare"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)I">
        <parameter
          name="t1"
          type="T"
          jni-type="TT;" />
        <parameter
          name="t2"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/ComparatorCompat;"
      enclosing-method-name="comparingInt"
      enclosing-method-signature="(Lcom/annimon/stream/function/ToIntFunction;)Lcom/annimon/stream/ComparatorCompat;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="ComparatorCompat.5"
      jni-signature="Lcom/annimon/stream/ComparatorCompat$5;"
      source-file-name="ComparatorCompat.java"
      static="true"
      visibility="">
      <implements
        name="java.util.Comparator"
        name-generic-aware="java.util.Comparator&lt;T&gt;"
        jni-type="Ljava/util/Comparator&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="compare"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)I">
        <parameter
          name="t1"
          type="T"
          jni-type="TT;" />
        <parameter
          name="t2"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/ComparatorCompat;"
      enclosing-method-name="comparingLong"
      enclosing-method-signature="(Lcom/annimon/stream/function/ToLongFunction;)Lcom/annimon/stream/ComparatorCompat;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="ComparatorCompat.6"
      jni-signature="Lcom/annimon/stream/ComparatorCompat$6;"
      source-file-name="ComparatorCompat.java"
      static="true"
      visibility="">
      <implements
        name="java.util.Comparator"
        name-generic-aware="java.util.Comparator&lt;T&gt;"
        jni-type="Ljava/util/Comparator&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="compare"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)I">
        <parameter
          name="t1"
          type="T"
          jni-type="TT;" />
        <parameter
          name="t2"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/ComparatorCompat;"
      enclosing-method-name="comparingDouble"
      enclosing-method-signature="(Lcom/annimon/stream/function/ToDoubleFunction;)Lcom/annimon/stream/ComparatorCompat;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="ComparatorCompat.7"
      jni-signature="Lcom/annimon/stream/ComparatorCompat$7;"
      source-file-name="ComparatorCompat.java"
      static="true"
      visibility="">
      <implements
        name="java.util.Comparator"
        name-generic-aware="java.util.Comparator&lt;T&gt;"
        jni-type="Ljava/util/Comparator&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="compare"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)I">
        <parameter
          name="t1"
          type="T"
          jni-type="TT;" />
        <parameter
          name="t2"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/ComparatorCompat;"
      enclosing-method-name="nullsComparator"
      enclosing-method-signature="(ZLjava/util/Comparator;)Lcom/annimon/stream/ComparatorCompat;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="ComparatorCompat.8"
      jni-signature="Lcom/annimon/stream/ComparatorCompat$8;"
      source-file-name="ComparatorCompat.java"
      static="true"
      visibility="">
      <implements
        name="java.util.Comparator"
        name-generic-aware="java.util.Comparator&lt;T&gt;"
        jni-type="Ljava/util/Comparator&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="compare"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)I">
        <parameter
          name="t1"
          type="T"
          jni-type="TT;" />
        <parameter
          name="t2"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/ComparatorCompat;"
      enclosing-method-name="thenComparing"
      enclosing-method-signature="(Ljava/util/Comparator;)Lcom/annimon/stream/ComparatorCompat;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="ComparatorCompat.9"
      jni-signature="Lcom/annimon/stream/ComparatorCompat$9;"
      source-file-name="ComparatorCompat.java"
      static="false"
      visibility="">
      <implements
        name="java.util.Comparator"
        name-generic-aware="java.util.Comparator&lt;T&gt;"
        jni-type="Ljava/util/Comparator&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="compare"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)I">
        <parameter
          name="t1"
          type="T"
          jni-type="TT;" />
        <parameter
          name="t2"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="DoubleStream"
      jni-signature="Lcom/annimon/stream/DoubleStream;"
      source-file-name="DoubleStream.java"
      static="false"
      visibility="public">
      <implements
        name="java.io.Closeable"
        name-generic-aware="java.io.Closeable"
        jni-type="Ljava/io/Closeable;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="allMatch"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoublePredicate;)Z">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="anyMatch"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoublePredicate;)Z">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="average"
        native="false"
        return="com.annimon.stream.OptionalDouble"
        jni-return="Lcom/annimon/stream/OptionalDouble;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/OptionalDouble;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="boxed"
        native="false"
        return="com.annimon.stream.Stream&lt;java.lang.Double&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;Ljava/lang/Double;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Stream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="close"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="collect"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;Lcom/annimon/stream/function/ObjDoubleConsumer;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="supplier"
          type="com.annimon.stream.function.Supplier&lt;R&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;TR;&gt;;" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.ObjDoubleConsumer&lt;R&gt;"
          jni-type="Lcom/annimon/stream/function/ObjDoubleConsumer&lt;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="concat"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/DoubleStream;Lcom/annimon/stream/DoubleStream;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="a"
          type="com.annimon.stream.DoubleStream"
          jni-type="Lcom/annimon/stream/DoubleStream;" />
        <parameter
          name="b"
          type="com.annimon.stream.DoubleStream"
          jni-type="Lcom/annimon/stream/DoubleStream;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="count"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="custom"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="function"
          type="com.annimon.stream.function.Function&lt;com.annimon.stream.DoubleStream, R&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;Lcom/annimon/stream/DoubleStream;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="distinct"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/DoubleStream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="dropWhile"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="empty"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/DoubleStream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filter"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filterIndexed"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILcom/annimon/stream/function/IndexedDoublePredicate;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="from"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedDoublePredicate"
          jni-type="Lcom/annimon/stream/function/IndexedDoublePredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filterIndexed"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IndexedDoublePredicate;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedDoublePredicate"
          jni-type="Lcom/annimon/stream/function/IndexedDoublePredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filterNot"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="findFirst"
        native="false"
        return="com.annimon.stream.OptionalDouble"
        jni-return="Lcom/annimon/stream/OptionalDouble;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/OptionalDouble;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="findLast"
        native="false"
        return="com.annimon.stream.OptionalDouble"
        jni-return="Lcom/annimon/stream/OptionalDouble;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/OptionalDouble;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="findSingle"
        native="false"
        return="com.annimon.stream.OptionalDouble"
        jni-return="Lcom/annimon/stream/OptionalDouble;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/OptionalDouble;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="flatMap"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleFunction;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.DoubleFunction&lt;? extends com.annimon.stream.DoubleStream&gt;"
          jni-type="Lcom/annimon/stream/function/DoubleFunction&lt;+Lcom/annimon/stream/DoubleStream;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="forEach"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleConsumer;)V">
        <parameter
          name="action"
          type="com.annimon.stream.function.DoubleConsumer"
          jni-type="Lcom/annimon/stream/function/DoubleConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="forEachIndexed"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILcom/annimon/stream/function/IndexedDoubleConsumer;)V">
        <parameter
          name="from"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="action"
          type="com.annimon.stream.function.IndexedDoubleConsumer"
          jni-type="Lcom/annimon/stream/function/IndexedDoubleConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="forEachIndexed"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IndexedDoubleConsumer;)V">
        <parameter
          name="action"
          type="com.annimon.stream.function.IndexedDoubleConsumer"
          jni-type="Lcom/annimon/stream/function/IndexedDoubleConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="generate"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleSupplier;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="s"
          type="com.annimon.stream.function.DoubleSupplier"
          jni-type="Lcom/annimon/stream/function/DoubleSupplier;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="iterate"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(DLcom/annimon/stream/function/DoublePredicate;Lcom/annimon/stream/function/DoubleUnaryOperator;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="seed"
          type="double"
          jni-type="D" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
        <parameter
          name="op"
          type="com.annimon.stream.function.DoubleUnaryOperator"
          jni-type="Lcom/annimon/stream/function/DoubleUnaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="iterate"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(DLcom/annimon/stream/function/DoubleUnaryOperator;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="seed"
          type="double"
          jni-type="D" />
        <parameter
          name="f"
          type="com.annimon.stream.function.DoubleUnaryOperator"
          jni-type="Lcom/annimon/stream/function/DoubleUnaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="iterator"
        native="false"
        return="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
        jni-return="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="limit"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="maxSize"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="map"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleUnaryOperator;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.DoubleUnaryOperator"
          jni-type="Lcom/annimon/stream/function/DoubleUnaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapIndexed"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILcom/annimon/stream/function/IndexedDoubleUnaryOperator;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="from"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IndexedDoubleUnaryOperator"
          jni-type="Lcom/annimon/stream/function/IndexedDoubleUnaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapIndexed"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IndexedDoubleUnaryOperator;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IndexedDoubleUnaryOperator"
          jni-type="Lcom/annimon/stream/function/IndexedDoubleUnaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToInt"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleToIntFunction;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.DoubleToIntFunction"
          jni-type="Lcom/annimon/stream/function/DoubleToIntFunction;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToLong"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleToLongFunction;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.DoubleToLongFunction"
          jni-type="Lcom/annimon/stream/function/DoubleToLongFunction;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToObj"
        native="false"
        return="com.annimon.stream.Stream&lt;R&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TR;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleFunction;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.DoubleFunction&lt;? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/DoubleFunction&lt;+TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="max"
        native="false"
        return="com.annimon.stream.OptionalDouble"
        jni-return="Lcom/annimon/stream/OptionalDouble;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/OptionalDouble;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="min"
        native="false"
        return="com.annimon.stream.OptionalDouble"
        jni-return="Lcom/annimon/stream/OptionalDouble;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/OptionalDouble;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="noneMatch"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoublePredicate;)Z">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="of"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="t"
          type="double"
          jni-type="D" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="of"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="of"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([D)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="values"
          type="double..."
          jni-type="[D" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="onClose"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Runnable;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="closeHandler"
          type="java.lang.Runnable"
          jni-type="Ljava/lang/Runnable;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="peek"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleConsumer;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="action"
          type="com.annimon.stream.function.DoubleConsumer"
          jni-type="Lcom/annimon/stream/function/DoubleConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="reduce"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(DLcom/annimon/stream/function/DoubleBinaryOperator;)D">
        <parameter
          name="identity"
          type="double"
          jni-type="D" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.DoubleBinaryOperator"
          jni-type="Lcom/annimon/stream/function/DoubleBinaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="reduce"
        native="false"
        return="com.annimon.stream.OptionalDouble"
        jni-return="Lcom/annimon/stream/OptionalDouble;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleBinaryOperator;)Lcom/annimon/stream/OptionalDouble;">
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.DoubleBinaryOperator"
          jni-type="Lcom/annimon/stream/function/DoubleBinaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="sample"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="stepWidth"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="scan"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(DLcom/annimon/stream/function/DoubleBinaryOperator;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="identity"
          type="double"
          jni-type="D" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.DoubleBinaryOperator"
          jni-type="Lcom/annimon/stream/function/DoubleBinaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="scan"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleBinaryOperator;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.DoubleBinaryOperator"
          jni-type="Lcom/annimon/stream/function/DoubleBinaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="single"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="skip"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="n"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="sorted"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/DoubleStream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="sorted"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Comparator;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="comparator"
          type="java.util.Comparator&lt;java.lang.Double&gt;"
          jni-type="Ljava/util/Comparator&lt;Ljava/lang/Double;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="sum"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="takeUntil"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="stopPredicate"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="takeWhile"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toArray"
        native="false"
        return="double[]"
        jni-return="[D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/DoubleStream;"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      final="true"
      name="DoubleStream.1"
      jni-signature="Lcom/annimon/stream/DoubleStream$1;"
      source-file-name="DoubleStream.java"
      static="true"
      visibility="">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/DoubleStream;"
      enclosing-method-name="min"
      enclosing-method-signature="()Lcom/annimon/stream/OptionalDouble;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="DoubleStream.2"
      jni-signature="Lcom/annimon/stream/DoubleStream$2;"
      source-file-name="DoubleStream.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.DoubleBinaryOperator"
        name-generic-aware="com.annimon.stream.function.DoubleBinaryOperator"
        jni-type="Lcom/annimon/stream/function/DoubleBinaryOperator;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(DD)D">
        <parameter
          name="left"
          type="double"
          jni-type="D" />
        <parameter
          name="right"
          type="double"
          jni-type="D" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/DoubleStream;"
      enclosing-method-name="max"
      enclosing-method-signature="()Lcom/annimon/stream/OptionalDouble;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="DoubleStream.3"
      jni-signature="Lcom/annimon/stream/DoubleStream$3;"
      source-file-name="DoubleStream.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.DoubleBinaryOperator"
        name-generic-aware="com.annimon.stream.function.DoubleBinaryOperator"
        jni-type="Lcom/annimon/stream/function/DoubleBinaryOperator;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(DD)D">
        <parameter
          name="left"
          type="double"
          jni-type="D" />
        <parameter
          name="right"
          type="double"
          jni-type="D" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/DoubleStream;"
      enclosing-method-name="findLast"
      enclosing-method-signature="()Lcom/annimon/stream/OptionalDouble;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="DoubleStream.4"
      jni-signature="Lcom/annimon/stream/DoubleStream$4;"
      source-file-name="DoubleStream.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.DoubleBinaryOperator"
        name-generic-aware="com.annimon.stream.function.DoubleBinaryOperator"
        jni-type="Lcom/annimon/stream/function/DoubleBinaryOperator;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(DD)D">
        <parameter
          name="left"
          type="double"
          jni-type="D" />
        <parameter
          name="right"
          type="double"
          jni-type="D" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/DoubleStream;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="DoubleStream.5"
      jni-signature="Lcom/annimon/stream/DoubleStream$5;"
      source-file-name="DoubleStream.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.ToDoubleFunction"
        name-generic-aware="com.annimon.stream.function.ToDoubleFunction&lt;java.lang.Double&gt;"
        jni-type="Lcom/annimon/stream/function/ToDoubleFunction&lt;Ljava/lang/Double;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Double;)D">
        <parameter
          name="t"
          type="java.lang.Double"
          jni-type="Ljava/lang/Double;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;)D">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="Exceptional"
      jni-signature="Lcom/annimon/stream/Exceptional;"
      source-file-name="Exceptional.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="custom"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="function"
          type="com.annimon.stream.function.Function&lt;com.annimon.stream.Exceptional&lt;T&gt;, R&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;Lcom/annimon/stream/Exceptional&lt;TT;&gt;;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="equals"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="obj"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getException"
        native="false"
        return="java.lang.Throwable"
        jni-return="Ljava/lang/Throwable;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Throwable;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getOptional"
        native="false"
        return="com.annimon.stream.Optional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Optional;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getOrElse"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;)Ljava/lang/Object;">
        <parameter
          name="other"
          type="com.annimon.stream.function.Supplier&lt;? extends T&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;+TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getOrElse"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="other"
          type="T"
          jni-type="TT;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getOrThrow"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;">
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="java.lang.Throwable" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getOrThrow"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Throwable;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="E"
            jni-classBound="Ljava/lang/Throwable;"
            classBound="java.lang.Throwable"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="exception"
          type="E"
          jni-type="TE;" />
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="E" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getOrThrowRuntimeException"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;">
        <exception
          name="java/lang/RuntimeException"
          type="java.lang.RuntimeException"
          type-generic-aware="java.lang.RuntimeException" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hashCode"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ifException"
        native="false"
        return="com.annimon.stream.Exceptional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Exceptional&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Consumer;)Lcom/annimon/stream/Exceptional;">
        <parameter
          name="consumer"
          type="com.annimon.stream.function.Consumer&lt;java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/Consumer&lt;Ljava/lang/Throwable;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ifExceptionIs"
        native="false"
        return="com.annimon.stream.Exceptional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Exceptional&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Class;Lcom/annimon/stream/function/Consumer;)Lcom/annimon/stream/Exceptional;">
        <typeParameters>
          <typeParameter
            name="E"
            jni-classBound="Ljava/lang/Throwable;"
            classBound="java.lang.Throwable"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="throwableClass"
          type="java.lang.Class&lt;E&gt;"
          jni-type="Ljava/lang/Class&lt;TE;&gt;;" />
        <parameter
          name="consumer"
          type="com.annimon.stream.function.Consumer&lt;? super E&gt;"
          jni-type="Lcom/annimon/stream/function/Consumer&lt;-TE;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ifPresent"
        native="false"
        return="com.annimon.stream.Exceptional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Exceptional&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Consumer;)Lcom/annimon/stream/Exceptional;">
        <parameter
          name="consumer"
          type="com.annimon.stream.function.Consumer&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Consumer&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="isPresent"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="map"
        native="false"
        return="com.annimon.stream.Exceptional&lt;U&gt;"
        jni-return="Lcom/annimon/stream/Exceptional&lt;TU;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableFunction;)Lcom/annimon/stream/Exceptional;">
        <typeParameters>
          <typeParameter
            name="U"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.ThrowableFunction&lt;? super T, ? extends U, java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableFunction&lt;-TT;+TU;Ljava/lang/Throwable;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="of"
        native="false"
        return="com.annimon.stream.Exceptional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Exceptional&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableSupplier;)Lcom/annimon/stream/Exceptional;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="supplier"
          type="com.annimon.stream.function.ThrowableSupplier&lt;T, java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableSupplier&lt;TT;Ljava/lang/Throwable;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="of"
        native="false"
        return="com.annimon.stream.Exceptional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Exceptional&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Throwable;)Lcom/annimon/stream/Exceptional;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="throwable"
          type="java.lang.Throwable"
          jni-type="Ljava/lang/Throwable;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="or"
        native="false"
        return="com.annimon.stream.Exceptional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Exceptional&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/Exceptional;">
        <parameter
          name="supplier"
          type="com.annimon.stream.function.Supplier&lt;com.annimon.stream.Exceptional&lt;T&gt;&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;Lcom/annimon/stream/Exceptional&lt;TT;&gt;;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="recover"
        native="false"
        return="com.annimon.stream.Exceptional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Exceptional&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableFunction;)Lcom/annimon/stream/Exceptional;">
        <parameter
          name="function"
          type="com.annimon.stream.function.ThrowableFunction&lt;java.lang.Throwable, ? extends T, java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableFunction&lt;Ljava/lang/Throwable;+TT;Ljava/lang/Throwable;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="recoverWith"
        native="false"
        return="com.annimon.stream.Exceptional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Exceptional&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Exceptional;">
        <parameter
          name="function"
          type="com.annimon.stream.function.Function&lt;java.lang.Throwable, ? extends com.annimon.stream.Exceptional&lt;T&gt;&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;Ljava/lang/Throwable;+Lcom/annimon/stream/Exceptional&lt;TT;&gt;;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toString"
        native="false"
        return="java.lang.String"
        jni-return="Ljava/lang/String;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/String;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IntPair"
      jni-signature="Lcom/annimon/stream/IntPair;"
      source-file-name="IntPair.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntPair"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ILjava/lang/Object;)V">
        <parameter
          name="first"
          type="int"
          jni-type="I" />
        <parameter
          name="second"
          type="T"
          jni-type="TT;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="equals"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="obj"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getFirst"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getSecond"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hashCode"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toString"
        native="false"
        return="java.lang.String"
        jni-return="Ljava/lang/String;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/String;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IntStream"
      jni-signature="Lcom/annimon/stream/IntStream;"
      source-file-name="IntStream.java"
      static="false"
      visibility="public">
      <implements
        name="java.io.Closeable"
        name-generic-aware="java.io.Closeable"
        jni-type="Ljava/io/Closeable;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="allMatch"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntPredicate;)Z">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="anyMatch"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntPredicate;)Z">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="boxed"
        native="false"
        return="com.annimon.stream.Stream&lt;java.lang.Integer&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;Ljava/lang/Integer;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Stream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="close"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="collect"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;Lcom/annimon/stream/function/ObjIntConsumer;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="supplier"
          type="com.annimon.stream.function.Supplier&lt;R&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;TR;&gt;;" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.ObjIntConsumer&lt;R&gt;"
          jni-type="Lcom/annimon/stream/function/ObjIntConsumer&lt;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="concat"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/IntStream;Lcom/annimon/stream/IntStream;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="a"
          type="com.annimon.stream.IntStream"
          jni-type="Lcom/annimon/stream/IntStream;" />
        <parameter
          name="b"
          type="com.annimon.stream.IntStream"
          jni-type="Lcom/annimon/stream/IntStream;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="count"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="custom"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="function"
          type="com.annimon.stream.function.Function&lt;com.annimon.stream.IntStream, R&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;Lcom/annimon/stream/IntStream;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="distinct"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/IntStream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="dropWhile"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="empty"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/IntStream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filter"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filterIndexed"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILcom/annimon/stream/function/IndexedIntPredicate;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="from"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedIntPredicate"
          jni-type="Lcom/annimon/stream/function/IndexedIntPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filterIndexed"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IndexedIntPredicate;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedIntPredicate"
          jni-type="Lcom/annimon/stream/function/IndexedIntPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filterNot"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="findFirst"
        native="false"
        return="com.annimon.stream.OptionalInt"
        jni-return="Lcom/annimon/stream/OptionalInt;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/OptionalInt;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="findLast"
        native="false"
        return="com.annimon.stream.OptionalInt"
        jni-return="Lcom/annimon/stream/OptionalInt;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/OptionalInt;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="findSingle"
        native="false"
        return="com.annimon.stream.OptionalInt"
        jni-return="Lcom/annimon/stream/OptionalInt;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/OptionalInt;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="flatMap"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntFunction;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IntFunction&lt;? extends com.annimon.stream.IntStream&gt;"
          jni-type="Lcom/annimon/stream/function/IntFunction&lt;+Lcom/annimon/stream/IntStream;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="forEach"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntConsumer;)V">
        <parameter
          name="action"
          type="com.annimon.stream.function.IntConsumer"
          jni-type="Lcom/annimon/stream/function/IntConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="forEachIndexed"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILcom/annimon/stream/function/IndexedIntConsumer;)V">
        <parameter
          name="from"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="action"
          type="com.annimon.stream.function.IndexedIntConsumer"
          jni-type="Lcom/annimon/stream/function/IndexedIntConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="forEachIndexed"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IndexedIntConsumer;)V">
        <parameter
          name="action"
          type="com.annimon.stream.function.IndexedIntConsumer"
          jni-type="Lcom/annimon/stream/function/IndexedIntConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="generate"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntSupplier;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="s"
          type="com.annimon.stream.function.IntSupplier"
          jni-type="Lcom/annimon/stream/function/IntSupplier;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="iterate"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ILcom/annimon/stream/function/IntPredicate;Lcom/annimon/stream/function/IntUnaryOperator;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="seed"
          type="int"
          jni-type="I" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
        <parameter
          name="op"
          type="com.annimon.stream.function.IntUnaryOperator"
          jni-type="Lcom/annimon/stream/function/IntUnaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="iterate"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ILcom/annimon/stream/function/IntUnaryOperator;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="seed"
          type="int"
          jni-type="I" />
        <parameter
          name="f"
          type="com.annimon.stream.function.IntUnaryOperator"
          jni-type="Lcom/annimon/stream/function/IntUnaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="iterator"
        native="false"
        return="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
        jni-return="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="limit"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Lcom/annimon/stream/IntStream;">
        <parameter
          name="maxSize"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="map"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntUnaryOperator;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IntUnaryOperator"
          jni-type="Lcom/annimon/stream/function/IntUnaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapIndexed"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILcom/annimon/stream/function/IntBinaryOperator;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="from"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IntBinaryOperator"
          jni-type="Lcom/annimon/stream/function/IntBinaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapIndexed"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntBinaryOperator;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IntBinaryOperator"
          jni-type="Lcom/annimon/stream/function/IntBinaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToDouble"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntToDoubleFunction;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IntToDoubleFunction"
          jni-type="Lcom/annimon/stream/function/IntToDoubleFunction;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToLong"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntToLongFunction;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IntToLongFunction"
          jni-type="Lcom/annimon/stream/function/IntToLongFunction;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToObj"
        native="false"
        return="com.annimon.stream.Stream&lt;R&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TR;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntFunction;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IntFunction&lt;? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/IntFunction&lt;+TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="max"
        native="false"
        return="com.annimon.stream.OptionalInt"
        jni-return="Lcom/annimon/stream/OptionalInt;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/OptionalInt;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="min"
        native="false"
        return="com.annimon.stream.OptionalInt"
        jni-return="Lcom/annimon/stream/OptionalInt;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/OptionalInt;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="noneMatch"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntPredicate;)Z">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="of"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)Lcom/annimon/stream/IntStream;">
        <parameter
          name="t"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="of"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="of"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([I)Lcom/annimon/stream/IntStream;">
        <parameter
          name="values"
          type="int..."
          jni-type="[I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ofCodePoints"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/CharSequence;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="charSequence"
          type="java.lang.CharSequence"
          jni-type="Ljava/lang/CharSequence;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="onClose"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Runnable;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="closeHandler"
          type="java.lang.Runnable"
          jni-type="Ljava/lang/Runnable;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="peek"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntConsumer;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="action"
          type="com.annimon.stream.function.IntConsumer"
          jni-type="Lcom/annimon/stream/function/IntConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="range"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(II)Lcom/annimon/stream/IntStream;">
        <parameter
          name="startInclusive"
          type="int"
          jni-type="I" />
        <parameter
          name="endExclusive"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="rangeClosed"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(II)Lcom/annimon/stream/IntStream;">
        <parameter
          name="startInclusive"
          type="int"
          jni-type="I" />
        <parameter
          name="endInclusive"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="reduce"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ILcom/annimon/stream/function/IntBinaryOperator;)I">
        <parameter
          name="identity"
          type="int"
          jni-type="I" />
        <parameter
          name="op"
          type="com.annimon.stream.function.IntBinaryOperator"
          jni-type="Lcom/annimon/stream/function/IntBinaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="reduce"
        native="false"
        return="com.annimon.stream.OptionalInt"
        jni-return="Lcom/annimon/stream/OptionalInt;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntBinaryOperator;)Lcom/annimon/stream/OptionalInt;">
        <parameter
          name="op"
          type="com.annimon.stream.function.IntBinaryOperator"
          jni-type="Lcom/annimon/stream/function/IntBinaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="sample"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)Lcom/annimon/stream/IntStream;">
        <parameter
          name="stepWidth"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="scan"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ILcom/annimon/stream/function/IntBinaryOperator;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="identity"
          type="int"
          jni-type="I" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.IntBinaryOperator"
          jni-type="Lcom/annimon/stream/function/IntBinaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="scan"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntBinaryOperator;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.IntBinaryOperator"
          jni-type="Lcom/annimon/stream/function/IntBinaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="single"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="skip"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Lcom/annimon/stream/IntStream;">
        <parameter
          name="n"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="sorted"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/IntStream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="sorted"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Comparator;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="comparator"
          type="java.util.Comparator&lt;java.lang.Integer&gt;"
          jni-type="Ljava/util/Comparator&lt;Ljava/lang/Integer;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="sum"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="takeUntil"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="stopPredicate"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="takeWhile"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toArray"
        native="false"
        return="int[]"
        jni-return="[I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/IntStream;"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="true"
      name="IntStream.1"
      jni-signature="Lcom/annimon/stream/IntStream$1;"
      source-file-name="IntStream.java"
      static="true"
      visibility="">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/IntStream;"
      enclosing-method-name="min"
      enclosing-method-signature="()Lcom/annimon/stream/OptionalInt;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IntStream.2"
      jni-signature="Lcom/annimon/stream/IntStream$2;"
      source-file-name="IntStream.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.IntBinaryOperator"
        name-generic-aware="com.annimon.stream.function.IntBinaryOperator"
        jni-type="Lcom/annimon/stream/function/IntBinaryOperator;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(II)I">
        <parameter
          name="left"
          type="int"
          jni-type="I" />
        <parameter
          name="right"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/IntStream;"
      enclosing-method-name="max"
      enclosing-method-signature="()Lcom/annimon/stream/OptionalInt;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IntStream.3"
      jni-signature="Lcom/annimon/stream/IntStream$3;"
      source-file-name="IntStream.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.IntBinaryOperator"
        name-generic-aware="com.annimon.stream.function.IntBinaryOperator"
        jni-type="Lcom/annimon/stream/function/IntBinaryOperator;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(II)I">
        <parameter
          name="left"
          type="int"
          jni-type="I" />
        <parameter
          name="right"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/IntStream;"
      enclosing-method-name="findLast"
      enclosing-method-signature="()Lcom/annimon/stream/OptionalInt;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IntStream.4"
      jni-signature="Lcom/annimon/stream/IntStream$4;"
      source-file-name="IntStream.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.IntBinaryOperator"
        name-generic-aware="com.annimon.stream.function.IntBinaryOperator"
        jni-type="Lcom/annimon/stream/function/IntBinaryOperator;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(II)I">
        <parameter
          name="left"
          type="int"
          jni-type="I" />
        <parameter
          name="right"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/IntStream;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IntStream.5"
      jni-signature="Lcom/annimon/stream/IntStream$5;"
      source-file-name="IntStream.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.ToIntFunction"
        name-generic-aware="com.annimon.stream.function.ToIntFunction&lt;java.lang.Integer&gt;"
        jni-type="Lcom/annimon/stream/function/ToIntFunction&lt;Ljava/lang/Integer;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Integer;)I">
        <parameter
          name="t"
          type="java.lang.Integer"
          jni-type="Ljava/lang/Integer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;)I">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="LongStream"
      jni-signature="Lcom/annimon/stream/LongStream;"
      source-file-name="LongStream.java"
      static="false"
      visibility="public">
      <implements
        name="java.io.Closeable"
        name-generic-aware="java.io.Closeable"
        jni-type="Ljava/io/Closeable;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="allMatch"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongPredicate;)Z">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="anyMatch"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongPredicate;)Z">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="boxed"
        native="false"
        return="com.annimon.stream.Stream&lt;java.lang.Long&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;Ljava/lang/Long;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Stream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="close"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="collect"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;Lcom/annimon/stream/function/ObjLongConsumer;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="supplier"
          type="com.annimon.stream.function.Supplier&lt;R&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;TR;&gt;;" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.ObjLongConsumer&lt;R&gt;"
          jni-type="Lcom/annimon/stream/function/ObjLongConsumer&lt;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="concat"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/LongStream;Lcom/annimon/stream/LongStream;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="a"
          type="com.annimon.stream.LongStream"
          jni-type="Lcom/annimon/stream/LongStream;" />
        <parameter
          name="b"
          type="com.annimon.stream.LongStream"
          jni-type="Lcom/annimon/stream/LongStream;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="count"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="custom"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="function"
          type="com.annimon.stream.function.Function&lt;com.annimon.stream.LongStream, R&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;Lcom/annimon/stream/LongStream;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="distinct"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/LongStream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="dropWhile"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="empty"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/LongStream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filter"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filterIndexed"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILcom/annimon/stream/function/IndexedLongPredicate;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="from"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedLongPredicate"
          jni-type="Lcom/annimon/stream/function/IndexedLongPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filterIndexed"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IndexedLongPredicate;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedLongPredicate"
          jni-type="Lcom/annimon/stream/function/IndexedLongPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filterNot"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="findFirst"
        native="false"
        return="com.annimon.stream.OptionalLong"
        jni-return="Lcom/annimon/stream/OptionalLong;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/OptionalLong;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="findLast"
        native="false"
        return="com.annimon.stream.OptionalLong"
        jni-return="Lcom/annimon/stream/OptionalLong;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/OptionalLong;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="findSingle"
        native="false"
        return="com.annimon.stream.OptionalLong"
        jni-return="Lcom/annimon/stream/OptionalLong;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/OptionalLong;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="flatMap"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongFunction;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.LongFunction&lt;? extends com.annimon.stream.LongStream&gt;"
          jni-type="Lcom/annimon/stream/function/LongFunction&lt;+Lcom/annimon/stream/LongStream;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="forEach"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongConsumer;)V">
        <parameter
          name="action"
          type="com.annimon.stream.function.LongConsumer"
          jni-type="Lcom/annimon/stream/function/LongConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="forEachIndexed"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILcom/annimon/stream/function/IndexedLongConsumer;)V">
        <parameter
          name="from"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="action"
          type="com.annimon.stream.function.IndexedLongConsumer"
          jni-type="Lcom/annimon/stream/function/IndexedLongConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="forEachIndexed"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IndexedLongConsumer;)V">
        <parameter
          name="action"
          type="com.annimon.stream.function.IndexedLongConsumer"
          jni-type="Lcom/annimon/stream/function/IndexedLongConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="generate"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongSupplier;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="s"
          type="com.annimon.stream.function.LongSupplier"
          jni-type="Lcom/annimon/stream/function/LongSupplier;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="iterate"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(JLcom/annimon/stream/function/LongPredicate;Lcom/annimon/stream/function/LongUnaryOperator;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="seed"
          type="long"
          jni-type="J" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
        <parameter
          name="op"
          type="com.annimon.stream.function.LongUnaryOperator"
          jni-type="Lcom/annimon/stream/function/LongUnaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="iterate"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(JLcom/annimon/stream/function/LongUnaryOperator;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="seed"
          type="long"
          jni-type="J" />
        <parameter
          name="f"
          type="com.annimon.stream.function.LongUnaryOperator"
          jni-type="Lcom/annimon/stream/function/LongUnaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="iterator"
        native="false"
        return="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
        jni-return="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="limit"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Lcom/annimon/stream/LongStream;">
        <parameter
          name="maxSize"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="map"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongUnaryOperator;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.LongUnaryOperator"
          jni-type="Lcom/annimon/stream/function/LongUnaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapIndexed"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILcom/annimon/stream/function/IndexedLongUnaryOperator;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="from"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IndexedLongUnaryOperator"
          jni-type="Lcom/annimon/stream/function/IndexedLongUnaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapIndexed"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IndexedLongUnaryOperator;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IndexedLongUnaryOperator"
          jni-type="Lcom/annimon/stream/function/IndexedLongUnaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToDouble"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongToDoubleFunction;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.LongToDoubleFunction"
          jni-type="Lcom/annimon/stream/function/LongToDoubleFunction;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToInt"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongToIntFunction;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.LongToIntFunction"
          jni-type="Lcom/annimon/stream/function/LongToIntFunction;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToObj"
        native="false"
        return="com.annimon.stream.Stream&lt;R&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TR;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongFunction;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.LongFunction&lt;? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/LongFunction&lt;+TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="max"
        native="false"
        return="com.annimon.stream.OptionalLong"
        jni-return="Lcom/annimon/stream/OptionalLong;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/OptionalLong;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="min"
        native="false"
        return="com.annimon.stream.OptionalLong"
        jni-return="Lcom/annimon/stream/OptionalLong;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/OptionalLong;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="noneMatch"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongPredicate;)Z">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="of"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Lcom/annimon/stream/LongStream;">
        <parameter
          name="t"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="of"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="of"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([J)Lcom/annimon/stream/LongStream;">
        <parameter
          name="values"
          type="long..."
          jni-type="[J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="onClose"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Runnable;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="closeHandler"
          type="java.lang.Runnable"
          jni-type="Ljava/lang/Runnable;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="peek"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongConsumer;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="action"
          type="com.annimon.stream.function.LongConsumer"
          jni-type="Lcom/annimon/stream/function/LongConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="range"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(JJ)Lcom/annimon/stream/LongStream;">
        <parameter
          name="startInclusive"
          type="long"
          jni-type="J" />
        <parameter
          name="endExclusive"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="rangeClosed"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(JJ)Lcom/annimon/stream/LongStream;">
        <parameter
          name="startInclusive"
          type="long"
          jni-type="J" />
        <parameter
          name="endInclusive"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="reduce"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(JLcom/annimon/stream/function/LongBinaryOperator;)J">
        <parameter
          name="identity"
          type="long"
          jni-type="J" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.LongBinaryOperator"
          jni-type="Lcom/annimon/stream/function/LongBinaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="reduce"
        native="false"
        return="com.annimon.stream.OptionalLong"
        jni-return="Lcom/annimon/stream/OptionalLong;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongBinaryOperator;)Lcom/annimon/stream/OptionalLong;">
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.LongBinaryOperator"
          jni-type="Lcom/annimon/stream/function/LongBinaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="sample"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)Lcom/annimon/stream/LongStream;">
        <parameter
          name="stepWidth"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="scan"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(JLcom/annimon/stream/function/LongBinaryOperator;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="identity"
          type="long"
          jni-type="J" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.LongBinaryOperator"
          jni-type="Lcom/annimon/stream/function/LongBinaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="scan"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongBinaryOperator;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.LongBinaryOperator"
          jni-type="Lcom/annimon/stream/function/LongBinaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="single"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="skip"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Lcom/annimon/stream/LongStream;">
        <parameter
          name="n"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="sorted"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/LongStream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="sorted"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Comparator;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="comparator"
          type="java.util.Comparator&lt;java.lang.Long&gt;"
          jni-type="Ljava/util/Comparator&lt;Ljava/lang/Long;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="sum"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="takeUntil"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="stopPredicate"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="takeWhile"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toArray"
        native="false"
        return="long[]"
        jni-return="[J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/LongStream;"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="true"
      name="LongStream.1"
      jni-signature="Lcom/annimon/stream/LongStream$1;"
      source-file-name="LongStream.java"
      static="true"
      visibility="">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/LongStream;"
      enclosing-method-name="min"
      enclosing-method-signature="()Lcom/annimon/stream/OptionalLong;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="LongStream.2"
      jni-signature="Lcom/annimon/stream/LongStream$2;"
      source-file-name="LongStream.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.LongBinaryOperator"
        name-generic-aware="com.annimon.stream.function.LongBinaryOperator"
        jni-type="Lcom/annimon/stream/function/LongBinaryOperator;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(JJ)J">
        <parameter
          name="left"
          type="long"
          jni-type="J" />
        <parameter
          name="right"
          type="long"
          jni-type="J" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/LongStream;"
      enclosing-method-name="max"
      enclosing-method-signature="()Lcom/annimon/stream/OptionalLong;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="LongStream.3"
      jni-signature="Lcom/annimon/stream/LongStream$3;"
      source-file-name="LongStream.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.LongBinaryOperator"
        name-generic-aware="com.annimon.stream.function.LongBinaryOperator"
        jni-type="Lcom/annimon/stream/function/LongBinaryOperator;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(JJ)J">
        <parameter
          name="left"
          type="long"
          jni-type="J" />
        <parameter
          name="right"
          type="long"
          jni-type="J" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/LongStream;"
      enclosing-method-name="findLast"
      enclosing-method-signature="()Lcom/annimon/stream/OptionalLong;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="LongStream.4"
      jni-signature="Lcom/annimon/stream/LongStream$4;"
      source-file-name="LongStream.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.LongBinaryOperator"
        name-generic-aware="com.annimon.stream.function.LongBinaryOperator"
        jni-type="Lcom/annimon/stream/function/LongBinaryOperator;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(JJ)J">
        <parameter
          name="left"
          type="long"
          jni-type="J" />
        <parameter
          name="right"
          type="long"
          jni-type="J" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/LongStream;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="LongStream.5"
      jni-signature="Lcom/annimon/stream/LongStream$5;"
      source-file-name="LongStream.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.ToLongFunction"
        name-generic-aware="com.annimon.stream.function.ToLongFunction&lt;java.lang.Long&gt;"
        jni-type="Lcom/annimon/stream/function/ToLongFunction&lt;Ljava/lang/Long;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Long;)J">
        <parameter
          name="t"
          type="java.lang.Long"
          jni-type="Ljava/lang/Long;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;)J">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Objects"
      jni-signature="Lcom/annimon/stream/Objects;"
      source-file-name="Objects.java"
      static="false"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="compare"
        native="false"
        return="int"
        jni-return="I"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)I">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="a"
          type="T"
          jni-type="TT;" />
        <parameter
          name="b"
          type="T"
          jni-type="TT;" />
        <parameter
          name="c"
          type="java.util.Comparator&lt;? super T&gt;"
          jni-type="Ljava/util/Comparator&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="compareInt"
        native="false"
        return="int"
        jni-return="I"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(II)I">
        <parameter
          name="x"
          type="int"
          jni-type="I" />
        <parameter
          name="y"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="compareLong"
        native="false"
        return="int"
        jni-return="I"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(JJ)I">
        <parameter
          name="x"
          type="long"
          jni-type="J" />
        <parameter
          name="y"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="deepEquals"
        native="false"
        return="boolean"
        jni-return="Z"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)Z">
        <parameter
          name="a"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
        <parameter
          name="b"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="equals"
        native="false"
        return="boolean"
        jni-return="Z"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)Z">
        <parameter
          name="a"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
        <parameter
          name="b"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hash"
        native="false"
        return="int"
        jni-return="I"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([Ljava/lang/Object;)I">
        <parameter
          name="values"
          type="java.lang.Object..."
          jni-type="[Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hashCode"
        native="false"
        return="int"
        jni-return="I"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)I">
        <parameter
          name="o"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="isNull"
        native="false"
        return="boolean"
        jni-return="Z"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="obj"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nonNull"
        native="false"
        return="boolean"
        jni-return="Z"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="obj"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="requireNonNull"
        native="false"
        return="T"
        jni-return="TT;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="obj"
          type="T"
          jni-type="TT;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="requireNonNull"
        native="false"
        return="T"
        jni-return="TT;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Lcom/annimon/stream/function/Supplier;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="obj"
          type="T"
          jni-type="TT;" />
        <parameter
          name="messageSupplier"
          type="com.annimon.stream.function.Supplier&lt;java.lang.String&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;Ljava/lang/String;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="requireNonNull"
        native="false"
        return="T"
        jni-return="TT;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="obj"
          type="T"
          jni-type="TT;" />
        <parameter
          name="message"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="requireNonNullElements"
        native="false"
        return="java.util.Collection&lt;T&gt;"
        jni-return="Ljava/util/Collection&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Collection;)Ljava/util/Collection;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="collection"
          type="java.util.Collection&lt;T&gt;"
          jni-type="Ljava/util/Collection&lt;TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="requireNonNullElse"
        native="false"
        return="T"
        jni-return="TT;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="obj"
          type="T"
          jni-type="TT;" />
        <parameter
          name="defaultObj"
          type="T"
          jni-type="TT;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="requireNonNullElseGet"
        native="false"
        return="T"
        jni-return="TT;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Lcom/annimon/stream/function/Supplier;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="obj"
          type="T"
          jni-type="TT;" />
        <parameter
          name="supplier"
          type="com.annimon.stream.function.Supplier&lt;? extends T&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;+TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toString"
        native="false"
        return="java.lang.String"
        jni-return="Ljava/lang/String;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;">
        <parameter
          name="o"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
        <parameter
          name="nullDefault"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="Optional"
      jni-signature="Lcom/annimon/stream/Optional;"
      source-file-name="Optional.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="custom"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="function"
          type="com.annimon.stream.function.Function&lt;com.annimon.stream.Optional&lt;T&gt;, R&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;Lcom/annimon/stream/Optional&lt;TT;&gt;;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="empty"
        native="false"
        return="com.annimon.stream.Optional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Optional;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="equals"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="obj"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="executeIfAbsent"
        native="false"
        return="com.annimon.stream.Optional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Runnable;)Lcom/annimon/stream/Optional;">
        <parameter
          name="action"
          type="java.lang.Runnable"
          jni-type="Ljava/lang/Runnable;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="executeIfPresent"
        native="false"
        return="com.annimon.stream.Optional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Consumer;)Lcom/annimon/stream/Optional;">
        <parameter
          name="consumer"
          type="com.annimon.stream.function.Consumer&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Consumer&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filter"
        native="false"
        return="com.annimon.stream.Optional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/Optional;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filterNot"
        native="false"
        return="com.annimon.stream.Optional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/Optional;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="flatMap"
        native="false"
        return="com.annimon.stream.Optional&lt;U&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TU;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Optional;">
        <typeParameters>
          <typeParameter
            name="U"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.Function&lt;? super T, com.annimon.stream.Optional&lt;U&gt;&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;Lcom/annimon/stream/Optional&lt;TU;&gt;;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hashCode"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ifPresent"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Consumer;)V">
        <parameter
          name="consumer"
          type="com.annimon.stream.function.Consumer&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Consumer&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ifPresentOrElse"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Consumer;Ljava/lang/Runnable;)V">
        <parameter
          name="consumer"
          type="com.annimon.stream.function.Consumer&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Consumer&lt;-TT;&gt;;" />
        <parameter
          name="emptyAction"
          type="java.lang.Runnable"
          jni-type="Ljava/lang/Runnable;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="isEmpty"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="isPresent"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="map"
        native="false"
        return="com.annimon.stream.Optional&lt;U&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TU;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Optional;">
        <typeParameters>
          <typeParameter
            name="U"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends U&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TU;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToBoolean"
        native="false"
        return="com.annimon.stream.OptionalBoolean"
        jni-return="Lcom/annimon/stream/OptionalBoolean;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ToBooleanFunction;)Lcom/annimon/stream/OptionalBoolean;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.ToBooleanFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToBooleanFunction&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToDouble"
        native="false"
        return="com.annimon.stream.OptionalDouble"
        jni-return="Lcom/annimon/stream/OptionalDouble;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ToDoubleFunction;)Lcom/annimon/stream/OptionalDouble;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.ToDoubleFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToDoubleFunction&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToInt"
        native="false"
        return="com.annimon.stream.OptionalInt"
        jni-return="Lcom/annimon/stream/OptionalInt;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ToIntFunction;)Lcom/annimon/stream/OptionalInt;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.ToIntFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToIntFunction&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToLong"
        native="false"
        return="com.annimon.stream.OptionalLong"
        jni-return="Lcom/annimon/stream/OptionalLong;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ToLongFunction;)Lcom/annimon/stream/OptionalLong;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.ToLongFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToLongFunction&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="of"
        native="false"
        return="com.annimon.stream.Optional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Lcom/annimon/stream/Optional;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="value"
          type="T"
          jni-type="TT;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ofNullable"
        native="false"
        return="com.annimon.stream.Optional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Lcom/annimon/stream/Optional;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="value"
          type="T"
          jni-type="TT;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="or"
        native="false"
        return="com.annimon.stream.Optional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/Optional;">
        <parameter
          name="supplier"
          type="com.annimon.stream.function.Supplier&lt;com.annimon.stream.Optional&lt;T&gt;&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;Lcom/annimon/stream/Optional&lt;TT;&gt;;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="orElse"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="other"
          type="T"
          jni-type="TT;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="orElseGet"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;)Ljava/lang/Object;">
        <parameter
          name="other"
          type="com.annimon.stream.function.Supplier&lt;? extends T&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;+TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="orElseThrow"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="orElseThrow"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="X"
            jni-classBound="Ljava/lang/Throwable;"
            classBound="java.lang.Throwable"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="exc"
          type="com.annimon.stream.function.Supplier&lt;? extends X&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;+TX;&gt;;" />
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="X" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="select"
        native="false"
        return="com.annimon.stream.Optional&lt;R&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TR;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Class;)Lcom/annimon/stream/Optional;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="clazz"
          type="java.lang.Class&lt;R&gt;"
          jni-type="Ljava/lang/Class&lt;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="stream"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Stream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toString"
        native="false"
        return="java.lang.String"
        jni-return="Ljava/lang/String;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/String;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="OptionalBoolean"
      jni-signature="Lcom/annimon/stream/OptionalBoolean;"
      source-file-name="OptionalBoolean.java"
      static="false"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="custom"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="function"
          type="com.annimon.stream.function.Function&lt;com.annimon.stream.OptionalBoolean, R&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;Lcom/annimon/stream/OptionalBoolean;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="empty"
        native="false"
        return="com.annimon.stream.OptionalBoolean"
        jni-return="Lcom/annimon/stream/OptionalBoolean;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/OptionalBoolean;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="equals"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="obj"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="executeIfAbsent"
        native="false"
        return="com.annimon.stream.OptionalBoolean"
        jni-return="Lcom/annimon/stream/OptionalBoolean;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Runnable;)Lcom/annimon/stream/OptionalBoolean;">
        <parameter
          name="action"
          type="java.lang.Runnable"
          jni-type="Ljava/lang/Runnable;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="executeIfPresent"
        native="false"
        return="com.annimon.stream.OptionalBoolean"
        jni-return="Lcom/annimon/stream/OptionalBoolean;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/BooleanConsumer;)Lcom/annimon/stream/OptionalBoolean;">
        <parameter
          name="consumer"
          type="com.annimon.stream.function.BooleanConsumer"
          jni-type="Lcom/annimon/stream/function/BooleanConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filter"
        native="false"
        return="com.annimon.stream.OptionalBoolean"
        jni-return="Lcom/annimon/stream/OptionalBoolean;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/BooleanPredicate;)Lcom/annimon/stream/OptionalBoolean;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.BooleanPredicate"
          jni-type="Lcom/annimon/stream/function/BooleanPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filterNot"
        native="false"
        return="com.annimon.stream.OptionalBoolean"
        jni-return="Lcom/annimon/stream/OptionalBoolean;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/BooleanPredicate;)Lcom/annimon/stream/OptionalBoolean;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.BooleanPredicate"
          jni-type="Lcom/annimon/stream/function/BooleanPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getAsBoolean"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hashCode"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ifPresent"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/BooleanConsumer;)V">
        <parameter
          name="consumer"
          type="com.annimon.stream.function.BooleanConsumer"
          jni-type="Lcom/annimon/stream/function/BooleanConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ifPresentOrElse"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/BooleanConsumer;Ljava/lang/Runnable;)V">
        <parameter
          name="consumer"
          type="com.annimon.stream.function.BooleanConsumer"
          jni-type="Lcom/annimon/stream/function/BooleanConsumer;" />
        <parameter
          name="emptyAction"
          type="java.lang.Runnable"
          jni-type="Ljava/lang/Runnable;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="isEmpty"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="isPresent"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="map"
        native="false"
        return="com.annimon.stream.OptionalBoolean"
        jni-return="Lcom/annimon/stream/OptionalBoolean;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/BooleanPredicate;)Lcom/annimon/stream/OptionalBoolean;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.BooleanPredicate"
          jni-type="Lcom/annimon/stream/function/BooleanPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToObj"
        native="false"
        return="com.annimon.stream.Optional&lt;U&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TU;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/BooleanFunction;)Lcom/annimon/stream/Optional;">
        <typeParameters>
          <typeParameter
            name="U"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.BooleanFunction&lt;U&gt;"
          jni-type="Lcom/annimon/stream/function/BooleanFunction&lt;TU;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="of"
        native="false"
        return="com.annimon.stream.OptionalBoolean"
        jni-return="Lcom/annimon/stream/OptionalBoolean;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Z)Lcom/annimon/stream/OptionalBoolean;">
        <parameter
          name="value"
          type="boolean"
          jni-type="Z" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ofNullable"
        native="false"
        return="com.annimon.stream.OptionalBoolean"
        jni-return="Lcom/annimon/stream/OptionalBoolean;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Boolean;)Lcom/annimon/stream/OptionalBoolean;">
        <parameter
          name="value"
          type="java.lang.Boolean"
          jni-type="Ljava/lang/Boolean;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="or"
        native="false"
        return="com.annimon.stream.OptionalBoolean"
        jni-return="Lcom/annimon/stream/OptionalBoolean;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/OptionalBoolean;">
        <parameter
          name="supplier"
          type="com.annimon.stream.function.Supplier&lt;com.annimon.stream.OptionalBoolean&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;Lcom/annimon/stream/OptionalBoolean;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="orElse"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Z)Z">
        <parameter
          name="other"
          type="boolean"
          jni-type="Z" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="orElseGet"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/BooleanSupplier;)Z">
        <parameter
          name="other"
          type="com.annimon.stream.function.BooleanSupplier"
          jni-type="Lcom/annimon/stream/function/BooleanSupplier;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="orElseThrow"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="orElseThrow"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;)Z">
        <typeParameters>
          <typeParameter
            name="X"
            jni-classBound="Ljava/lang/Throwable;"
            classBound="java.lang.Throwable"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="exceptionSupplier"
          type="com.annimon.stream.function.Supplier&lt;X&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;TX;&gt;;" />
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="X" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toString"
        native="false"
        return="java.lang.String"
        jni-return="Ljava/lang/String;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/String;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="OptionalDouble"
      jni-signature="Lcom/annimon/stream/OptionalDouble;"
      source-file-name="OptionalDouble.java"
      static="false"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="custom"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="function"
          type="com.annimon.stream.function.Function&lt;com.annimon.stream.OptionalDouble, R&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;Lcom/annimon/stream/OptionalDouble;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="empty"
        native="false"
        return="com.annimon.stream.OptionalDouble"
        jni-return="Lcom/annimon/stream/OptionalDouble;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/OptionalDouble;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="equals"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="obj"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="executeIfAbsent"
        native="false"
        return="com.annimon.stream.OptionalDouble"
        jni-return="Lcom/annimon/stream/OptionalDouble;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Runnable;)Lcom/annimon/stream/OptionalDouble;">
        <parameter
          name="action"
          type="java.lang.Runnable"
          jni-type="Ljava/lang/Runnable;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="executeIfPresent"
        native="false"
        return="com.annimon.stream.OptionalDouble"
        jni-return="Lcom/annimon/stream/OptionalDouble;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleConsumer;)Lcom/annimon/stream/OptionalDouble;">
        <parameter
          name="consumer"
          type="com.annimon.stream.function.DoubleConsumer"
          jni-type="Lcom/annimon/stream/function/DoubleConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filter"
        native="false"
        return="com.annimon.stream.OptionalDouble"
        jni-return="Lcom/annimon/stream/OptionalDouble;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/OptionalDouble;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filterNot"
        native="false"
        return="com.annimon.stream.OptionalDouble"
        jni-return="Lcom/annimon/stream/OptionalDouble;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/OptionalDouble;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getAsDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hashCode"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ifPresent"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleConsumer;)V">
        <parameter
          name="consumer"
          type="com.annimon.stream.function.DoubleConsumer"
          jni-type="Lcom/annimon/stream/function/DoubleConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ifPresentOrElse"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleConsumer;Ljava/lang/Runnable;)V">
        <parameter
          name="consumer"
          type="com.annimon.stream.function.DoubleConsumer"
          jni-type="Lcom/annimon/stream/function/DoubleConsumer;" />
        <parameter
          name="emptyAction"
          type="java.lang.Runnable"
          jni-type="Ljava/lang/Runnable;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="isEmpty"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="isPresent"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="map"
        native="false"
        return="com.annimon.stream.OptionalDouble"
        jni-return="Lcom/annimon/stream/OptionalDouble;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleUnaryOperator;)Lcom/annimon/stream/OptionalDouble;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.DoubleUnaryOperator"
          jni-type="Lcom/annimon/stream/function/DoubleUnaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToInt"
        native="false"
        return="com.annimon.stream.OptionalInt"
        jni-return="Lcom/annimon/stream/OptionalInt;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleToIntFunction;)Lcom/annimon/stream/OptionalInt;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.DoubleToIntFunction"
          jni-type="Lcom/annimon/stream/function/DoubleToIntFunction;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToLong"
        native="false"
        return="com.annimon.stream.OptionalLong"
        jni-return="Lcom/annimon/stream/OptionalLong;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleToLongFunction;)Lcom/annimon/stream/OptionalLong;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.DoubleToLongFunction"
          jni-type="Lcom/annimon/stream/function/DoubleToLongFunction;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToObj"
        native="false"
        return="com.annimon.stream.Optional&lt;U&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TU;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleFunction;)Lcom/annimon/stream/Optional;">
        <typeParameters>
          <typeParameter
            name="U"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.DoubleFunction&lt;U&gt;"
          jni-type="Lcom/annimon/stream/function/DoubleFunction&lt;TU;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="of"
        native="false"
        return="com.annimon.stream.OptionalDouble"
        jni-return="Lcom/annimon/stream/OptionalDouble;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)Lcom/annimon/stream/OptionalDouble;">
        <parameter
          name="value"
          type="double"
          jni-type="D" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ofNullable"
        native="false"
        return="com.annimon.stream.OptionalDouble"
        jni-return="Lcom/annimon/stream/OptionalDouble;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Double;)Lcom/annimon/stream/OptionalDouble;">
        <parameter
          name="value"
          type="java.lang.Double"
          jni-type="Ljava/lang/Double;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="or"
        native="false"
        return="com.annimon.stream.OptionalDouble"
        jni-return="Lcom/annimon/stream/OptionalDouble;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/OptionalDouble;">
        <parameter
          name="supplier"
          type="com.annimon.stream.function.Supplier&lt;com.annimon.stream.OptionalDouble&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;Lcom/annimon/stream/OptionalDouble;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="orElse"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)D">
        <parameter
          name="other"
          type="double"
          jni-type="D" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="orElseGet"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleSupplier;)D">
        <parameter
          name="other"
          type="com.annimon.stream.function.DoubleSupplier"
          jni-type="Lcom/annimon/stream/function/DoubleSupplier;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="orElseThrow"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="orElseThrow"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;)D">
        <typeParameters>
          <typeParameter
            name="X"
            jni-classBound="Ljava/lang/Throwable;"
            classBound="java.lang.Throwable"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="exceptionSupplier"
          type="com.annimon.stream.function.Supplier&lt;X&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;TX;&gt;;" />
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="X" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="stream"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/DoubleStream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toString"
        native="false"
        return="java.lang.String"
        jni-return="Ljava/lang/String;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/String;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="OptionalInt"
      jni-signature="Lcom/annimon/stream/OptionalInt;"
      source-file-name="OptionalInt.java"
      static="false"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="custom"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="function"
          type="com.annimon.stream.function.Function&lt;com.annimon.stream.OptionalInt, R&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;Lcom/annimon/stream/OptionalInt;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="empty"
        native="false"
        return="com.annimon.stream.OptionalInt"
        jni-return="Lcom/annimon/stream/OptionalInt;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/OptionalInt;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="equals"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="obj"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="executeIfAbsent"
        native="false"
        return="com.annimon.stream.OptionalInt"
        jni-return="Lcom/annimon/stream/OptionalInt;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Runnable;)Lcom/annimon/stream/OptionalInt;">
        <parameter
          name="action"
          type="java.lang.Runnable"
          jni-type="Ljava/lang/Runnable;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="executeIfPresent"
        native="false"
        return="com.annimon.stream.OptionalInt"
        jni-return="Lcom/annimon/stream/OptionalInt;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntConsumer;)Lcom/annimon/stream/OptionalInt;">
        <parameter
          name="consumer"
          type="com.annimon.stream.function.IntConsumer"
          jni-type="Lcom/annimon/stream/function/IntConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filter"
        native="false"
        return="com.annimon.stream.OptionalInt"
        jni-return="Lcom/annimon/stream/OptionalInt;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/OptionalInt;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filterNot"
        native="false"
        return="com.annimon.stream.OptionalInt"
        jni-return="Lcom/annimon/stream/OptionalInt;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/OptionalInt;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getAsInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hashCode"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ifPresent"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntConsumer;)V">
        <parameter
          name="consumer"
          type="com.annimon.stream.function.IntConsumer"
          jni-type="Lcom/annimon/stream/function/IntConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ifPresentOrElse"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntConsumer;Ljava/lang/Runnable;)V">
        <parameter
          name="consumer"
          type="com.annimon.stream.function.IntConsumer"
          jni-type="Lcom/annimon/stream/function/IntConsumer;" />
        <parameter
          name="emptyAction"
          type="java.lang.Runnable"
          jni-type="Ljava/lang/Runnable;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="isEmpty"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="isPresent"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="map"
        native="false"
        return="com.annimon.stream.OptionalInt"
        jni-return="Lcom/annimon/stream/OptionalInt;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntUnaryOperator;)Lcom/annimon/stream/OptionalInt;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IntUnaryOperator"
          jni-type="Lcom/annimon/stream/function/IntUnaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToDouble"
        native="false"
        return="com.annimon.stream.OptionalDouble"
        jni-return="Lcom/annimon/stream/OptionalDouble;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntToDoubleFunction;)Lcom/annimon/stream/OptionalDouble;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IntToDoubleFunction"
          jni-type="Lcom/annimon/stream/function/IntToDoubleFunction;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToLong"
        native="false"
        return="com.annimon.stream.OptionalLong"
        jni-return="Lcom/annimon/stream/OptionalLong;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntToLongFunction;)Lcom/annimon/stream/OptionalLong;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IntToLongFunction"
          jni-type="Lcom/annimon/stream/function/IntToLongFunction;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToObj"
        native="false"
        return="com.annimon.stream.Optional&lt;U&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TU;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntFunction;)Lcom/annimon/stream/Optional;">
        <typeParameters>
          <typeParameter
            name="U"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IntFunction&lt;U&gt;"
          jni-type="Lcom/annimon/stream/function/IntFunction&lt;TU;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="of"
        native="false"
        return="com.annimon.stream.OptionalInt"
        jni-return="Lcom/annimon/stream/OptionalInt;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)Lcom/annimon/stream/OptionalInt;">
        <parameter
          name="value"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ofNullable"
        native="false"
        return="com.annimon.stream.OptionalInt"
        jni-return="Lcom/annimon/stream/OptionalInt;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Integer;)Lcom/annimon/stream/OptionalInt;">
        <parameter
          name="value"
          type="java.lang.Integer"
          jni-type="Ljava/lang/Integer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="or"
        native="false"
        return="com.annimon.stream.OptionalInt"
        jni-return="Lcom/annimon/stream/OptionalInt;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/OptionalInt;">
        <parameter
          name="supplier"
          type="com.annimon.stream.function.Supplier&lt;com.annimon.stream.OptionalInt&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;Lcom/annimon/stream/OptionalInt;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="orElse"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)I">
        <parameter
          name="other"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="orElseGet"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntSupplier;)I">
        <parameter
          name="other"
          type="com.annimon.stream.function.IntSupplier"
          jni-type="Lcom/annimon/stream/function/IntSupplier;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="orElseThrow"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="orElseThrow"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;)I">
        <typeParameters>
          <typeParameter
            name="X"
            jni-classBound="Ljava/lang/Throwable;"
            classBound="java.lang.Throwable"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="exceptionSupplier"
          type="com.annimon.stream.function.Supplier&lt;X&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;TX;&gt;;" />
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="X" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="stream"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/IntStream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toString"
        native="false"
        return="java.lang.String"
        jni-return="Ljava/lang/String;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/String;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="OptionalLong"
      jni-signature="Lcom/annimon/stream/OptionalLong;"
      source-file-name="OptionalLong.java"
      static="false"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="custom"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="function"
          type="com.annimon.stream.function.Function&lt;com.annimon.stream.OptionalLong, R&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;Lcom/annimon/stream/OptionalLong;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="empty"
        native="false"
        return="com.annimon.stream.OptionalLong"
        jni-return="Lcom/annimon/stream/OptionalLong;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/OptionalLong;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="equals"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="obj"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="executeIfAbsent"
        native="false"
        return="com.annimon.stream.OptionalLong"
        jni-return="Lcom/annimon/stream/OptionalLong;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Runnable;)Lcom/annimon/stream/OptionalLong;">
        <parameter
          name="action"
          type="java.lang.Runnable"
          jni-type="Ljava/lang/Runnable;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="executeIfPresent"
        native="false"
        return="com.annimon.stream.OptionalLong"
        jni-return="Lcom/annimon/stream/OptionalLong;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongConsumer;)Lcom/annimon/stream/OptionalLong;">
        <parameter
          name="consumer"
          type="com.annimon.stream.function.LongConsumer"
          jni-type="Lcom/annimon/stream/function/LongConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filter"
        native="false"
        return="com.annimon.stream.OptionalLong"
        jni-return="Lcom/annimon/stream/OptionalLong;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/OptionalLong;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filterNot"
        native="false"
        return="com.annimon.stream.OptionalLong"
        jni-return="Lcom/annimon/stream/OptionalLong;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/OptionalLong;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getAsLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hashCode"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ifPresent"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongConsumer;)V">
        <parameter
          name="consumer"
          type="com.annimon.stream.function.LongConsumer"
          jni-type="Lcom/annimon/stream/function/LongConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ifPresentOrElse"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongConsumer;Ljava/lang/Runnable;)V">
        <parameter
          name="consumer"
          type="com.annimon.stream.function.LongConsumer"
          jni-type="Lcom/annimon/stream/function/LongConsumer;" />
        <parameter
          name="emptyAction"
          type="java.lang.Runnable"
          jni-type="Ljava/lang/Runnable;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="isEmpty"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="isPresent"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="map"
        native="false"
        return="com.annimon.stream.OptionalLong"
        jni-return="Lcom/annimon/stream/OptionalLong;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongUnaryOperator;)Lcom/annimon/stream/OptionalLong;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.LongUnaryOperator"
          jni-type="Lcom/annimon/stream/function/LongUnaryOperator;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToInt"
        native="false"
        return="com.annimon.stream.OptionalInt"
        jni-return="Lcom/annimon/stream/OptionalInt;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongToIntFunction;)Lcom/annimon/stream/OptionalInt;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.LongToIntFunction"
          jni-type="Lcom/annimon/stream/function/LongToIntFunction;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToObj"
        native="false"
        return="com.annimon.stream.Optional&lt;U&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TU;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongFunction;)Lcom/annimon/stream/Optional;">
        <typeParameters>
          <typeParameter
            name="U"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.LongFunction&lt;U&gt;"
          jni-type="Lcom/annimon/stream/function/LongFunction&lt;TU;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="of"
        native="false"
        return="com.annimon.stream.OptionalLong"
        jni-return="Lcom/annimon/stream/OptionalLong;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Lcom/annimon/stream/OptionalLong;">
        <parameter
          name="value"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ofNullable"
        native="false"
        return="com.annimon.stream.OptionalLong"
        jni-return="Lcom/annimon/stream/OptionalLong;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Long;)Lcom/annimon/stream/OptionalLong;">
        <parameter
          name="value"
          type="java.lang.Long"
          jni-type="Ljava/lang/Long;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="or"
        native="false"
        return="com.annimon.stream.OptionalLong"
        jni-return="Lcom/annimon/stream/OptionalLong;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/OptionalLong;">
        <parameter
          name="supplier"
          type="com.annimon.stream.function.Supplier&lt;com.annimon.stream.OptionalLong&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;Lcom/annimon/stream/OptionalLong;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="orElse"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)J">
        <parameter
          name="other"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="orElseGet"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongSupplier;)J">
        <parameter
          name="other"
          type="com.annimon.stream.function.LongSupplier"
          jni-type="Lcom/annimon/stream/function/LongSupplier;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="orElseThrow"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="orElseThrow"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;)J">
        <typeParameters>
          <typeParameter
            name="X"
            jni-classBound="Ljava/lang/Throwable;"
            classBound="java.lang.Throwable"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="exceptionSupplier"
          type="com.annimon.stream.function.Supplier&lt;X&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;TX;&gt;;" />
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="X" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="stream"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/LongStream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toString"
        native="false"
        return="java.lang.String"
        jni-return="Ljava/lang/String;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/String;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="RandomCompat"
      jni-signature="Lcom/annimon/stream/RandomCompat;"
      source-file-name="RandomCompat.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="RandomCompat"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <constructor
        deprecated="not deprecated"
        final="false"
        name="RandomCompat"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)V">
        <parameter
          name="seed"
          type="long"
          jni-type="J" />
      </constructor>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="RandomCompat"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Random;)V">
        <parameter
          name="random"
          type="java.util.Random"
          jni-type="Ljava/util/Random;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="doubles"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/DoubleStream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="doubles"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(DD)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="randomNumberOrigin"
          type="double"
          jni-type="D" />
        <parameter
          name="randomNumberBound"
          type="double"
          jni-type="D" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="doubles"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="streamSize"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="doubles"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(JDD)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="streamSize"
          type="long"
          jni-type="J" />
        <parameter
          name="randomNumberOrigin"
          type="double"
          jni-type="D" />
        <parameter
          name="randomNumberBound"
          type="double"
          jni-type="D" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getRandom"
        native="false"
        return="java.util.Random"
        jni-return="Ljava/util/Random;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/util/Random;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ints"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/IntStream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ints"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(II)Lcom/annimon/stream/IntStream;">
        <parameter
          name="randomNumberOrigin"
          type="int"
          jni-type="I" />
        <parameter
          name="randomNumberBound"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ints"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Lcom/annimon/stream/IntStream;">
        <parameter
          name="streamSize"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ints"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(JII)Lcom/annimon/stream/IntStream;">
        <parameter
          name="streamSize"
          type="long"
          jni-type="J" />
        <parameter
          name="randomNumberOrigin"
          type="int"
          jni-type="I" />
        <parameter
          name="randomNumberBound"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="longs"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/LongStream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="longs"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Lcom/annimon/stream/LongStream;">
        <parameter
          name="streamSize"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="longs"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(JJ)Lcom/annimon/stream/LongStream;">
        <parameter
          name="randomNumberOrigin"
          type="long"
          jni-type="J" />
        <parameter
          name="randomNumberBound"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="longs"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(JJJ)Lcom/annimon/stream/LongStream;">
        <parameter
          name="streamSize"
          type="long"
          jni-type="J" />
        <parameter
          name="randomNumberOrigin"
          type="long"
          jni-type="J" />
        <parameter
          name="randomNumberBound"
          type="long"
          jni-type="J" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/RandomCompat;"
      enclosing-method-name="ints"
      enclosing-method-signature="()Lcom/annimon/stream/IntStream;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="RandomCompat.1"
      jni-signature="Lcom/annimon/stream/RandomCompat$1;"
      source-file-name="RandomCompat.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.IntSupplier"
        name-generic-aware="com.annimon.stream.function.IntSupplier"
        jni-type="Lcom/annimon/stream/function/IntSupplier;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getAsInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/RandomCompat;"
      enclosing-method-name="longs"
      enclosing-method-signature="()Lcom/annimon/stream/LongStream;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="RandomCompat.2"
      jni-signature="Lcom/annimon/stream/RandomCompat$2;"
      source-file-name="RandomCompat.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.LongSupplier"
        name-generic-aware="com.annimon.stream.function.LongSupplier"
        jni-type="Lcom/annimon/stream/function/LongSupplier;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getAsLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/RandomCompat;"
      enclosing-method-name="doubles"
      enclosing-method-signature="()Lcom/annimon/stream/DoubleStream;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="RandomCompat.3"
      jni-signature="Lcom/annimon/stream/RandomCompat$3;"
      source-file-name="RandomCompat.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.DoubleSupplier"
        name-generic-aware="com.annimon.stream.function.DoubleSupplier"
        jni-type="Lcom/annimon/stream/function/DoubleSupplier;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getAsDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/RandomCompat;"
      enclosing-method-name="ints"
      enclosing-method-signature="(II)Lcom/annimon/stream/IntStream;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="RandomCompat.4"
      jni-signature="Lcom/annimon/stream/RandomCompat$4;"
      source-file-name="RandomCompat.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.IntSupplier"
        name-generic-aware="com.annimon.stream.function.IntSupplier"
        jni-type="Lcom/annimon/stream/function/IntSupplier;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getAsInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/RandomCompat;"
      enclosing-method-name="longs"
      enclosing-method-signature="(JJ)Lcom/annimon/stream/LongStream;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="RandomCompat.5"
      jni-signature="Lcom/annimon/stream/RandomCompat$5;"
      source-file-name="RandomCompat.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.LongSupplier"
        name-generic-aware="com.annimon.stream.function.LongSupplier"
        jni-type="Lcom/annimon/stream/function/LongSupplier;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getAsLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/RandomCompat;"
      enclosing-method-name="doubles"
      enclosing-method-signature="(DD)Lcom/annimon/stream/DoubleStream;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="RandomCompat.6"
      jni-signature="Lcom/annimon/stream/RandomCompat$6;"
      source-file-name="RandomCompat.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.DoubleSupplier"
        name-generic-aware="com.annimon.stream.function.DoubleSupplier"
        jni-type="Lcom/annimon/stream/function/DoubleSupplier;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getAsDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="Stream"
      jni-signature="Lcom/annimon/stream/Stream;"
      source-file-name="Stream.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <implements
        name="java.io.Closeable"
        name-generic-aware="java.io.Closeable"
        jni-type="Ljava/io/Closeable;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="allMatch"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Predicate;)Z">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="anyMatch"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Predicate;)Z">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="chunkBy"
        native="false"
        return="com.annimon.stream.Stream&lt;java.util.List&lt;T&gt;&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;Ljava/util/List&lt;TT;&gt;;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="K"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="classifier"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends K&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TK;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="close"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="collect"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/Collector;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="A"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="collector"
          type="com.annimon.stream.Collector&lt;? super T, A, R&gt;"
          jni-type="Lcom/annimon/stream/Collector&lt;-TT;TA;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="collect"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;Lcom/annimon/stream/function/BiConsumer;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="supplier"
          type="com.annimon.stream.function.Supplier&lt;R&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;TR;&gt;;" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.BiConsumer&lt;R, ? super T&gt;"
          jni-type="Lcom/annimon/stream/function/BiConsumer&lt;TR;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="concat"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/Stream;Lcom/annimon/stream/Stream;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="stream1"
          type="com.annimon.stream.Stream&lt;? extends T&gt;"
          jni-type="Lcom/annimon/stream/Stream&lt;+TT;&gt;;" />
        <parameter
          name="stream2"
          type="com.annimon.stream.Stream&lt;? extends T&gt;"
          jni-type="Lcom/annimon/stream/Stream&lt;+TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="concat"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Ljava/util/Iterator;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="iterator1"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="iterator2"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="count"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="custom"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="function"
          type="com.annimon.stream.function.Function&lt;com.annimon.stream.Stream&lt;T&gt;, R&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;Lcom/annimon/stream/Stream&lt;TT;&gt;;TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="distinct"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Stream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="distinctBy"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="K"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="classifier"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends K&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TK;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="dropWhile"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/Stream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="dropWhileIndexed"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILcom/annimon/stream/function/IndexedPredicate;)Lcom/annimon/stream/Stream;">
        <parameter
          name="from"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedPredicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedPredicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="dropWhileIndexed"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IndexedPredicate;)Lcom/annimon/stream/Stream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedPredicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedPredicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="empty"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="equalsOnly"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Lcom/annimon/stream/Stream;">
        <parameter
          name="object"
          type="T"
          jni-type="TT;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filter"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/Stream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filterIndexed"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILcom/annimon/stream/function/IndexedPredicate;)Lcom/annimon/stream/Stream;">
        <parameter
          name="from"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedPredicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedPredicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filterIndexed"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IndexedPredicate;)Lcom/annimon/stream/Stream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedPredicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedPredicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="filterNot"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/Stream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="findFirst"
        native="false"
        return="com.annimon.stream.Optional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Optional;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="findIndexed"
        native="false"
        return="com.annimon.stream.Optional&lt;com.annimon.stream.IntPair&lt;T&gt;&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;Lcom/annimon/stream/IntPair&lt;TT;&gt;;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILcom/annimon/stream/function/IndexedPredicate;)Lcom/annimon/stream/Optional;">
        <parameter
          name="from"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedPredicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedPredicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="findIndexed"
        native="false"
        return="com.annimon.stream.Optional&lt;com.annimon.stream.IntPair&lt;T&gt;&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;Lcom/annimon/stream/IntPair&lt;TT;&gt;;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IndexedPredicate;)Lcom/annimon/stream/Optional;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedPredicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedPredicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="findLast"
        native="false"
        return="com.annimon.stream.Optional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Optional;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="findSingle"
        native="false"
        return="com.annimon.stream.Optional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Optional;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="flatMap"
        native="false"
        return="com.annimon.stream.Stream&lt;R&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TR;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends com.annimon.stream.Stream&lt;? extends R&gt;&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+Lcom/annimon/stream/Stream&lt;+TR;&gt;;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="flatMapToDouble"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends com.annimon.stream.DoubleStream&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+Lcom/annimon/stream/DoubleStream;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="flatMapToInt"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends com.annimon.stream.IntStream&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+Lcom/annimon/stream/IntStream;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="flatMapToLong"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends com.annimon.stream.LongStream&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+Lcom/annimon/stream/LongStream;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="forEach"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Consumer;)V">
        <parameter
          name="action"
          type="com.annimon.stream.function.Consumer&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Consumer&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="forEachIndexed"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILcom/annimon/stream/function/IndexedConsumer;)V">
        <parameter
          name="from"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="action"
          type="com.annimon.stream.function.IndexedConsumer&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedConsumer&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="forEachIndexed"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IndexedConsumer;)V">
        <parameter
          name="action"
          type="com.annimon.stream.function.IndexedConsumer&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedConsumer&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="generate"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="supplier"
          type="com.annimon.stream.function.Supplier&lt;T&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="groupBy"
        native="false"
        return="com.annimon.stream.Stream&lt;java.util.Map.Entry&lt;K, java.util.List&lt;T&gt;&gt;&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;Ljava/util/Map$Entry&lt;TK;Ljava/util/List&lt;TT;&gt;;&gt;;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="K"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="classifier"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends K&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TK;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="indexed"
        native="false"
        return="com.annimon.stream.Stream&lt;com.annimon.stream.IntPair&lt;T&gt;&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;Lcom/annimon/stream/IntPair&lt;TT;&gt;;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Stream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="indexed"
        native="false"
        return="com.annimon.stream.Stream&lt;com.annimon.stream.IntPair&lt;T&gt;&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;Lcom/annimon/stream/IntPair&lt;TT;&gt;;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(II)Lcom/annimon/stream/Stream;">
        <parameter
          name="from"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="iterate"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Lcom/annimon/stream/function/Predicate;Lcom/annimon/stream/function/UnaryOperator;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="seed"
          type="T"
          jni-type="TT;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
        <parameter
          name="op"
          type="com.annimon.stream.function.UnaryOperator&lt;T&gt;"
          jni-type="Lcom/annimon/stream/function/UnaryOperator&lt;TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="iterate"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Lcom/annimon/stream/function/UnaryOperator;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="seed"
          type="T"
          jni-type="TT;" />
        <parameter
          name="op"
          type="com.annimon.stream.function.UnaryOperator&lt;T&gt;"
          jni-type="Lcom/annimon/stream/function/UnaryOperator&lt;TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="iterator"
        native="false"
        return="java.util.Iterator&lt;? extends T&gt;"
        jni-return="Ljava/util/Iterator&lt;+TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/util/Iterator;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="limit"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Lcom/annimon/stream/Stream;">
        <parameter
          name="maxSize"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="map"
        native="false"
        return="com.annimon.stream.Stream&lt;R&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TR;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapIndexed"
        native="false"
        return="com.annimon.stream.Stream&lt;R&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TR;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILcom/annimon/stream/function/IndexedFunction;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="from"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IndexedFunction&lt;? super T, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedFunction&lt;-TT;+TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapIndexed"
        native="false"
        return="com.annimon.stream.Stream&lt;R&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TR;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IndexedFunction;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IndexedFunction&lt;? super T, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedFunction&lt;-TT;+TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToDouble"
        native="false"
        return="com.annimon.stream.DoubleStream"
        jni-return="Lcom/annimon/stream/DoubleStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ToDoubleFunction;)Lcom/annimon/stream/DoubleStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.ToDoubleFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToDoubleFunction&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToInt"
        native="false"
        return="com.annimon.stream.IntStream"
        jni-return="Lcom/annimon/stream/IntStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ToIntFunction;)Lcom/annimon/stream/IntStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.ToIntFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToIntFunction&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="mapToLong"
        native="false"
        return="com.annimon.stream.LongStream"
        jni-return="Lcom/annimon/stream/LongStream;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ToLongFunction;)Lcom/annimon/stream/LongStream;">
        <parameter
          name="mapper"
          type="com.annimon.stream.function.ToLongFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToLongFunction&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="max"
        native="false"
        return="com.annimon.stream.Optional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Comparator;)Lcom/annimon/stream/Optional;">
        <parameter
          name="comparator"
          type="java.util.Comparator&lt;? super T&gt;"
          jni-type="Ljava/util/Comparator&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="merge"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/Stream;Lcom/annimon/stream/Stream;Lcom/annimon/stream/function/BiFunction;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="stream1"
          type="com.annimon.stream.Stream&lt;? extends T&gt;"
          jni-type="Lcom/annimon/stream/Stream&lt;+TT;&gt;;" />
        <parameter
          name="stream2"
          type="com.annimon.stream.Stream&lt;? extends T&gt;"
          jni-type="Lcom/annimon/stream/Stream&lt;+TT;&gt;;" />
        <parameter
          name="selector"
          type="com.annimon.stream.function.BiFunction&lt;? super T, ? super T, com.annimon.stream.operator.ObjMerge.MergeResult&gt;"
          jni-type="Lcom/annimon/stream/function/BiFunction&lt;-TT;-TT;Lcom/annimon/stream/operator/ObjMerge$MergeResult;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="merge"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Ljava/util/Iterator;Lcom/annimon/stream/function/BiFunction;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="iterator1"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="iterator2"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="selector"
          type="com.annimon.stream.function.BiFunction&lt;? super T, ? super T, com.annimon.stream.operator.ObjMerge.MergeResult&gt;"
          jni-type="Lcom/annimon/stream/function/BiFunction&lt;-TT;-TT;Lcom/annimon/stream/operator/ObjMerge$MergeResult;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="min"
        native="false"
        return="com.annimon.stream.Optional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Comparator;)Lcom/annimon/stream/Optional;">
        <parameter
          name="comparator"
          type="java.util.Comparator&lt;? super T&gt;"
          jni-type="Ljava/util/Comparator&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="noneMatch"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Predicate;)Z">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nullsOnly"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Stream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="of"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Iterable;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="iterable"
          type="java.lang.Iterable&lt;? extends T&gt;"
          jni-type="Ljava/lang/Iterable&lt;+TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="of"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="of"
        native="false"
        return="com.annimon.stream.Stream&lt;java.util.Map.Entry&lt;K, V&gt;&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;Ljava/util/Map$Entry&lt;TK;TV;&gt;;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Map;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="K"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="V"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="map"
          type="java.util.Map&lt;K, V&gt;"
          jni-type="Ljava/util/Map&lt;TK;TV;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="of"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([Ljava/lang/Object;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="elements"
          type="T..."
          jni-type="[TT;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ofNullable"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Iterable;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="iterable"
          type="java.lang.Iterable&lt;? extends T&gt;"
          jni-type="Ljava/lang/Iterable&lt;+TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ofNullable"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="element"
          type="T"
          jni-type="TT;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ofNullable"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ofNullable"
        native="false"
        return="com.annimon.stream.Stream&lt;java.util.Map.Entry&lt;K, V&gt;&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;Ljava/util/Map$Entry&lt;TK;TV;&gt;;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Map;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="K"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="V"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="map"
          type="java.util.Map&lt;K, V&gt;"
          jni-type="Ljava/util/Map&lt;TK;TV;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="ofNullable"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([Ljava/lang/Object;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="array"
          type="T[]"
          jni-type="[TT;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="onClose"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Runnable;)Lcom/annimon/stream/Stream;">
        <parameter
          name="closeHandler"
          type="java.lang.Runnable"
          jni-type="Ljava/lang/Runnable;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="peek"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Consumer;)Lcom/annimon/stream/Stream;">
        <parameter
          name="action"
          type="com.annimon.stream.function.Consumer&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Consumer&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="range"
        native="false"
        return="com.annimon.stream.Stream&lt;java.lang.Integer&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;Ljava/lang/Integer;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(II)Lcom/annimon/stream/Stream;">
        <parameter
          name="from"
          type="int"
          jni-type="I" />
        <parameter
          name="to"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="range"
        native="false"
        return="com.annimon.stream.Stream&lt;java.lang.Long&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;Ljava/lang/Long;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(JJ)Lcom/annimon/stream/Stream;">
        <parameter
          name="from"
          type="long"
          jni-type="J" />
        <parameter
          name="to"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="rangeClosed"
        native="false"
        return="com.annimon.stream.Stream&lt;java.lang.Integer&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;Ljava/lang/Integer;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(II)Lcom/annimon/stream/Stream;">
        <parameter
          name="from"
          type="int"
          jni-type="I" />
        <parameter
          name="to"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="rangeClosed"
        native="false"
        return="com.annimon.stream.Stream&lt;java.lang.Long&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;Ljava/lang/Long;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(JJ)Lcom/annimon/stream/Stream;">
        <parameter
          name="from"
          type="long"
          jni-type="J" />
        <parameter
          name="to"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="reduce"
        native="false"
        return="com.annimon.stream.Optional&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Optional&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/BiFunction;)Lcom/annimon/stream/Optional;">
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.BiFunction&lt;T, T, T&gt;"
          jni-type="Lcom/annimon/stream/function/BiFunction&lt;TT;TT;TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="reduce"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Lcom/annimon/stream/function/BiFunction;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="identity"
          type="R"
          jni-type="TR;" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.BiFunction&lt;? super R, ? super T, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/BiFunction&lt;-TR;-TT;+TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="reduceIndexed"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILjava/lang/Object;Lcom/annimon/stream/function/IndexedBiFunction;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="from"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="identity"
          type="R"
          jni-type="TR;" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.IndexedBiFunction&lt;? super R, ? super T, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedBiFunction&lt;-TR;-TT;+TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="reduceIndexed"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Lcom/annimon/stream/function/IndexedBiFunction;)Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="identity"
          type="R"
          jni-type="TR;" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.IndexedBiFunction&lt;? super R, ? super T, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedBiFunction&lt;-TR;-TT;+TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="sample"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)Lcom/annimon/stream/Stream;">
        <parameter
          name="stepWidth"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="scan"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/BiFunction;)Lcom/annimon/stream/Stream;">
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.BiFunction&lt;T, T, T&gt;"
          jni-type="Lcom/annimon/stream/function/BiFunction&lt;TT;TT;TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="scan"
        native="false"
        return="com.annimon.stream.Stream&lt;R&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TR;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Lcom/annimon/stream/function/BiFunction;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="identity"
          type="R"
          jni-type="TR;" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.BiFunction&lt;? super R, ? super T, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/BiFunction&lt;-TR;-TT;+TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="select"
        native="false"
        return="com.annimon.stream.Stream&lt;TT&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TTT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Class;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="TT"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="clazz"
          type="java.lang.Class&lt;TT&gt;"
          jni-type="Ljava/lang/Class&lt;TTT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="single"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="skip"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Lcom/annimon/stream/Stream;">
        <parameter
          name="n"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="slidingWindow"
        native="false"
        return="com.annimon.stream.Stream&lt;java.util.List&lt;T&gt;&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;Ljava/util/List&lt;TT;&gt;;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)Lcom/annimon/stream/Stream;">
        <parameter
          name="windowSize"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="slidingWindow"
        native="false"
        return="com.annimon.stream.Stream&lt;java.util.List&lt;T&gt;&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;Ljava/util/List&lt;TT;&gt;;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(II)Lcom/annimon/stream/Stream;">
        <parameter
          name="windowSize"
          type="int"
          jni-type="I" />
        <parameter
          name="stepWidth"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="sortBy"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound=""
            classBound=""
            interfaceBounds="java.lang.Comparable&lt;? super R&gt;"
            jni-interfaceBounds="Ljava/lang/Comparable&lt;-TR;&gt;;" />
        </typeParameters>
        <parameter
          name="f"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="sorted"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Stream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="sorted"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Comparator;)Lcom/annimon/stream/Stream;">
        <parameter
          name="comparator"
          type="java.util.Comparator&lt;? super T&gt;"
          jni-type="Ljava/util/Comparator&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="takeUntil"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/Stream;">
        <parameter
          name="stopPredicate"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="takeUntilIndexed"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILcom/annimon/stream/function/IndexedPredicate;)Lcom/annimon/stream/Stream;">
        <parameter
          name="from"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="stopPredicate"
          type="com.annimon.stream.function.IndexedPredicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedPredicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="takeUntilIndexed"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IndexedPredicate;)Lcom/annimon/stream/Stream;">
        <parameter
          name="stopPredicate"
          type="com.annimon.stream.function.IndexedPredicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedPredicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="takeWhile"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/Stream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="takeWhileIndexed"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILcom/annimon/stream/function/IndexedPredicate;)Lcom/annimon/stream/Stream;">
        <parameter
          name="from"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedPredicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedPredicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="takeWhileIndexed"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IndexedPredicate;)Lcom/annimon/stream/Stream;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedPredicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedPredicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toArray"
        native="false"
        return="java.lang.Object[]"
        jni-return="[Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toArray"
        native="false"
        return="R[]"
        jni-return="[TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntFunction;)[Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="generator"
          type="com.annimon.stream.function.IntFunction&lt;R[]&gt;"
          jni-type="Lcom/annimon/stream/function/IntFunction&lt;[TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toList"
        native="false"
        return="java.util.List&lt;T&gt;"
        jni-return="Ljava/util/List&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/util/List;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="withoutNulls"
        native="false"
        return="com.annimon.stream.Stream&lt;T&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/Stream;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="zip"
        native="false"
        return="com.annimon.stream.Stream&lt;R&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/Stream;Lcom/annimon/stream/Stream;Lcom/annimon/stream/function/BiFunction;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="F"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="S"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="stream1"
          type="com.annimon.stream.Stream&lt;? extends F&gt;"
          jni-type="Lcom/annimon/stream/Stream&lt;+TF;&gt;;" />
        <parameter
          name="stream2"
          type="com.annimon.stream.Stream&lt;? extends S&gt;"
          jni-type="Lcom/annimon/stream/Stream&lt;+TS;&gt;;" />
        <parameter
          name="combiner"
          type="com.annimon.stream.function.BiFunction&lt;? super F, ? super S, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/BiFunction&lt;-TF;-TS;+TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="zip"
        native="false"
        return="com.annimon.stream.Stream&lt;R&gt;"
        jni-return="Lcom/annimon/stream/Stream&lt;TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Ljava/util/Iterator;Lcom/annimon/stream/function/BiFunction;)Lcom/annimon/stream/Stream;">
        <typeParameters>
          <typeParameter
            name="F"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="S"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="iterator1"
          type="java.util.Iterator&lt;? extends F&gt;"
          jni-type="Ljava/util/Iterator&lt;+TF;&gt;;" />
        <parameter
          name="iterator2"
          type="java.util.Iterator&lt;? extends S&gt;"
          jni-type="Ljava/util/Iterator&lt;+TS;&gt;;" />
        <parameter
          name="combiner"
          type="com.annimon.stream.function.BiFunction&lt;? super F, ? super S, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/BiFunction&lt;-TF;-TS;+TR;&gt;;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Stream;"
      enclosing-method-name="select"
      enclosing-method-signature="(Ljava/lang/Class;)Lcom/annimon/stream/Stream;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="Stream.1"
      jni-signature="Lcom/annimon/stream/Stream$1;"
      source-file-name="Stream.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.Predicate"
        name-generic-aware="com.annimon.stream.function.Predicate&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/Predicate&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="value"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Stream;"
      enclosing-method-name="equalsOnly"
      enclosing-method-signature="(Ljava/lang/Object;)Lcom/annimon/stream/Stream;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="Stream.2"
      jni-signature="Lcom/annimon/stream/Stream$2;"
      source-file-name="Stream.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.Predicate"
        name-generic-aware="com.annimon.stream.function.Predicate&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/Predicate&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="value"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Stream;"
      enclosing-method-name="indexed"
      enclosing-method-signature="(II)Lcom/annimon/stream/Stream;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="Stream.3"
      jni-signature="Lcom/annimon/stream/Stream$3;"
      source-file-name="Stream.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.IndexedFunction"
        name-generic-aware="com.annimon.stream.function.IndexedFunction&lt;T, com.annimon.stream.IntPair&lt;T&gt;&gt;"
        jni-type="Lcom/annimon/stream/function/IndexedFunction&lt;TT;Lcom/annimon/stream/IntPair&lt;TT;&gt;;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="com.annimon.stream.IntPair&lt;T&gt;"
        jni-return="Lcom/annimon/stream/IntPair&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ILjava/lang/Object;)Lcom/annimon/stream/IntPair;">
        <parameter
          name="index"
          type="int"
          jni-type="I" />
        <parameter
          name="t"
          type="T"
          jni-type="TT;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(ILjava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
        <parameter
          name="p1"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Stream;"
      enclosing-method-name="sorted"
      enclosing-method-signature="()Lcom/annimon/stream/Stream;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="Stream.4"
      jni-signature="Lcom/annimon/stream/Stream$4;"
      source-file-name="Stream.java"
      static="false"
      visibility="">
      <implements
        name="java.util.Comparator"
        name-generic-aware="java.util.Comparator&lt;T&gt;"
        jni-type="Ljava/util/Comparator&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="compare"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)I">
        <parameter
          name="o1"
          type="T"
          jni-type="TT;" />
        <parameter
          name="o2"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Stream;"
      enclosing-method-name="sample"
      enclosing-method-signature="(I)Lcom/annimon/stream/Stream;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="Stream.5"
      jni-signature="Lcom/annimon/stream/Stream$5;"
      source-file-name="Stream.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.Function"
        name-generic-aware="com.annimon.stream.function.Function&lt;java.util.List&lt;T&gt;, T&gt;"
        jni-type="Lcom/annimon/stream/function/Function&lt;Ljava/util/List&lt;TT;&gt;;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/List;)Ljava/lang/Object;">
        <parameter
          name="list"
          type="java.util.List&lt;T&gt;"
          jni-type="Ljava/util/List&lt;TT;&gt;;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Stream;"
      enclosing-method-name="toArray"
      enclosing-method-signature="()[Ljava/lang/Object;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="Stream.6"
      jni-signature="Lcom/annimon/stream/Stream$6;"
      source-file-name="Stream.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.IntFunction"
        name-generic-aware="com.annimon.stream.function.IntFunction&lt;java.lang.Object[]&gt;"
        jni-type="Lcom/annimon/stream/function/IntFunction&lt;[Ljava/lang/Object;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(I)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="java.lang.Object[]"
        jni-return="[Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)[Ljava/lang/Object;">
        <parameter
          name="value"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/Stream;"
      enclosing-method-name="findLast"
      enclosing-method-signature="()Lcom/annimon/stream/Optional;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="Stream.7"
      jni-signature="Lcom/annimon/stream/Stream$7;"
      source-file-name="Stream.java"
      static="false"
      visibility="">
      <implements
        name="com.annimon.stream.function.BinaryOperator"
        name-generic-aware="com.annimon.stream.function.BinaryOperator&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/BinaryOperator&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="left"
          type="T"
          jni-type="TT;" />
        <parameter
          name="right"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
  </package>
  <package
    name="com.annimon.stream.function"
    jni-name="com/annimon/stream/function">
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="BiConsumer"
      jni-signature="Lcom/annimon/stream/function/BiConsumer;"
      source-file-name="BiConsumer.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="U"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="p0"
          type="T"
          jni-type="TT;" />
        <parameter
          name="p1"
          type="U"
          jni-type="TU;" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="BiConsumer.Util"
      jni-signature="Lcom/annimon/stream/function/BiConsumer$Util;"
      source-file-name="BiConsumer.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="andThen"
        native="false"
        return="com.annimon.stream.function.BiConsumer&lt;T, U&gt;"
        jni-return="Lcom/annimon/stream/function/BiConsumer&lt;TT;TU;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/BiConsumer;Lcom/annimon/stream/function/BiConsumer;)Lcom/annimon/stream/function/BiConsumer;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="U"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="c1"
          type="com.annimon.stream.function.BiConsumer&lt;? super T, ? super U&gt;"
          jni-type="Lcom/annimon/stream/function/BiConsumer&lt;-TT;-TU;&gt;;" />
        <parameter
          name="c2"
          type="com.annimon.stream.function.BiConsumer&lt;? super T, ? super U&gt;"
          jni-type="Lcom/annimon/stream/function/BiConsumer&lt;-TT;-TU;&gt;;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/BiConsumer$Util;"
      enclosing-method-name="andThen"
      enclosing-method-signature="(Lcom/annimon/stream/function/BiConsumer;Lcom/annimon/stream/function/BiConsumer;)Lcom/annimon/stream/function/BiConsumer;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="BiConsumer.Util.1"
      jni-signature="Lcom/annimon/stream/function/BiConsumer$Util$1;"
      source-file-name="BiConsumer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiConsumer"
        name-generic-aware="com.annimon.stream.function.BiConsumer&lt;T, U&gt;"
        jni-type="Lcom/annimon/stream/function/BiConsumer&lt;TT;TU;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)V">
        <parameter
          name="t"
          type="T"
          jni-type="TT;" />
        <parameter
          name="u"
          type="U"
          jni-type="TU;" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="BiFunction"
      jni-signature="Lcom/annimon/stream/function/BiFunction;"
      source-file-name="BiFunction.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="U"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="T"
          jni-type="TT;" />
        <parameter
          name="p1"
          type="U"
          jni-type="TU;" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="BiFunction.Util"
      jni-signature="Lcom/annimon/stream/function/BiFunction$Util;"
      source-file-name="BiFunction.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="andThen"
        native="false"
        return="com.annimon.stream.function.BiFunction&lt;T, U, V&gt;"
        jni-return="Lcom/annimon/stream/function/BiFunction&lt;TT;TU;TV;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/BiFunction;Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/function/BiFunction;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="U"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="V"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="f1"
          type="com.annimon.stream.function.BiFunction&lt;? super T, ? super U, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/BiFunction&lt;-TT;-TU;+TR;&gt;;" />
        <parameter
          name="f2"
          type="com.annimon.stream.function.Function&lt;? super R, ? extends V&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TR;+TV;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="reverse"
        native="false"
        return="com.annimon.stream.function.BiFunction&lt;U, T, R&gt;"
        jni-return="Lcom/annimon/stream/function/BiFunction&lt;TU;TT;TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/BiFunction;)Lcom/annimon/stream/function/BiFunction;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="U"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="function"
          type="com.annimon.stream.function.BiFunction&lt;? super T, ? super U, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/BiFunction&lt;-TT;-TU;+TR;&gt;;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/BiFunction$Util;"
      enclosing-method-name="andThen"
      enclosing-method-signature="(Lcom/annimon/stream/function/BiFunction;Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/function/BiFunction;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="BiFunction.Util.1"
      jni-signature="Lcom/annimon/stream/function/BiFunction$Util$1;"
      source-file-name="BiFunction.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiFunction"
        name-generic-aware="com.annimon.stream.function.BiFunction&lt;T, U, V&gt;"
        jni-type="Lcom/annimon/stream/function/BiFunction&lt;TT;TU;TV;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="V"
        jni-return="TV;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="t"
          type="T"
          jni-type="TT;" />
        <parameter
          name="u"
          type="U"
          jni-type="TU;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/BiFunction$Util;"
      enclosing-method-name="reverse"
      enclosing-method-signature="(Lcom/annimon/stream/function/BiFunction;)Lcom/annimon/stream/function/BiFunction;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="BiFunction.Util.2"
      jni-signature="Lcom/annimon/stream/function/BiFunction$Util$2;"
      source-file-name="BiFunction.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BiFunction"
        name-generic-aware="com.annimon.stream.function.BiFunction&lt;U, T, R&gt;"
        jni-type="Lcom/annimon/stream/function/BiFunction&lt;TU;TT;TR;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="u"
          type="U"
          jni-type="TU;" />
        <parameter
          name="t"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="BinaryOperator"
      jni-signature="Lcom/annimon/stream/function/BinaryOperator;"
      source-file-name="BinaryOperator.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <implements
        name="com.annimon.stream.function.BiFunction"
        name-generic-aware="com.annimon.stream.function.BiFunction&lt;T, T, T&gt;"
        jni-type="Lcom/annimon/stream/function/BiFunction&lt;TT;TT;TT;&gt;;" />
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="BinaryOperator.Util"
      jni-signature="Lcom/annimon/stream/function/BinaryOperator$Util;"
      source-file-name="BinaryOperator.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="maxBy"
        native="false"
        return="com.annimon.stream.function.BinaryOperator&lt;T&gt;"
        jni-return="Lcom/annimon/stream/function/BinaryOperator&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Comparator;)Lcom/annimon/stream/function/BinaryOperator;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="comparator"
          type="java.util.Comparator&lt;? super T&gt;"
          jni-type="Ljava/util/Comparator&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="minBy"
        native="false"
        return="com.annimon.stream.function.BinaryOperator&lt;T&gt;"
        jni-return="Lcom/annimon/stream/function/BinaryOperator&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Comparator;)Lcom/annimon/stream/function/BinaryOperator;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="comparator"
          type="java.util.Comparator&lt;? super T&gt;"
          jni-type="Ljava/util/Comparator&lt;-TT;&gt;;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/BinaryOperator$Util;"
      enclosing-method-name="minBy"
      enclosing-method-signature="(Ljava/util/Comparator;)Lcom/annimon/stream/function/BinaryOperator;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="BinaryOperator.Util.1"
      jni-signature="Lcom/annimon/stream/function/BinaryOperator$Util$1;"
      source-file-name="BinaryOperator.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BinaryOperator"
        name-generic-aware="com.annimon.stream.function.BinaryOperator&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/BinaryOperator&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="a"
          type="T"
          jni-type="TT;" />
        <parameter
          name="b"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/BinaryOperator$Util;"
      enclosing-method-name="maxBy"
      enclosing-method-signature="(Ljava/util/Comparator;)Lcom/annimon/stream/function/BinaryOperator;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="BinaryOperator.Util.2"
      jni-signature="Lcom/annimon/stream/function/BinaryOperator$Util$2;"
      source-file-name="BinaryOperator.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BinaryOperator"
        name-generic-aware="com.annimon.stream.function.BinaryOperator&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/BinaryOperator&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="a"
          type="T"
          jni-type="TT;" />
        <parameter
          name="b"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="BooleanConsumer"
      jni-signature="Lcom/annimon/stream/function/BooleanConsumer;"
      source-file-name="BooleanConsumer.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Z)V">
        <parameter
          name="p0"
          type="boolean"
          jni-type="Z" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="BooleanConsumer.Util"
      jni-signature="Lcom/annimon/stream/function/BooleanConsumer$Util;"
      source-file-name="BooleanConsumer.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="andThen"
        native="false"
        return="com.annimon.stream.function.BooleanConsumer"
        jni-return="Lcom/annimon/stream/function/BooleanConsumer;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/BooleanConsumer;Lcom/annimon/stream/function/BooleanConsumer;)Lcom/annimon/stream/function/BooleanConsumer;">
        <parameter
          name="c1"
          type="com.annimon.stream.function.BooleanConsumer"
          jni-type="Lcom/annimon/stream/function/BooleanConsumer;" />
        <parameter
          name="c2"
          type="com.annimon.stream.function.BooleanConsumer"
          jni-type="Lcom/annimon/stream/function/BooleanConsumer;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/BooleanConsumer$Util;"
      enclosing-method-name="andThen"
      enclosing-method-signature="(Lcom/annimon/stream/function/BooleanConsumer;Lcom/annimon/stream/function/BooleanConsumer;)Lcom/annimon/stream/function/BooleanConsumer;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="BooleanConsumer.Util.1"
      jni-signature="Lcom/annimon/stream/function/BooleanConsumer$Util$1;"
      source-file-name="BooleanConsumer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BooleanConsumer"
        name-generic-aware="com.annimon.stream.function.BooleanConsumer"
        jni-type="Lcom/annimon/stream/function/BooleanConsumer;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Z)V">
        <parameter
          name="value"
          type="boolean"
          jni-type="Z" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="BooleanFunction"
      jni-signature="Lcom/annimon/stream/function/BooleanFunction;"
      source-file-name="BooleanFunction.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Z)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="boolean"
          jni-type="Z" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="BooleanPredicate"
      jni-signature="Lcom/annimon/stream/function/BooleanPredicate;"
      source-file-name="BooleanPredicate.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Z)Z">
        <parameter
          name="p0"
          type="boolean"
          jni-type="Z" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="BooleanPredicate.Util"
      jni-signature="Lcom/annimon/stream/function/BooleanPredicate$Util;"
      source-file-name="BooleanPredicate.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="and"
        native="false"
        return="com.annimon.stream.function.BooleanPredicate"
        jni-return="Lcom/annimon/stream/function/BooleanPredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/BooleanPredicate;Lcom/annimon/stream/function/BooleanPredicate;)Lcom/annimon/stream/function/BooleanPredicate;">
        <parameter
          name="p1"
          type="com.annimon.stream.function.BooleanPredicate"
          jni-type="Lcom/annimon/stream/function/BooleanPredicate;" />
        <parameter
          name="p2"
          type="com.annimon.stream.function.BooleanPredicate"
          jni-type="Lcom/annimon/stream/function/BooleanPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="identity"
        native="false"
        return="com.annimon.stream.function.BooleanPredicate"
        jni-return="Lcom/annimon/stream/function/BooleanPredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/function/BooleanPredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="negate"
        native="false"
        return="com.annimon.stream.function.BooleanPredicate"
        jni-return="Lcom/annimon/stream/function/BooleanPredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/BooleanPredicate;)Lcom/annimon/stream/function/BooleanPredicate;">
        <parameter
          name="p1"
          type="com.annimon.stream.function.BooleanPredicate"
          jni-type="Lcom/annimon/stream/function/BooleanPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="or"
        native="false"
        return="com.annimon.stream.function.BooleanPredicate"
        jni-return="Lcom/annimon/stream/function/BooleanPredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/BooleanPredicate;Lcom/annimon/stream/function/BooleanPredicate;)Lcom/annimon/stream/function/BooleanPredicate;">
        <parameter
          name="p1"
          type="com.annimon.stream.function.BooleanPredicate"
          jni-type="Lcom/annimon/stream/function/BooleanPredicate;" />
        <parameter
          name="p2"
          type="com.annimon.stream.function.BooleanPredicate"
          jni-type="Lcom/annimon/stream/function/BooleanPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="xor"
        native="false"
        return="com.annimon.stream.function.BooleanPredicate"
        jni-return="Lcom/annimon/stream/function/BooleanPredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/BooleanPredicate;Lcom/annimon/stream/function/BooleanPredicate;)Lcom/annimon/stream/function/BooleanPredicate;">
        <parameter
          name="p1"
          type="com.annimon.stream.function.BooleanPredicate"
          jni-type="Lcom/annimon/stream/function/BooleanPredicate;" />
        <parameter
          name="p2"
          type="com.annimon.stream.function.BooleanPredicate"
          jni-type="Lcom/annimon/stream/function/BooleanPredicate;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/BooleanPredicate$Util;"
      enclosing-method-name="identity"
      enclosing-method-signature="()Lcom/annimon/stream/function/BooleanPredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="BooleanPredicate.Util.1"
      jni-signature="Lcom/annimon/stream/function/BooleanPredicate$Util$1;"
      source-file-name="BooleanPredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BooleanPredicate"
        name-generic-aware="com.annimon.stream.function.BooleanPredicate"
        jni-type="Lcom/annimon/stream/function/BooleanPredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Z)Z">
        <parameter
          name="operand"
          type="boolean"
          jni-type="Z" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/BooleanPredicate$Util;"
      enclosing-method-name="and"
      enclosing-method-signature="(Lcom/annimon/stream/function/BooleanPredicate;Lcom/annimon/stream/function/BooleanPredicate;)Lcom/annimon/stream/function/BooleanPredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="BooleanPredicate.Util.2"
      jni-signature="Lcom/annimon/stream/function/BooleanPredicate$Util$2;"
      source-file-name="BooleanPredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BooleanPredicate"
        name-generic-aware="com.annimon.stream.function.BooleanPredicate"
        jni-type="Lcom/annimon/stream/function/BooleanPredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Z)Z">
        <parameter
          name="value"
          type="boolean"
          jni-type="Z" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/BooleanPredicate$Util;"
      enclosing-method-name="or"
      enclosing-method-signature="(Lcom/annimon/stream/function/BooleanPredicate;Lcom/annimon/stream/function/BooleanPredicate;)Lcom/annimon/stream/function/BooleanPredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="BooleanPredicate.Util.3"
      jni-signature="Lcom/annimon/stream/function/BooleanPredicate$Util$3;"
      source-file-name="BooleanPredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BooleanPredicate"
        name-generic-aware="com.annimon.stream.function.BooleanPredicate"
        jni-type="Lcom/annimon/stream/function/BooleanPredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Z)Z">
        <parameter
          name="value"
          type="boolean"
          jni-type="Z" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/BooleanPredicate$Util;"
      enclosing-method-name="xor"
      enclosing-method-signature="(Lcom/annimon/stream/function/BooleanPredicate;Lcom/annimon/stream/function/BooleanPredicate;)Lcom/annimon/stream/function/BooleanPredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="BooleanPredicate.Util.4"
      jni-signature="Lcom/annimon/stream/function/BooleanPredicate$Util$4;"
      source-file-name="BooleanPredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BooleanPredicate"
        name-generic-aware="com.annimon.stream.function.BooleanPredicate"
        jni-type="Lcom/annimon/stream/function/BooleanPredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Z)Z">
        <parameter
          name="value"
          type="boolean"
          jni-type="Z" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/BooleanPredicate$Util;"
      enclosing-method-name="negate"
      enclosing-method-signature="(Lcom/annimon/stream/function/BooleanPredicate;)Lcom/annimon/stream/function/BooleanPredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="BooleanPredicate.Util.5"
      jni-signature="Lcom/annimon/stream/function/BooleanPredicate$Util$5;"
      source-file-name="BooleanPredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.BooleanPredicate"
        name-generic-aware="com.annimon.stream.function.BooleanPredicate"
        jni-type="Lcom/annimon/stream/function/BooleanPredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Z)Z">
        <parameter
          name="value"
          type="boolean"
          jni-type="Z" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="BooleanSupplier"
      jni-signature="Lcom/annimon/stream/function/BooleanSupplier;"
      source-file-name="BooleanSupplier.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="getAsBoolean"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="Consumer"
      jni-signature="Lcom/annimon/stream/function/Consumer;"
      source-file-name="Consumer.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)V">
        <parameter
          name="p0"
          type="T"
          jni-type="TT;" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="Consumer.Util"
      jni-signature="Lcom/annimon/stream/function/Consumer$Util;"
      source-file-name="Consumer.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="andThen"
        native="false"
        return="com.annimon.stream.function.Consumer&lt;T&gt;"
        jni-return="Lcom/annimon/stream/function/Consumer&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Consumer;Lcom/annimon/stream/function/Consumer;)Lcom/annimon/stream/function/Consumer;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="c1"
          type="com.annimon.stream.function.Consumer&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Consumer&lt;-TT;&gt;;" />
        <parameter
          name="c2"
          type="com.annimon.stream.function.Consumer&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Consumer&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.Consumer&lt;T&gt;"
        jni-return="Lcom/annimon/stream/function/Consumer&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableConsumer;)Lcom/annimon/stream/function/Consumer;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="throwableConsumer"
          type="com.annimon.stream.function.ThrowableConsumer&lt;? super T, java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableConsumer&lt;-TT;Ljava/lang/Throwable;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.Consumer&lt;T&gt;"
        jni-return="Lcom/annimon/stream/function/Consumer&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableConsumer;Lcom/annimon/stream/function/Consumer;)Lcom/annimon/stream/function/Consumer;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="throwableConsumer"
          type="com.annimon.stream.function.ThrowableConsumer&lt;? super T, java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableConsumer&lt;-TT;Ljava/lang/Throwable;&gt;;" />
        <parameter
          name="onFailedConsumer"
          type="com.annimon.stream.function.Consumer&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Consumer&lt;-TT;&gt;;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/Consumer$Util;"
      enclosing-method-name="andThen"
      enclosing-method-signature="(Lcom/annimon/stream/function/Consumer;Lcom/annimon/stream/function/Consumer;)Lcom/annimon/stream/function/Consumer;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Consumer.Util.1"
      jni-signature="Lcom/annimon/stream/function/Consumer$Util$1;"
      source-file-name="Consumer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Consumer"
        name-generic-aware="com.annimon.stream.function.Consumer&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/Consumer&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)V">
        <parameter
          name="value"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/Consumer$Util;"
      enclosing-method-name="safe"
      enclosing-method-signature="(Lcom/annimon/stream/function/ThrowableConsumer;Lcom/annimon/stream/function/Consumer;)Lcom/annimon/stream/function/Consumer;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Consumer.Util.2"
      jni-signature="Lcom/annimon/stream/function/Consumer$Util$2;"
      source-file-name="Consumer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Consumer"
        name-generic-aware="com.annimon.stream.function.Consumer&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/Consumer&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)V">
        <parameter
          name="value"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="DoubleBinaryOperator"
      jni-signature="Lcom/annimon/stream/function/DoubleBinaryOperator;"
      source-file-name="DoubleBinaryOperator.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="applyAsDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(DD)D">
        <parameter
          name="p0"
          type="double"
          jni-type="D" />
        <parameter
          name="p1"
          type="double"
          jni-type="D" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="DoubleConsumer"
      jni-signature="Lcom/annimon/stream/function/DoubleConsumer;"
      source-file-name="DoubleConsumer.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)V">
        <parameter
          name="p0"
          type="double"
          jni-type="D" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="DoubleConsumer.Util"
      jni-signature="Lcom/annimon/stream/function/DoubleConsumer$Util;"
      source-file-name="DoubleConsumer.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="andThen"
        native="false"
        return="com.annimon.stream.function.DoubleConsumer"
        jni-return="Lcom/annimon/stream/function/DoubleConsumer;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleConsumer;Lcom/annimon/stream/function/DoubleConsumer;)Lcom/annimon/stream/function/DoubleConsumer;">
        <parameter
          name="c1"
          type="com.annimon.stream.function.DoubleConsumer"
          jni-type="Lcom/annimon/stream/function/DoubleConsumer;" />
        <parameter
          name="c2"
          type="com.annimon.stream.function.DoubleConsumer"
          jni-type="Lcom/annimon/stream/function/DoubleConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.DoubleConsumer"
        jni-return="Lcom/annimon/stream/function/DoubleConsumer;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableDoubleConsumer;)Lcom/annimon/stream/function/DoubleConsumer;">
        <parameter
          name="throwableConsumer"
          type="com.annimon.stream.function.ThrowableDoubleConsumer&lt;java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableDoubleConsumer&lt;Ljava/lang/Throwable;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.DoubleConsumer"
        jni-return="Lcom/annimon/stream/function/DoubleConsumer;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableDoubleConsumer;Lcom/annimon/stream/function/DoubleConsumer;)Lcom/annimon/stream/function/DoubleConsumer;">
        <parameter
          name="throwableConsumer"
          type="com.annimon.stream.function.ThrowableDoubleConsumer&lt;java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableDoubleConsumer&lt;Ljava/lang/Throwable;&gt;;" />
        <parameter
          name="onFailedConsumer"
          type="com.annimon.stream.function.DoubleConsumer"
          jni-type="Lcom/annimon/stream/function/DoubleConsumer;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/DoubleConsumer$Util;"
      enclosing-method-name="andThen"
      enclosing-method-signature="(Lcom/annimon/stream/function/DoubleConsumer;Lcom/annimon/stream/function/DoubleConsumer;)Lcom/annimon/stream/function/DoubleConsumer;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="DoubleConsumer.Util.1"
      jni-signature="Lcom/annimon/stream/function/DoubleConsumer$Util$1;"
      source-file-name="DoubleConsumer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.DoubleConsumer"
        name-generic-aware="com.annimon.stream.function.DoubleConsumer"
        jni-type="Lcom/annimon/stream/function/DoubleConsumer;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)V">
        <parameter
          name="value"
          type="double"
          jni-type="D" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/DoubleConsumer$Util;"
      enclosing-method-name="safe"
      enclosing-method-signature="(Lcom/annimon/stream/function/ThrowableDoubleConsumer;Lcom/annimon/stream/function/DoubleConsumer;)Lcom/annimon/stream/function/DoubleConsumer;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="DoubleConsumer.Util.2"
      jni-signature="Lcom/annimon/stream/function/DoubleConsumer$Util$2;"
      source-file-name="DoubleConsumer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.DoubleConsumer"
        name-generic-aware="com.annimon.stream.function.DoubleConsumer"
        jni-type="Lcom/annimon/stream/function/DoubleConsumer;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)V">
        <parameter
          name="value"
          type="double"
          jni-type="D" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="DoubleFunction"
      jni-signature="Lcom/annimon/stream/function/DoubleFunction;"
      source-file-name="DoubleFunction.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="double"
          jni-type="D" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="DoubleFunction.Util"
      jni-signature="Lcom/annimon/stream/function/DoubleFunction$Util;"
      source-file-name="DoubleFunction.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.DoubleFunction&lt;R&gt;"
        jni-return="Lcom/annimon/stream/function/DoubleFunction&lt;TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableDoubleFunction;)Lcom/annimon/stream/function/DoubleFunction;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="throwableFunction"
          type="com.annimon.stream.function.ThrowableDoubleFunction&lt;? extends R, java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableDoubleFunction&lt;+TR;Ljava/lang/Throwable;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.DoubleFunction&lt;R&gt;"
        jni-return="Lcom/annimon/stream/function/DoubleFunction&lt;TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableDoubleFunction;Ljava/lang/Object;)Lcom/annimon/stream/function/DoubleFunction;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="throwableFunction"
          type="com.annimon.stream.function.ThrowableDoubleFunction&lt;? extends R, java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableDoubleFunction&lt;+TR;Ljava/lang/Throwable;&gt;;" />
        <parameter
          name="resultIfFailed"
          type="R"
          jni-type="TR;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/DoubleFunction$Util;"
      enclosing-method-name="safe"
      enclosing-method-signature="(Lcom/annimon/stream/function/ThrowableDoubleFunction;Ljava/lang/Object;)Lcom/annimon/stream/function/DoubleFunction;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="DoubleFunction.Util.1"
      jni-signature="Lcom/annimon/stream/function/DoubleFunction$Util$1;"
      source-file-name="DoubleFunction.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.DoubleFunction"
        name-generic-aware="com.annimon.stream.function.DoubleFunction&lt;R&gt;"
        jni-type="Lcom/annimon/stream/function/DoubleFunction&lt;TR;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)Ljava/lang/Object;">
        <parameter
          name="value"
          type="double"
          jni-type="D" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="DoublePredicate"
      jni-signature="Lcom/annimon/stream/function/DoublePredicate;"
      source-file-name="DoublePredicate.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)Z">
        <parameter
          name="p0"
          type="double"
          jni-type="D" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="DoublePredicate.Util"
      jni-signature="Lcom/annimon/stream/function/DoublePredicate$Util;"
      source-file-name="DoublePredicate.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="and"
        native="false"
        return="com.annimon.stream.function.DoublePredicate"
        jni-return="Lcom/annimon/stream/function/DoublePredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoublePredicate;Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/function/DoublePredicate;">
        <parameter
          name="p1"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
        <parameter
          name="p2"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="negate"
        native="false"
        return="com.annimon.stream.function.DoublePredicate"
        jni-return="Lcom/annimon/stream/function/DoublePredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/function/DoublePredicate;">
        <parameter
          name="p1"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="or"
        native="false"
        return="com.annimon.stream.function.DoublePredicate"
        jni-return="Lcom/annimon/stream/function/DoublePredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoublePredicate;Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/function/DoublePredicate;">
        <parameter
          name="p1"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
        <parameter
          name="p2"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.DoublePredicate"
        jni-return="Lcom/annimon/stream/function/DoublePredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableDoublePredicate;)Lcom/annimon/stream/function/DoublePredicate;">
        <parameter
          name="throwablePredicate"
          type="com.annimon.stream.function.ThrowableDoublePredicate&lt;java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableDoublePredicate&lt;Ljava/lang/Throwable;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.DoublePredicate"
        jni-return="Lcom/annimon/stream/function/DoublePredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableDoublePredicate;Z)Lcom/annimon/stream/function/DoublePredicate;">
        <parameter
          name="throwablePredicate"
          type="com.annimon.stream.function.ThrowableDoublePredicate&lt;java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableDoublePredicate&lt;Ljava/lang/Throwable;&gt;;" />
        <parameter
          name="resultIfFailed"
          type="boolean"
          jni-type="Z" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="xor"
        native="false"
        return="com.annimon.stream.function.DoublePredicate"
        jni-return="Lcom/annimon/stream/function/DoublePredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoublePredicate;Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/function/DoublePredicate;">
        <parameter
          name="p1"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
        <parameter
          name="p2"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/DoublePredicate$Util;"
      enclosing-method-name="and"
      enclosing-method-signature="(Lcom/annimon/stream/function/DoublePredicate;Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/function/DoublePredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="DoublePredicate.Util.1"
      jni-signature="Lcom/annimon/stream/function/DoublePredicate$Util$1;"
      source-file-name="DoublePredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.DoublePredicate"
        name-generic-aware="com.annimon.stream.function.DoublePredicate"
        jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)Z">
        <parameter
          name="value"
          type="double"
          jni-type="D" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/DoublePredicate$Util;"
      enclosing-method-name="or"
      enclosing-method-signature="(Lcom/annimon/stream/function/DoublePredicate;Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/function/DoublePredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="DoublePredicate.Util.2"
      jni-signature="Lcom/annimon/stream/function/DoublePredicate$Util$2;"
      source-file-name="DoublePredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.DoublePredicate"
        name-generic-aware="com.annimon.stream.function.DoublePredicate"
        jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)Z">
        <parameter
          name="value"
          type="double"
          jni-type="D" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/DoublePredicate$Util;"
      enclosing-method-name="xor"
      enclosing-method-signature="(Lcom/annimon/stream/function/DoublePredicate;Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/function/DoublePredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="DoublePredicate.Util.3"
      jni-signature="Lcom/annimon/stream/function/DoublePredicate$Util$3;"
      source-file-name="DoublePredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.DoublePredicate"
        name-generic-aware="com.annimon.stream.function.DoublePredicate"
        jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)Z">
        <parameter
          name="value"
          type="double"
          jni-type="D" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/DoublePredicate$Util;"
      enclosing-method-name="negate"
      enclosing-method-signature="(Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/function/DoublePredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="DoublePredicate.Util.4"
      jni-signature="Lcom/annimon/stream/function/DoublePredicate$Util$4;"
      source-file-name="DoublePredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.DoublePredicate"
        name-generic-aware="com.annimon.stream.function.DoublePredicate"
        jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)Z">
        <parameter
          name="value"
          type="double"
          jni-type="D" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/DoublePredicate$Util;"
      enclosing-method-name="safe"
      enclosing-method-signature="(Lcom/annimon/stream/function/ThrowableDoublePredicate;Z)Lcom/annimon/stream/function/DoublePredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="DoublePredicate.Util.5"
      jni-signature="Lcom/annimon/stream/function/DoublePredicate$Util$5;"
      source-file-name="DoublePredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.DoublePredicate"
        name-generic-aware="com.annimon.stream.function.DoublePredicate"
        jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)Z">
        <parameter
          name="value"
          type="double"
          jni-type="D" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="DoubleSupplier"
      jni-signature="Lcom/annimon/stream/function/DoubleSupplier;"
      source-file-name="DoubleSupplier.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="getAsDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="DoubleSupplier.Util"
      jni-signature="Lcom/annimon/stream/function/DoubleSupplier$Util;"
      source-file-name="DoubleSupplier.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.DoubleSupplier"
        jni-return="Lcom/annimon/stream/function/DoubleSupplier;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableDoubleSupplier;)Lcom/annimon/stream/function/DoubleSupplier;">
        <parameter
          name="throwableSupplier"
          type="com.annimon.stream.function.ThrowableDoubleSupplier&lt;java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableDoubleSupplier&lt;Ljava/lang/Throwable;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.DoubleSupplier"
        jni-return="Lcom/annimon/stream/function/DoubleSupplier;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableDoubleSupplier;D)Lcom/annimon/stream/function/DoubleSupplier;">
        <parameter
          name="throwableSupplier"
          type="com.annimon.stream.function.ThrowableDoubleSupplier&lt;java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableDoubleSupplier&lt;Ljava/lang/Throwable;&gt;;" />
        <parameter
          name="resultIfFailed"
          type="double"
          jni-type="D" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/DoubleSupplier$Util;"
      enclosing-method-name="safe"
      enclosing-method-signature="(Lcom/annimon/stream/function/ThrowableDoubleSupplier;D)Lcom/annimon/stream/function/DoubleSupplier;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="DoubleSupplier.Util.1"
      jni-signature="Lcom/annimon/stream/function/DoubleSupplier$Util$1;"
      source-file-name="DoubleSupplier.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.DoubleSupplier"
        name-generic-aware="com.annimon.stream.function.DoubleSupplier"
        jni-type="Lcom/annimon/stream/function/DoubleSupplier;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getAsDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="DoubleToIntFunction"
      jni-signature="Lcom/annimon/stream/function/DoubleToIntFunction;"
      source-file-name="DoubleToIntFunction.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="applyAsInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)I">
        <parameter
          name="p0"
          type="double"
          jni-type="D" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="DoubleToLongFunction"
      jni-signature="Lcom/annimon/stream/function/DoubleToLongFunction;"
      source-file-name="DoubleToLongFunction.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="applyAsLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)J">
        <parameter
          name="p0"
          type="double"
          jni-type="D" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="DoubleUnaryOperator"
      jni-signature="Lcom/annimon/stream/function/DoubleUnaryOperator;"
      source-file-name="DoubleUnaryOperator.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="applyAsDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)D">
        <parameter
          name="p0"
          type="double"
          jni-type="D" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="DoubleUnaryOperator.Util"
      jni-signature="Lcom/annimon/stream/function/DoubleUnaryOperator$Util;"
      source-file-name="DoubleUnaryOperator.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="identity"
        native="false"
        return="com.annimon.stream.function.DoubleUnaryOperator"
        jni-return="Lcom/annimon/stream/function/DoubleUnaryOperator;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/function/DoubleUnaryOperator;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/DoubleUnaryOperator$Util;"
      enclosing-method-name="identity"
      enclosing-method-signature="()Lcom/annimon/stream/function/DoubleUnaryOperator;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="DoubleUnaryOperator.Util.1"
      jni-signature="Lcom/annimon/stream/function/DoubleUnaryOperator$Util$1;"
      source-file-name="DoubleUnaryOperator.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.DoubleUnaryOperator"
        name-generic-aware="com.annimon.stream.function.DoubleUnaryOperator"
        jni-type="Lcom/annimon/stream/function/DoubleUnaryOperator;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)D">
        <parameter
          name="operand"
          type="double"
          jni-type="D" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="Function"
      jni-signature="Lcom/annimon/stream/function/Function;"
      source-file-name="Function.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="T"
          jni-type="TT;" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="Function.Util"
      jni-signature="Lcom/annimon/stream/function/Function$Util;"
      source-file-name="Function.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="andThen"
        native="false"
        return="com.annimon.stream.function.Function&lt;T, V&gt;"
        jni-return="Lcom/annimon/stream/function/Function&lt;TT;TV;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/function/Function;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="V"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="f1"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TR;&gt;;" />
        <parameter
          name="f2"
          type="com.annimon.stream.function.Function&lt;? super R, ? extends V&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TR;+TV;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="compose"
        native="false"
        return="com.annimon.stream.function.Function&lt;V, R&gt;"
        jni-return="Lcom/annimon/stream/function/Function&lt;TV;TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/function/Function;">
        <typeParameters>
          <typeParameter
            name="V"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="f1"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TR;&gt;;" />
        <parameter
          name="f2"
          type="com.annimon.stream.function.Function&lt;? super V, ? extends T&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TV;+TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.Function&lt;T, R&gt;"
        jni-return="Lcom/annimon/stream/function/Function&lt;TT;TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableFunction;)Lcom/annimon/stream/function/Function;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="throwableFunction"
          type="com.annimon.stream.function.ThrowableFunction&lt;? super T, ? extends R, java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableFunction&lt;-TT;+TR;Ljava/lang/Throwable;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.Function&lt;T, R&gt;"
        jni-return="Lcom/annimon/stream/function/Function&lt;TT;TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableFunction;Ljava/lang/Object;)Lcom/annimon/stream/function/Function;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="throwableFunction"
          type="com.annimon.stream.function.ThrowableFunction&lt;? super T, ? extends R, java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableFunction&lt;-TT;+TR;Ljava/lang/Throwable;&gt;;" />
        <parameter
          name="resultIfFailed"
          type="R"
          jni-type="TR;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/Function$Util;"
      enclosing-method-name="andThen"
      enclosing-method-signature="(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/function/Function;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Function.Util.1"
      jni-signature="Lcom/annimon/stream/function/Function$Util$1;"
      source-file-name="Function.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Function"
        name-generic-aware="com.annimon.stream.function.Function&lt;T, V&gt;"
        jni-type="Lcom/annimon/stream/function/Function&lt;TT;TV;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="V"
        jni-return="TV;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="t"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/Function$Util;"
      enclosing-method-name="safe"
      enclosing-method-signature="(Lcom/annimon/stream/function/ThrowableFunction;Ljava/lang/Object;)Lcom/annimon/stream/function/Function;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Function.Util.2"
      jni-signature="Lcom/annimon/stream/function/Function$Util$2;"
      source-file-name="Function.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Function"
        name-generic-aware="com.annimon.stream.function.Function&lt;T, R&gt;"
        jni-type="Lcom/annimon/stream/function/Function&lt;TT;TR;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="value"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IndexedBiFunction"
      jni-signature="Lcom/annimon/stream/function/IndexedBiFunction;"
      source-file-name="IndexedBiFunction.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="U"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
        <parameter
          name="p1"
          type="T"
          jni-type="TT;" />
        <parameter
          name="p2"
          type="U"
          jni-type="TU;" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IndexedBiFunction.Util"
      jni-signature="Lcom/annimon/stream/function/IndexedBiFunction$Util;"
      source-file-name="IndexedBiFunction.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="wrap"
        native="false"
        return="com.annimon.stream.function.IndexedBiFunction&lt;T, U, R&gt;"
        jni-return="Lcom/annimon/stream/function/IndexedBiFunction&lt;TT;TU;TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/BiFunction;)Lcom/annimon/stream/function/IndexedBiFunction;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="U"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="function"
          type="com.annimon.stream.function.BiFunction&lt;? super T, ? super U, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/BiFunction&lt;-TT;-TU;+TR;&gt;;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IndexedBiFunction$Util;"
      enclosing-method-name="wrap"
      enclosing-method-signature="(Lcom/annimon/stream/function/BiFunction;)Lcom/annimon/stream/function/IndexedBiFunction;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IndexedBiFunction.Util.1"
      jni-signature="Lcom/annimon/stream/function/IndexedBiFunction$Util$1;"
      source-file-name="IndexedBiFunction.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IndexedBiFunction"
        name-generic-aware="com.annimon.stream.function.IndexedBiFunction&lt;T, U, R&gt;"
        jni-type="Lcom/annimon/stream/function/IndexedBiFunction&lt;TT;TU;TR;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="index"
          type="int"
          jni-type="I" />
        <parameter
          name="t"
          type="T"
          jni-type="TT;" />
        <parameter
          name="u"
          type="U"
          jni-type="TU;" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IndexedConsumer"
      jni-signature="Lcom/annimon/stream/function/IndexedConsumer;"
      source-file-name="IndexedConsumer.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ILjava/lang/Object;)V">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
        <parameter
          name="p1"
          type="T"
          jni-type="TT;" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IndexedConsumer.Util"
      jni-signature="Lcom/annimon/stream/function/IndexedConsumer$Util;"
      source-file-name="IndexedConsumer.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="com.annimon.stream.function.IndexedConsumer&lt;T&gt;"
        jni-return="Lcom/annimon/stream/function/IndexedConsumer&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntConsumer;Lcom/annimon/stream/function/Consumer;)Lcom/annimon/stream/function/IndexedConsumer;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="c1"
          type="com.annimon.stream.function.IntConsumer"
          jni-type="Lcom/annimon/stream/function/IntConsumer;" />
        <parameter
          name="c2"
          type="com.annimon.stream.function.Consumer&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Consumer&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="wrap"
        native="false"
        return="com.annimon.stream.function.IndexedConsumer&lt;T&gt;"
        jni-return="Lcom/annimon/stream/function/IndexedConsumer&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Consumer;)Lcom/annimon/stream/function/IndexedConsumer;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="consumer"
          type="com.annimon.stream.function.Consumer&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Consumer&lt;-TT;&gt;;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IndexedConsumer$Util;"
      enclosing-method-name="wrap"
      enclosing-method-signature="(Lcom/annimon/stream/function/Consumer;)Lcom/annimon/stream/function/IndexedConsumer;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IndexedConsumer.Util.1"
      jni-signature="Lcom/annimon/stream/function/IndexedConsumer$Util$1;"
      source-file-name="IndexedConsumer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IndexedConsumer"
        name-generic-aware="com.annimon.stream.function.IndexedConsumer&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/IndexedConsumer&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ILjava/lang/Object;)V">
        <parameter
          name="index"
          type="int"
          jni-type="I" />
        <parameter
          name="t"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IndexedConsumer$Util;"
      enclosing-method-name="accept"
      enclosing-method-signature="(Lcom/annimon/stream/function/IntConsumer;Lcom/annimon/stream/function/Consumer;)Lcom/annimon/stream/function/IndexedConsumer;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IndexedConsumer.Util.2"
      jni-signature="Lcom/annimon/stream/function/IndexedConsumer$Util$2;"
      source-file-name="IndexedConsumer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IndexedConsumer"
        name-generic-aware="com.annimon.stream.function.IndexedConsumer&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/IndexedConsumer&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ILjava/lang/Object;)V">
        <parameter
          name="index"
          type="int"
          jni-type="I" />
        <parameter
          name="value"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IndexedDoubleConsumer"
      jni-signature="Lcom/annimon/stream/function/IndexedDoubleConsumer;"
      source-file-name="IndexedDoubleConsumer.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ID)V">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
        <parameter
          name="p1"
          type="double"
          jni-type="D" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IndexedDoubleConsumer.Util"
      jni-signature="Lcom/annimon/stream/function/IndexedDoubleConsumer$Util;"
      source-file-name="IndexedDoubleConsumer.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="com.annimon.stream.function.IndexedDoubleConsumer"
        jni-return="Lcom/annimon/stream/function/IndexedDoubleConsumer;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntConsumer;Lcom/annimon/stream/function/DoubleConsumer;)Lcom/annimon/stream/function/IndexedDoubleConsumer;">
        <parameter
          name="c1"
          type="com.annimon.stream.function.IntConsumer"
          jni-type="Lcom/annimon/stream/function/IntConsumer;" />
        <parameter
          name="c2"
          type="com.annimon.stream.function.DoubleConsumer"
          jni-type="Lcom/annimon/stream/function/DoubleConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="andThen"
        native="false"
        return="com.annimon.stream.function.IndexedDoubleConsumer"
        jni-return="Lcom/annimon/stream/function/IndexedDoubleConsumer;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IndexedDoubleConsumer;Lcom/annimon/stream/function/IndexedDoubleConsumer;)Lcom/annimon/stream/function/IndexedDoubleConsumer;">
        <parameter
          name="c1"
          type="com.annimon.stream.function.IndexedDoubleConsumer"
          jni-type="Lcom/annimon/stream/function/IndexedDoubleConsumer;" />
        <parameter
          name="c2"
          type="com.annimon.stream.function.IndexedDoubleConsumer"
          jni-type="Lcom/annimon/stream/function/IndexedDoubleConsumer;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IndexedDoubleConsumer$Util;"
      enclosing-method-name="andThen"
      enclosing-method-signature="(Lcom/annimon/stream/function/IndexedDoubleConsumer;Lcom/annimon/stream/function/IndexedDoubleConsumer;)Lcom/annimon/stream/function/IndexedDoubleConsumer;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IndexedDoubleConsumer.Util.1"
      jni-signature="Lcom/annimon/stream/function/IndexedDoubleConsumer$Util$1;"
      source-file-name="IndexedDoubleConsumer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IndexedDoubleConsumer"
        name-generic-aware="com.annimon.stream.function.IndexedDoubleConsumer"
        jni-type="Lcom/annimon/stream/function/IndexedDoubleConsumer;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ID)V">
        <parameter
          name="index"
          type="int"
          jni-type="I" />
        <parameter
          name="value"
          type="double"
          jni-type="D" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IndexedDoubleConsumer$Util;"
      enclosing-method-name="accept"
      enclosing-method-signature="(Lcom/annimon/stream/function/IntConsumer;Lcom/annimon/stream/function/DoubleConsumer;)Lcom/annimon/stream/function/IndexedDoubleConsumer;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IndexedDoubleConsumer.Util.2"
      jni-signature="Lcom/annimon/stream/function/IndexedDoubleConsumer$Util$2;"
      source-file-name="IndexedDoubleConsumer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IndexedDoubleConsumer"
        name-generic-aware="com.annimon.stream.function.IndexedDoubleConsumer"
        jni-type="Lcom/annimon/stream/function/IndexedDoubleConsumer;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ID)V">
        <parameter
          name="index"
          type="int"
          jni-type="I" />
        <parameter
          name="value"
          type="double"
          jni-type="D" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IndexedDoubleFunction"
      jni-signature="Lcom/annimon/stream/function/IndexedDoubleFunction;"
      source-file-name="IndexedDoubleFunction.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ID)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
        <parameter
          name="p1"
          type="double"
          jni-type="D" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IndexedDoubleFunction.Util"
      jni-signature="Lcom/annimon/stream/function/IndexedDoubleFunction$Util;"
      source-file-name="IndexedDoubleFunction.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="wrap"
        native="false"
        return="com.annimon.stream.function.IndexedDoubleFunction&lt;R&gt;"
        jni-return="Lcom/annimon/stream/function/IndexedDoubleFunction&lt;TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleFunction;)Lcom/annimon/stream/function/IndexedDoubleFunction;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="function"
          type="com.annimon.stream.function.DoubleFunction&lt;? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/DoubleFunction&lt;+TR;&gt;;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IndexedDoubleFunction$Util;"
      enclosing-method-name="wrap"
      enclosing-method-signature="(Lcom/annimon/stream/function/DoubleFunction;)Lcom/annimon/stream/function/IndexedDoubleFunction;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IndexedDoubleFunction.Util.1"
      jni-signature="Lcom/annimon/stream/function/IndexedDoubleFunction$Util$1;"
      source-file-name="IndexedDoubleFunction.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IndexedDoubleFunction"
        name-generic-aware="com.annimon.stream.function.IndexedDoubleFunction&lt;R&gt;"
        jni-type="Lcom/annimon/stream/function/IndexedDoubleFunction&lt;TR;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ID)Ljava/lang/Object;">
        <parameter
          name="index"
          type="int"
          jni-type="I" />
        <parameter
          name="value"
          type="double"
          jni-type="D" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IndexedDoublePredicate"
      jni-signature="Lcom/annimon/stream/function/IndexedDoublePredicate;"
      source-file-name="IndexedDoublePredicate.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ID)Z">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
        <parameter
          name="p1"
          type="double"
          jni-type="D" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IndexedDoublePredicate.Util"
      jni-signature="Lcom/annimon/stream/function/IndexedDoublePredicate$Util;"
      source-file-name="IndexedDoublePredicate.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="wrap"
        native="false"
        return="com.annimon.stream.function.IndexedDoublePredicate"
        jni-return="Lcom/annimon/stream/function/IndexedDoublePredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/function/IndexedDoublePredicate;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IndexedDoublePredicate$Util;"
      enclosing-method-name="wrap"
      enclosing-method-signature="(Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/function/IndexedDoublePredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IndexedDoublePredicate.Util.1"
      jni-signature="Lcom/annimon/stream/function/IndexedDoublePredicate$Util$1;"
      source-file-name="IndexedDoublePredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IndexedDoublePredicate"
        name-generic-aware="com.annimon.stream.function.IndexedDoublePredicate"
        jni-type="Lcom/annimon/stream/function/IndexedDoublePredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ID)Z">
        <parameter
          name="index"
          type="int"
          jni-type="I" />
        <parameter
          name="value"
          type="double"
          jni-type="D" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IndexedDoubleUnaryOperator"
      jni-signature="Lcom/annimon/stream/function/IndexedDoubleUnaryOperator;"
      source-file-name="IndexedDoubleUnaryOperator.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="applyAsDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ID)D">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
        <parameter
          name="p1"
          type="double"
          jni-type="D" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IndexedDoubleUnaryOperator.Util"
      jni-signature="Lcom/annimon/stream/function/IndexedDoubleUnaryOperator$Util;"
      source-file-name="IndexedDoubleUnaryOperator.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="wrap"
        native="false"
        return="com.annimon.stream.function.IndexedDoubleUnaryOperator"
        jni-return="Lcom/annimon/stream/function/IndexedDoubleUnaryOperator;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleUnaryOperator;)Lcom/annimon/stream/function/IndexedDoubleUnaryOperator;">
        <parameter
          name="function"
          type="com.annimon.stream.function.DoubleUnaryOperator"
          jni-type="Lcom/annimon/stream/function/DoubleUnaryOperator;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IndexedDoubleUnaryOperator$Util;"
      enclosing-method-name="wrap"
      enclosing-method-signature="(Lcom/annimon/stream/function/DoubleUnaryOperator;)Lcom/annimon/stream/function/IndexedDoubleUnaryOperator;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IndexedDoubleUnaryOperator.Util.1"
      jni-signature="Lcom/annimon/stream/function/IndexedDoubleUnaryOperator$Util$1;"
      source-file-name="IndexedDoubleUnaryOperator.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IndexedDoubleUnaryOperator"
        name-generic-aware="com.annimon.stream.function.IndexedDoubleUnaryOperator"
        jni-type="Lcom/annimon/stream/function/IndexedDoubleUnaryOperator;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ID)D">
        <parameter
          name="index"
          type="int"
          jni-type="I" />
        <parameter
          name="value"
          type="double"
          jni-type="D" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IndexedFunction"
      jni-signature="Lcom/annimon/stream/function/IndexedFunction;"
      source-file-name="IndexedFunction.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ILjava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
        <parameter
          name="p1"
          type="T"
          jni-type="TT;" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IndexedFunction.Util"
      jni-signature="Lcom/annimon/stream/function/IndexedFunction$Util;"
      source-file-name="IndexedFunction.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="wrap"
        native="false"
        return="com.annimon.stream.function.IndexedFunction&lt;T, R&gt;"
        jni-return="Lcom/annimon/stream/function/IndexedFunction&lt;TT;TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/function/IndexedFunction;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="function"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TR;&gt;;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IndexedFunction$Util;"
      enclosing-method-name="wrap"
      enclosing-method-signature="(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/function/IndexedFunction;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IndexedFunction.Util.1"
      jni-signature="Lcom/annimon/stream/function/IndexedFunction$Util$1;"
      source-file-name="IndexedFunction.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IndexedFunction"
        name-generic-aware="com.annimon.stream.function.IndexedFunction&lt;T, R&gt;"
        jni-type="Lcom/annimon/stream/function/IndexedFunction&lt;TT;TR;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ILjava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="index"
          type="int"
          jni-type="I" />
        <parameter
          name="t"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IndexedIntConsumer"
      jni-signature="Lcom/annimon/stream/function/IndexedIntConsumer;"
      source-file-name="IndexedIntConsumer.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(II)V">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
        <parameter
          name="p1"
          type="int"
          jni-type="I" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IndexedIntConsumer.Util"
      jni-signature="Lcom/annimon/stream/function/IndexedIntConsumer$Util;"
      source-file-name="IndexedIntConsumer.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="com.annimon.stream.function.IndexedIntConsumer"
        jni-return="Lcom/annimon/stream/function/IndexedIntConsumer;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntConsumer;Lcom/annimon/stream/function/IntConsumer;)Lcom/annimon/stream/function/IndexedIntConsumer;">
        <parameter
          name="c1"
          type="com.annimon.stream.function.IntConsumer"
          jni-type="Lcom/annimon/stream/function/IntConsumer;" />
        <parameter
          name="c2"
          type="com.annimon.stream.function.IntConsumer"
          jni-type="Lcom/annimon/stream/function/IntConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="andThen"
        native="false"
        return="com.annimon.stream.function.IndexedIntConsumer"
        jni-return="Lcom/annimon/stream/function/IndexedIntConsumer;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IndexedIntConsumer;Lcom/annimon/stream/function/IndexedIntConsumer;)Lcom/annimon/stream/function/IndexedIntConsumer;">
        <parameter
          name="c1"
          type="com.annimon.stream.function.IndexedIntConsumer"
          jni-type="Lcom/annimon/stream/function/IndexedIntConsumer;" />
        <parameter
          name="c2"
          type="com.annimon.stream.function.IndexedIntConsumer"
          jni-type="Lcom/annimon/stream/function/IndexedIntConsumer;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IndexedIntConsumer$Util;"
      enclosing-method-name="andThen"
      enclosing-method-signature="(Lcom/annimon/stream/function/IndexedIntConsumer;Lcom/annimon/stream/function/IndexedIntConsumer;)Lcom/annimon/stream/function/IndexedIntConsumer;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IndexedIntConsumer.Util.1"
      jni-signature="Lcom/annimon/stream/function/IndexedIntConsumer$Util$1;"
      source-file-name="IndexedIntConsumer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IndexedIntConsumer"
        name-generic-aware="com.annimon.stream.function.IndexedIntConsumer"
        jni-type="Lcom/annimon/stream/function/IndexedIntConsumer;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(II)V">
        <parameter
          name="index"
          type="int"
          jni-type="I" />
        <parameter
          name="value"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IndexedIntConsumer$Util;"
      enclosing-method-name="accept"
      enclosing-method-signature="(Lcom/annimon/stream/function/IntConsumer;Lcom/annimon/stream/function/IntConsumer;)Lcom/annimon/stream/function/IndexedIntConsumer;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IndexedIntConsumer.Util.2"
      jni-signature="Lcom/annimon/stream/function/IndexedIntConsumer$Util$2;"
      source-file-name="IndexedIntConsumer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IndexedIntConsumer"
        name-generic-aware="com.annimon.stream.function.IndexedIntConsumer"
        jni-type="Lcom/annimon/stream/function/IndexedIntConsumer;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(II)V">
        <parameter
          name="index"
          type="int"
          jni-type="I" />
        <parameter
          name="value"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IndexedIntFunction"
      jni-signature="Lcom/annimon/stream/function/IndexedIntFunction;"
      source-file-name="IndexedIntFunction.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(II)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
        <parameter
          name="p1"
          type="int"
          jni-type="I" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IndexedIntFunction.Util"
      jni-signature="Lcom/annimon/stream/function/IndexedIntFunction$Util;"
      source-file-name="IndexedIntFunction.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="wrap"
        native="false"
        return="com.annimon.stream.function.IndexedIntFunction&lt;R&gt;"
        jni-return="Lcom/annimon/stream/function/IndexedIntFunction&lt;TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntFunction;)Lcom/annimon/stream/function/IndexedIntFunction;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="function"
          type="com.annimon.stream.function.IntFunction&lt;? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/IntFunction&lt;+TR;&gt;;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IndexedIntFunction$Util;"
      enclosing-method-name="wrap"
      enclosing-method-signature="(Lcom/annimon/stream/function/IntFunction;)Lcom/annimon/stream/function/IndexedIntFunction;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IndexedIntFunction.Util.1"
      jni-signature="Lcom/annimon/stream/function/IndexedIntFunction$Util$1;"
      source-file-name="IndexedIntFunction.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IndexedIntFunction"
        name-generic-aware="com.annimon.stream.function.IndexedIntFunction&lt;R&gt;"
        jni-type="Lcom/annimon/stream/function/IndexedIntFunction&lt;TR;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(II)Ljava/lang/Object;">
        <parameter
          name="index"
          type="int"
          jni-type="I" />
        <parameter
          name="value"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IndexedIntPredicate"
      jni-signature="Lcom/annimon/stream/function/IndexedIntPredicate;"
      source-file-name="IndexedIntPredicate.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(II)Z">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
        <parameter
          name="p1"
          type="int"
          jni-type="I" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IndexedIntPredicate.Util"
      jni-signature="Lcom/annimon/stream/function/IndexedIntPredicate$Util;"
      source-file-name="IndexedIntPredicate.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="wrap"
        native="false"
        return="com.annimon.stream.function.IndexedIntPredicate"
        jni-return="Lcom/annimon/stream/function/IndexedIntPredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/function/IndexedIntPredicate;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IndexedIntPredicate$Util;"
      enclosing-method-name="wrap"
      enclosing-method-signature="(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/function/IndexedIntPredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IndexedIntPredicate.Util.1"
      jni-signature="Lcom/annimon/stream/function/IndexedIntPredicate$Util$1;"
      source-file-name="IndexedIntPredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IndexedIntPredicate"
        name-generic-aware="com.annimon.stream.function.IndexedIntPredicate"
        jni-type="Lcom/annimon/stream/function/IndexedIntPredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(II)Z">
        <parameter
          name="index"
          type="int"
          jni-type="I" />
        <parameter
          name="value"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IndexedLongConsumer"
      jni-signature="Lcom/annimon/stream/function/IndexedLongConsumer;"
      source-file-name="IndexedLongConsumer.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IJ)V">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
        <parameter
          name="p1"
          type="long"
          jni-type="J" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IndexedLongConsumer.Util"
      jni-signature="Lcom/annimon/stream/function/IndexedLongConsumer$Util;"
      source-file-name="IndexedLongConsumer.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="com.annimon.stream.function.IndexedLongConsumer"
        jni-return="Lcom/annimon/stream/function/IndexedLongConsumer;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntConsumer;Lcom/annimon/stream/function/LongConsumer;)Lcom/annimon/stream/function/IndexedLongConsumer;">
        <parameter
          name="c1"
          type="com.annimon.stream.function.IntConsumer"
          jni-type="Lcom/annimon/stream/function/IntConsumer;" />
        <parameter
          name="c2"
          type="com.annimon.stream.function.LongConsumer"
          jni-type="Lcom/annimon/stream/function/LongConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="andThen"
        native="false"
        return="com.annimon.stream.function.IndexedLongConsumer"
        jni-return="Lcom/annimon/stream/function/IndexedLongConsumer;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IndexedLongConsumer;Lcom/annimon/stream/function/IndexedLongConsumer;)Lcom/annimon/stream/function/IndexedLongConsumer;">
        <parameter
          name="c1"
          type="com.annimon.stream.function.IndexedLongConsumer"
          jni-type="Lcom/annimon/stream/function/IndexedLongConsumer;" />
        <parameter
          name="c2"
          type="com.annimon.stream.function.IndexedLongConsumer"
          jni-type="Lcom/annimon/stream/function/IndexedLongConsumer;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IndexedLongConsumer$Util;"
      enclosing-method-name="andThen"
      enclosing-method-signature="(Lcom/annimon/stream/function/IndexedLongConsumer;Lcom/annimon/stream/function/IndexedLongConsumer;)Lcom/annimon/stream/function/IndexedLongConsumer;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IndexedLongConsumer.Util.1"
      jni-signature="Lcom/annimon/stream/function/IndexedLongConsumer$Util$1;"
      source-file-name="IndexedLongConsumer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IndexedLongConsumer"
        name-generic-aware="com.annimon.stream.function.IndexedLongConsumer"
        jni-type="Lcom/annimon/stream/function/IndexedLongConsumer;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IJ)V">
        <parameter
          name="index"
          type="int"
          jni-type="I" />
        <parameter
          name="value"
          type="long"
          jni-type="J" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IndexedLongConsumer$Util;"
      enclosing-method-name="accept"
      enclosing-method-signature="(Lcom/annimon/stream/function/IntConsumer;Lcom/annimon/stream/function/LongConsumer;)Lcom/annimon/stream/function/IndexedLongConsumer;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IndexedLongConsumer.Util.2"
      jni-signature="Lcom/annimon/stream/function/IndexedLongConsumer$Util$2;"
      source-file-name="IndexedLongConsumer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IndexedLongConsumer"
        name-generic-aware="com.annimon.stream.function.IndexedLongConsumer"
        jni-type="Lcom/annimon/stream/function/IndexedLongConsumer;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IJ)V">
        <parameter
          name="index"
          type="int"
          jni-type="I" />
        <parameter
          name="value"
          type="long"
          jni-type="J" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IndexedLongFunction"
      jni-signature="Lcom/annimon/stream/function/IndexedLongFunction;"
      source-file-name="IndexedLongFunction.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IJ)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
        <parameter
          name="p1"
          type="long"
          jni-type="J" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IndexedLongFunction.Util"
      jni-signature="Lcom/annimon/stream/function/IndexedLongFunction$Util;"
      source-file-name="IndexedLongFunction.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="wrap"
        native="false"
        return="com.annimon.stream.function.IndexedLongFunction&lt;R&gt;"
        jni-return="Lcom/annimon/stream/function/IndexedLongFunction&lt;TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongFunction;)Lcom/annimon/stream/function/IndexedLongFunction;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="function"
          type="com.annimon.stream.function.LongFunction&lt;? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/LongFunction&lt;+TR;&gt;;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IndexedLongFunction$Util;"
      enclosing-method-name="wrap"
      enclosing-method-signature="(Lcom/annimon/stream/function/LongFunction;)Lcom/annimon/stream/function/IndexedLongFunction;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IndexedLongFunction.Util.1"
      jni-signature="Lcom/annimon/stream/function/IndexedLongFunction$Util$1;"
      source-file-name="IndexedLongFunction.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IndexedLongFunction"
        name-generic-aware="com.annimon.stream.function.IndexedLongFunction&lt;R&gt;"
        jni-type="Lcom/annimon/stream/function/IndexedLongFunction&lt;TR;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IJ)Ljava/lang/Object;">
        <parameter
          name="index"
          type="int"
          jni-type="I" />
        <parameter
          name="value"
          type="long"
          jni-type="J" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IndexedLongPredicate"
      jni-signature="Lcom/annimon/stream/function/IndexedLongPredicate;"
      source-file-name="IndexedLongPredicate.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IJ)Z">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
        <parameter
          name="p1"
          type="long"
          jni-type="J" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IndexedLongPredicate.Util"
      jni-signature="Lcom/annimon/stream/function/IndexedLongPredicate$Util;"
      source-file-name="IndexedLongPredicate.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="wrap"
        native="false"
        return="com.annimon.stream.function.IndexedLongPredicate"
        jni-return="Lcom/annimon/stream/function/IndexedLongPredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/function/IndexedLongPredicate;">
        <parameter
          name="predicate"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IndexedLongPredicate$Util;"
      enclosing-method-name="wrap"
      enclosing-method-signature="(Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/function/IndexedLongPredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IndexedLongPredicate.Util.1"
      jni-signature="Lcom/annimon/stream/function/IndexedLongPredicate$Util$1;"
      source-file-name="IndexedLongPredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IndexedLongPredicate"
        name-generic-aware="com.annimon.stream.function.IndexedLongPredicate"
        jni-type="Lcom/annimon/stream/function/IndexedLongPredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IJ)Z">
        <parameter
          name="index"
          type="int"
          jni-type="I" />
        <parameter
          name="value"
          type="long"
          jni-type="J" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IndexedLongUnaryOperator"
      jni-signature="Lcom/annimon/stream/function/IndexedLongUnaryOperator;"
      source-file-name="IndexedLongUnaryOperator.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="applyAsLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IJ)J">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
        <parameter
          name="p1"
          type="long"
          jni-type="J" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IndexedLongUnaryOperator.Util"
      jni-signature="Lcom/annimon/stream/function/IndexedLongUnaryOperator$Util;"
      source-file-name="IndexedLongUnaryOperator.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="wrap"
        native="false"
        return="com.annimon.stream.function.IndexedLongUnaryOperator"
        jni-return="Lcom/annimon/stream/function/IndexedLongUnaryOperator;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongUnaryOperator;)Lcom/annimon/stream/function/IndexedLongUnaryOperator;">
        <parameter
          name="function"
          type="com.annimon.stream.function.LongUnaryOperator"
          jni-type="Lcom/annimon/stream/function/LongUnaryOperator;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IndexedLongUnaryOperator$Util;"
      enclosing-method-name="wrap"
      enclosing-method-signature="(Lcom/annimon/stream/function/LongUnaryOperator;)Lcom/annimon/stream/function/IndexedLongUnaryOperator;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IndexedLongUnaryOperator.Util.1"
      jni-signature="Lcom/annimon/stream/function/IndexedLongUnaryOperator$Util$1;"
      source-file-name="IndexedLongUnaryOperator.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IndexedLongUnaryOperator"
        name-generic-aware="com.annimon.stream.function.IndexedLongUnaryOperator"
        jni-type="Lcom/annimon/stream/function/IndexedLongUnaryOperator;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IJ)J">
        <parameter
          name="index"
          type="int"
          jni-type="I" />
        <parameter
          name="value"
          type="long"
          jni-type="J" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IndexedPredicate"
      jni-signature="Lcom/annimon/stream/function/IndexedPredicate;"
      source-file-name="IndexedPredicate.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ILjava/lang/Object;)Z">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
        <parameter
          name="p1"
          type="T"
          jni-type="TT;" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IndexedPredicate.Util"
      jni-signature="Lcom/annimon/stream/function/IndexedPredicate$Util;"
      source-file-name="IndexedPredicate.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="wrap"
        native="false"
        return="com.annimon.stream.function.IndexedPredicate&lt;T&gt;"
        jni-return="Lcom/annimon/stream/function/IndexedPredicate&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/function/IndexedPredicate;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="predicate"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IndexedPredicate$Util;"
      enclosing-method-name="wrap"
      enclosing-method-signature="(Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/function/IndexedPredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IndexedPredicate.Util.1"
      jni-signature="Lcom/annimon/stream/function/IndexedPredicate$Util$1;"
      source-file-name="IndexedPredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IndexedPredicate"
        name-generic-aware="com.annimon.stream.function.IndexedPredicate&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/IndexedPredicate&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ILjava/lang/Object;)Z">
        <parameter
          name="index"
          type="int"
          jni-type="I" />
        <parameter
          name="value"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IntBinaryOperator"
      jni-signature="Lcom/annimon/stream/function/IntBinaryOperator;"
      source-file-name="IntBinaryOperator.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="applyAsInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(II)I">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
        <parameter
          name="p1"
          type="int"
          jni-type="I" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IntConsumer"
      jni-signature="Lcom/annimon/stream/function/IntConsumer;"
      source-file-name="IntConsumer.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)V">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IntConsumer.Util"
      jni-signature="Lcom/annimon/stream/function/IntConsumer$Util;"
      source-file-name="IntConsumer.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="andThen"
        native="false"
        return="com.annimon.stream.function.IntConsumer"
        jni-return="Lcom/annimon/stream/function/IntConsumer;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntConsumer;Lcom/annimon/stream/function/IntConsumer;)Lcom/annimon/stream/function/IntConsumer;">
        <parameter
          name="c1"
          type="com.annimon.stream.function.IntConsumer"
          jni-type="Lcom/annimon/stream/function/IntConsumer;" />
        <parameter
          name="c2"
          type="com.annimon.stream.function.IntConsumer"
          jni-type="Lcom/annimon/stream/function/IntConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.IntConsumer"
        jni-return="Lcom/annimon/stream/function/IntConsumer;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableIntConsumer;)Lcom/annimon/stream/function/IntConsumer;">
        <parameter
          name="throwableConsumer"
          type="com.annimon.stream.function.ThrowableIntConsumer&lt;java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableIntConsumer&lt;Ljava/lang/Throwable;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.IntConsumer"
        jni-return="Lcom/annimon/stream/function/IntConsumer;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableIntConsumer;Lcom/annimon/stream/function/IntConsumer;)Lcom/annimon/stream/function/IntConsumer;">
        <parameter
          name="throwableConsumer"
          type="com.annimon.stream.function.ThrowableIntConsumer&lt;java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableIntConsumer&lt;Ljava/lang/Throwable;&gt;;" />
        <parameter
          name="onFailedConsumer"
          type="com.annimon.stream.function.IntConsumer"
          jni-type="Lcom/annimon/stream/function/IntConsumer;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IntConsumer$Util;"
      enclosing-method-name="andThen"
      enclosing-method-signature="(Lcom/annimon/stream/function/IntConsumer;Lcom/annimon/stream/function/IntConsumer;)Lcom/annimon/stream/function/IntConsumer;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IntConsumer.Util.1"
      jni-signature="Lcom/annimon/stream/function/IntConsumer$Util$1;"
      source-file-name="IntConsumer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IntConsumer"
        name-generic-aware="com.annimon.stream.function.IntConsumer"
        jni-type="Lcom/annimon/stream/function/IntConsumer;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)V">
        <parameter
          name="value"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IntConsumer$Util;"
      enclosing-method-name="safe"
      enclosing-method-signature="(Lcom/annimon/stream/function/ThrowableIntConsumer;Lcom/annimon/stream/function/IntConsumer;)Lcom/annimon/stream/function/IntConsumer;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IntConsumer.Util.2"
      jni-signature="Lcom/annimon/stream/function/IntConsumer$Util$2;"
      source-file-name="IntConsumer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IntConsumer"
        name-generic-aware="com.annimon.stream.function.IntConsumer"
        jni-type="Lcom/annimon/stream/function/IntConsumer;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)V">
        <parameter
          name="value"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IntFunction"
      jni-signature="Lcom/annimon/stream/function/IntFunction;"
      source-file-name="IntFunction.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IntFunction.Util"
      jni-signature="Lcom/annimon/stream/function/IntFunction$Util;"
      source-file-name="IntFunction.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.IntFunction&lt;R&gt;"
        jni-return="Lcom/annimon/stream/function/IntFunction&lt;TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableIntFunction;)Lcom/annimon/stream/function/IntFunction;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="throwableFunction"
          type="com.annimon.stream.function.ThrowableIntFunction&lt;? extends R, java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableIntFunction&lt;+TR;Ljava/lang/Throwable;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.IntFunction&lt;R&gt;"
        jni-return="Lcom/annimon/stream/function/IntFunction&lt;TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableIntFunction;Ljava/lang/Object;)Lcom/annimon/stream/function/IntFunction;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="throwableFunction"
          type="com.annimon.stream.function.ThrowableIntFunction&lt;? extends R, java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableIntFunction&lt;+TR;Ljava/lang/Throwable;&gt;;" />
        <parameter
          name="resultIfFailed"
          type="R"
          jni-type="TR;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IntFunction$Util;"
      enclosing-method-name="safe"
      enclosing-method-signature="(Lcom/annimon/stream/function/ThrowableIntFunction;Ljava/lang/Object;)Lcom/annimon/stream/function/IntFunction;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IntFunction.Util.1"
      jni-signature="Lcom/annimon/stream/function/IntFunction$Util$1;"
      source-file-name="IntFunction.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IntFunction"
        name-generic-aware="com.annimon.stream.function.IntFunction&lt;R&gt;"
        jni-type="Lcom/annimon/stream/function/IntFunction&lt;TR;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)Ljava/lang/Object;">
        <parameter
          name="value"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IntPredicate"
      jni-signature="Lcom/annimon/stream/function/IntPredicate;"
      source-file-name="IntPredicate.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)Z">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IntPredicate.Util"
      jni-signature="Lcom/annimon/stream/function/IntPredicate$Util;"
      source-file-name="IntPredicate.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="and"
        native="false"
        return="com.annimon.stream.function.IntPredicate"
        jni-return="Lcom/annimon/stream/function/IntPredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntPredicate;Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/function/IntPredicate;">
        <parameter
          name="p1"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
        <parameter
          name="p2"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="negate"
        native="false"
        return="com.annimon.stream.function.IntPredicate"
        jni-return="Lcom/annimon/stream/function/IntPredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/function/IntPredicate;">
        <parameter
          name="p1"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="or"
        native="false"
        return="com.annimon.stream.function.IntPredicate"
        jni-return="Lcom/annimon/stream/function/IntPredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntPredicate;Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/function/IntPredicate;">
        <parameter
          name="p1"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
        <parameter
          name="p2"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.IntPredicate"
        jni-return="Lcom/annimon/stream/function/IntPredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableIntPredicate;)Lcom/annimon/stream/function/IntPredicate;">
        <parameter
          name="throwablePredicate"
          type="com.annimon.stream.function.ThrowableIntPredicate&lt;java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableIntPredicate&lt;Ljava/lang/Throwable;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.IntPredicate"
        jni-return="Lcom/annimon/stream/function/IntPredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableIntPredicate;Z)Lcom/annimon/stream/function/IntPredicate;">
        <parameter
          name="throwablePredicate"
          type="com.annimon.stream.function.ThrowableIntPredicate&lt;java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableIntPredicate&lt;Ljava/lang/Throwable;&gt;;" />
        <parameter
          name="resultIfFailed"
          type="boolean"
          jni-type="Z" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="xor"
        native="false"
        return="com.annimon.stream.function.IntPredicate"
        jni-return="Lcom/annimon/stream/function/IntPredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntPredicate;Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/function/IntPredicate;">
        <parameter
          name="p1"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
        <parameter
          name="p2"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IntPredicate$Util;"
      enclosing-method-name="and"
      enclosing-method-signature="(Lcom/annimon/stream/function/IntPredicate;Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/function/IntPredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IntPredicate.Util.1"
      jni-signature="Lcom/annimon/stream/function/IntPredicate$Util$1;"
      source-file-name="IntPredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IntPredicate"
        name-generic-aware="com.annimon.stream.function.IntPredicate"
        jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)Z">
        <parameter
          name="value"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IntPredicate$Util;"
      enclosing-method-name="or"
      enclosing-method-signature="(Lcom/annimon/stream/function/IntPredicate;Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/function/IntPredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IntPredicate.Util.2"
      jni-signature="Lcom/annimon/stream/function/IntPredicate$Util$2;"
      source-file-name="IntPredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IntPredicate"
        name-generic-aware="com.annimon.stream.function.IntPredicate"
        jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)Z">
        <parameter
          name="value"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IntPredicate$Util;"
      enclosing-method-name="xor"
      enclosing-method-signature="(Lcom/annimon/stream/function/IntPredicate;Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/function/IntPredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IntPredicate.Util.3"
      jni-signature="Lcom/annimon/stream/function/IntPredicate$Util$3;"
      source-file-name="IntPredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IntPredicate"
        name-generic-aware="com.annimon.stream.function.IntPredicate"
        jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)Z">
        <parameter
          name="value"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IntPredicate$Util;"
      enclosing-method-name="negate"
      enclosing-method-signature="(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/function/IntPredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IntPredicate.Util.4"
      jni-signature="Lcom/annimon/stream/function/IntPredicate$Util$4;"
      source-file-name="IntPredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IntPredicate"
        name-generic-aware="com.annimon.stream.function.IntPredicate"
        jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)Z">
        <parameter
          name="value"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IntPredicate$Util;"
      enclosing-method-name="safe"
      enclosing-method-signature="(Lcom/annimon/stream/function/ThrowableIntPredicate;Z)Lcom/annimon/stream/function/IntPredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IntPredicate.Util.5"
      jni-signature="Lcom/annimon/stream/function/IntPredicate$Util$5;"
      source-file-name="IntPredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IntPredicate"
        name-generic-aware="com.annimon.stream.function.IntPredicate"
        jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)Z">
        <parameter
          name="value"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IntSupplier"
      jni-signature="Lcom/annimon/stream/function/IntSupplier;"
      source-file-name="IntSupplier.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="getAsInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IntSupplier.Util"
      jni-signature="Lcom/annimon/stream/function/IntSupplier$Util;"
      source-file-name="IntSupplier.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.IntSupplier"
        jni-return="Lcom/annimon/stream/function/IntSupplier;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableIntSupplier;)Lcom/annimon/stream/function/IntSupplier;">
        <parameter
          name="throwableSupplier"
          type="com.annimon.stream.function.ThrowableIntSupplier&lt;java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableIntSupplier&lt;Ljava/lang/Throwable;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.IntSupplier"
        jni-return="Lcom/annimon/stream/function/IntSupplier;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableIntSupplier;I)Lcom/annimon/stream/function/IntSupplier;">
        <parameter
          name="throwableSupplier"
          type="com.annimon.stream.function.ThrowableIntSupplier&lt;java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableIntSupplier&lt;Ljava/lang/Throwable;&gt;;" />
        <parameter
          name="resultIfFailed"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IntSupplier$Util;"
      enclosing-method-name="safe"
      enclosing-method-signature="(Lcom/annimon/stream/function/ThrowableIntSupplier;I)Lcom/annimon/stream/function/IntSupplier;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IntSupplier.Util.1"
      jni-signature="Lcom/annimon/stream/function/IntSupplier$Util$1;"
      source-file-name="IntSupplier.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IntSupplier"
        name-generic-aware="com.annimon.stream.function.IntSupplier"
        jni-type="Lcom/annimon/stream/function/IntSupplier;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getAsInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IntToDoubleFunction"
      jni-signature="Lcom/annimon/stream/function/IntToDoubleFunction;"
      source-file-name="IntToDoubleFunction.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="applyAsDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)D">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IntToLongFunction"
      jni-signature="Lcom/annimon/stream/function/IntToLongFunction;"
      source-file-name="IntToLongFunction.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="applyAsLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)J">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="IntUnaryOperator"
      jni-signature="Lcom/annimon/stream/function/IntUnaryOperator;"
      source-file-name="IntUnaryOperator.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="applyAsInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)I">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IntUnaryOperator.Util"
      jni-signature="Lcom/annimon/stream/function/IntUnaryOperator$Util;"
      source-file-name="IntUnaryOperator.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="identity"
        native="false"
        return="com.annimon.stream.function.IntUnaryOperator"
        jni-return="Lcom/annimon/stream/function/IntUnaryOperator;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/function/IntUnaryOperator;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/IntUnaryOperator$Util;"
      enclosing-method-name="identity"
      enclosing-method-signature="()Lcom/annimon/stream/function/IntUnaryOperator;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="IntUnaryOperator.Util.1"
      jni-signature="Lcom/annimon/stream/function/IntUnaryOperator$Util$1;"
      source-file-name="IntUnaryOperator.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IntUnaryOperator"
        name-generic-aware="com.annimon.stream.function.IntUnaryOperator"
        jni-type="Lcom/annimon/stream/function/IntUnaryOperator;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)I">
        <parameter
          name="operand"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="LongBinaryOperator"
      jni-signature="Lcom/annimon/stream/function/LongBinaryOperator;"
      source-file-name="LongBinaryOperator.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="applyAsLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(JJ)J">
        <parameter
          name="p0"
          type="long"
          jni-type="J" />
        <parameter
          name="p1"
          type="long"
          jni-type="J" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="LongConsumer"
      jni-signature="Lcom/annimon/stream/function/LongConsumer;"
      source-file-name="LongConsumer.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)V">
        <parameter
          name="p0"
          type="long"
          jni-type="J" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="LongConsumer.Util"
      jni-signature="Lcom/annimon/stream/function/LongConsumer$Util;"
      source-file-name="LongConsumer.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="andThen"
        native="false"
        return="com.annimon.stream.function.LongConsumer"
        jni-return="Lcom/annimon/stream/function/LongConsumer;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongConsumer;Lcom/annimon/stream/function/LongConsumer;)Lcom/annimon/stream/function/LongConsumer;">
        <parameter
          name="c1"
          type="com.annimon.stream.function.LongConsumer"
          jni-type="Lcom/annimon/stream/function/LongConsumer;" />
        <parameter
          name="c2"
          type="com.annimon.stream.function.LongConsumer"
          jni-type="Lcom/annimon/stream/function/LongConsumer;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.LongConsumer"
        jni-return="Lcom/annimon/stream/function/LongConsumer;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableLongConsumer;)Lcom/annimon/stream/function/LongConsumer;">
        <parameter
          name="throwableConsumer"
          type="com.annimon.stream.function.ThrowableLongConsumer&lt;java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableLongConsumer&lt;Ljava/lang/Throwable;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.LongConsumer"
        jni-return="Lcom/annimon/stream/function/LongConsumer;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableLongConsumer;Lcom/annimon/stream/function/LongConsumer;)Lcom/annimon/stream/function/LongConsumer;">
        <parameter
          name="throwableConsumer"
          type="com.annimon.stream.function.ThrowableLongConsumer&lt;java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableLongConsumer&lt;Ljava/lang/Throwable;&gt;;" />
        <parameter
          name="onFailedConsumer"
          type="com.annimon.stream.function.LongConsumer"
          jni-type="Lcom/annimon/stream/function/LongConsumer;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/LongConsumer$Util;"
      enclosing-method-name="andThen"
      enclosing-method-signature="(Lcom/annimon/stream/function/LongConsumer;Lcom/annimon/stream/function/LongConsumer;)Lcom/annimon/stream/function/LongConsumer;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="LongConsumer.Util.1"
      jni-signature="Lcom/annimon/stream/function/LongConsumer$Util$1;"
      source-file-name="LongConsumer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.LongConsumer"
        name-generic-aware="com.annimon.stream.function.LongConsumer"
        jni-type="Lcom/annimon/stream/function/LongConsumer;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)V">
        <parameter
          name="value"
          type="long"
          jni-type="J" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/LongConsumer$Util;"
      enclosing-method-name="safe"
      enclosing-method-signature="(Lcom/annimon/stream/function/ThrowableLongConsumer;Lcom/annimon/stream/function/LongConsumer;)Lcom/annimon/stream/function/LongConsumer;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="LongConsumer.Util.2"
      jni-signature="Lcom/annimon/stream/function/LongConsumer$Util$2;"
      source-file-name="LongConsumer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.LongConsumer"
        name-generic-aware="com.annimon.stream.function.LongConsumer"
        jni-type="Lcom/annimon/stream/function/LongConsumer;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)V">
        <parameter
          name="value"
          type="long"
          jni-type="J" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="LongFunction"
      jni-signature="Lcom/annimon/stream/function/LongFunction;"
      source-file-name="LongFunction.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="long"
          jni-type="J" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="LongFunction.Util"
      jni-signature="Lcom/annimon/stream/function/LongFunction$Util;"
      source-file-name="LongFunction.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.LongFunction&lt;R&gt;"
        jni-return="Lcom/annimon/stream/function/LongFunction&lt;TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableLongFunction;)Lcom/annimon/stream/function/LongFunction;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="throwableFunction"
          type="com.annimon.stream.function.ThrowableLongFunction&lt;? extends R, java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableLongFunction&lt;+TR;Ljava/lang/Throwable;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.LongFunction&lt;R&gt;"
        jni-return="Lcom/annimon/stream/function/LongFunction&lt;TR;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableLongFunction;Ljava/lang/Object;)Lcom/annimon/stream/function/LongFunction;">
        <typeParameters>
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="throwableFunction"
          type="com.annimon.stream.function.ThrowableLongFunction&lt;? extends R, java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableLongFunction&lt;+TR;Ljava/lang/Throwable;&gt;;" />
        <parameter
          name="resultIfFailed"
          type="R"
          jni-type="TR;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/LongFunction$Util;"
      enclosing-method-name="safe"
      enclosing-method-signature="(Lcom/annimon/stream/function/ThrowableLongFunction;Ljava/lang/Object;)Lcom/annimon/stream/function/LongFunction;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="LongFunction.Util.1"
      jni-signature="Lcom/annimon/stream/function/LongFunction$Util$1;"
      source-file-name="LongFunction.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.LongFunction"
        name-generic-aware="com.annimon.stream.function.LongFunction&lt;R&gt;"
        jni-type="Lcom/annimon/stream/function/LongFunction&lt;TR;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Ljava/lang/Object;">
        <parameter
          name="value"
          type="long"
          jni-type="J" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="LongPredicate"
      jni-signature="Lcom/annimon/stream/function/LongPredicate;"
      source-file-name="LongPredicate.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Z">
        <parameter
          name="p0"
          type="long"
          jni-type="J" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="LongPredicate.Util"
      jni-signature="Lcom/annimon/stream/function/LongPredicate$Util;"
      source-file-name="LongPredicate.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="and"
        native="false"
        return="com.annimon.stream.function.LongPredicate"
        jni-return="Lcom/annimon/stream/function/LongPredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongPredicate;Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/function/LongPredicate;">
        <parameter
          name="p1"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
        <parameter
          name="p2"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="negate"
        native="false"
        return="com.annimon.stream.function.LongPredicate"
        jni-return="Lcom/annimon/stream/function/LongPredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/function/LongPredicate;">
        <parameter
          name="p1"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="or"
        native="false"
        return="com.annimon.stream.function.LongPredicate"
        jni-return="Lcom/annimon/stream/function/LongPredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongPredicate;Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/function/LongPredicate;">
        <parameter
          name="p1"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
        <parameter
          name="p2"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.LongPredicate"
        jni-return="Lcom/annimon/stream/function/LongPredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableLongPredicate;)Lcom/annimon/stream/function/LongPredicate;">
        <parameter
          name="throwablePredicate"
          type="com.annimon.stream.function.ThrowableLongPredicate&lt;java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableLongPredicate&lt;Ljava/lang/Throwable;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.LongPredicate"
        jni-return="Lcom/annimon/stream/function/LongPredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableLongPredicate;Z)Lcom/annimon/stream/function/LongPredicate;">
        <parameter
          name="throwablePredicate"
          type="com.annimon.stream.function.ThrowableLongPredicate&lt;java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableLongPredicate&lt;Ljava/lang/Throwable;&gt;;" />
        <parameter
          name="resultIfFailed"
          type="boolean"
          jni-type="Z" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="xor"
        native="false"
        return="com.annimon.stream.function.LongPredicate"
        jni-return="Lcom/annimon/stream/function/LongPredicate;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongPredicate;Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/function/LongPredicate;">
        <parameter
          name="p1"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
        <parameter
          name="p2"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/LongPredicate$Util;"
      enclosing-method-name="and"
      enclosing-method-signature="(Lcom/annimon/stream/function/LongPredicate;Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/function/LongPredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="LongPredicate.Util.1"
      jni-signature="Lcom/annimon/stream/function/LongPredicate$Util$1;"
      source-file-name="LongPredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.LongPredicate"
        name-generic-aware="com.annimon.stream.function.LongPredicate"
        jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Z">
        <parameter
          name="value"
          type="long"
          jni-type="J" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/LongPredicate$Util;"
      enclosing-method-name="or"
      enclosing-method-signature="(Lcom/annimon/stream/function/LongPredicate;Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/function/LongPredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="LongPredicate.Util.2"
      jni-signature="Lcom/annimon/stream/function/LongPredicate$Util$2;"
      source-file-name="LongPredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.LongPredicate"
        name-generic-aware="com.annimon.stream.function.LongPredicate"
        jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Z">
        <parameter
          name="value"
          type="long"
          jni-type="J" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/LongPredicate$Util;"
      enclosing-method-name="xor"
      enclosing-method-signature="(Lcom/annimon/stream/function/LongPredicate;Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/function/LongPredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="LongPredicate.Util.3"
      jni-signature="Lcom/annimon/stream/function/LongPredicate$Util$3;"
      source-file-name="LongPredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.LongPredicate"
        name-generic-aware="com.annimon.stream.function.LongPredicate"
        jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Z">
        <parameter
          name="value"
          type="long"
          jni-type="J" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/LongPredicate$Util;"
      enclosing-method-name="negate"
      enclosing-method-signature="(Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/function/LongPredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="LongPredicate.Util.4"
      jni-signature="Lcom/annimon/stream/function/LongPredicate$Util$4;"
      source-file-name="LongPredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.LongPredicate"
        name-generic-aware="com.annimon.stream.function.LongPredicate"
        jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Z">
        <parameter
          name="value"
          type="long"
          jni-type="J" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/LongPredicate$Util;"
      enclosing-method-name="safe"
      enclosing-method-signature="(Lcom/annimon/stream/function/ThrowableLongPredicate;Z)Lcom/annimon/stream/function/LongPredicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="LongPredicate.Util.5"
      jni-signature="Lcom/annimon/stream/function/LongPredicate$Util$5;"
      source-file-name="LongPredicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.LongPredicate"
        name-generic-aware="com.annimon.stream.function.LongPredicate"
        jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Z">
        <parameter
          name="value"
          type="long"
          jni-type="J" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="LongSupplier"
      jni-signature="Lcom/annimon/stream/function/LongSupplier;"
      source-file-name="LongSupplier.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="getAsLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="LongSupplier.Util"
      jni-signature="Lcom/annimon/stream/function/LongSupplier$Util;"
      source-file-name="LongSupplier.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.LongSupplier"
        jni-return="Lcom/annimon/stream/function/LongSupplier;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableLongSupplier;)Lcom/annimon/stream/function/LongSupplier;">
        <parameter
          name="throwableSupplier"
          type="com.annimon.stream.function.ThrowableLongSupplier&lt;java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableLongSupplier&lt;Ljava/lang/Throwable;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.LongSupplier"
        jni-return="Lcom/annimon/stream/function/LongSupplier;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableLongSupplier;J)Lcom/annimon/stream/function/LongSupplier;">
        <parameter
          name="throwableSupplier"
          type="com.annimon.stream.function.ThrowableLongSupplier&lt;java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableLongSupplier&lt;Ljava/lang/Throwable;&gt;;" />
        <parameter
          name="resultIfFailed"
          type="long"
          jni-type="J" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/LongSupplier$Util;"
      enclosing-method-name="safe"
      enclosing-method-signature="(Lcom/annimon/stream/function/ThrowableLongSupplier;J)Lcom/annimon/stream/function/LongSupplier;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="LongSupplier.Util.1"
      jni-signature="Lcom/annimon/stream/function/LongSupplier$Util$1;"
      source-file-name="LongSupplier.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.LongSupplier"
        name-generic-aware="com.annimon.stream.function.LongSupplier"
        jni-type="Lcom/annimon/stream/function/LongSupplier;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getAsLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="LongToDoubleFunction"
      jni-signature="Lcom/annimon/stream/function/LongToDoubleFunction;"
      source-file-name="LongToDoubleFunction.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="applyAsDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)D">
        <parameter
          name="p0"
          type="long"
          jni-type="J" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="LongToIntFunction"
      jni-signature="Lcom/annimon/stream/function/LongToIntFunction;"
      source-file-name="LongToIntFunction.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="applyAsInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)I">
        <parameter
          name="p0"
          type="long"
          jni-type="J" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="LongUnaryOperator"
      jni-signature="Lcom/annimon/stream/function/LongUnaryOperator;"
      source-file-name="LongUnaryOperator.java"
      static="false"
      visibility="public">
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="applyAsLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)J">
        <parameter
          name="p0"
          type="long"
          jni-type="J" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="LongUnaryOperator.Util"
      jni-signature="Lcom/annimon/stream/function/LongUnaryOperator$Util;"
      source-file-name="LongUnaryOperator.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="identity"
        native="false"
        return="com.annimon.stream.function.LongUnaryOperator"
        jni-return="Lcom/annimon/stream/function/LongUnaryOperator;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/function/LongUnaryOperator;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/LongUnaryOperator$Util;"
      enclosing-method-name="identity"
      enclosing-method-signature="()Lcom/annimon/stream/function/LongUnaryOperator;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="LongUnaryOperator.Util.1"
      jni-signature="Lcom/annimon/stream/function/LongUnaryOperator$Util$1;"
      source-file-name="LongUnaryOperator.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.LongUnaryOperator"
        name-generic-aware="com.annimon.stream.function.LongUnaryOperator"
        jni-type="Lcom/annimon/stream/function/LongUnaryOperator;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="applyAsLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)J">
        <parameter
          name="operand"
          type="long"
          jni-type="J" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ObjDoubleConsumer"
      jni-signature="Lcom/annimon/stream/function/ObjDoubleConsumer;"
      source-file-name="ObjDoubleConsumer.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;D)V">
        <parameter
          name="p0"
          type="T"
          jni-type="TT;" />
        <parameter
          name="p1"
          type="double"
          jni-type="D" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ObjIntConsumer"
      jni-signature="Lcom/annimon/stream/function/ObjIntConsumer;"
      source-file-name="ObjIntConsumer.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;I)V">
        <parameter
          name="p0"
          type="T"
          jni-type="TT;" />
        <parameter
          name="p1"
          type="int"
          jni-type="I" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ObjLongConsumer"
      jni-signature="Lcom/annimon/stream/function/ObjLongConsumer;"
      source-file-name="ObjLongConsumer.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;J)V">
        <parameter
          name="p0"
          type="T"
          jni-type="TT;" />
        <parameter
          name="p1"
          type="long"
          jni-type="J" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="Predicate"
      jni-signature="Lcom/annimon/stream/function/Predicate;"
      source-file-name="Predicate.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="p0"
          type="T"
          jni-type="TT;" />
      </method>
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="Predicate.Util"
      jni-signature="Lcom/annimon/stream/function/Predicate$Util;"
      source-file-name="Predicate.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="and"
        native="false"
        return="com.annimon.stream.function.Predicate&lt;T&gt;"
        jni-return="Lcom/annimon/stream/function/Predicate&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Predicate;Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/function/Predicate;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="p1"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
        <parameter
          name="p2"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="and"
        native="false"
        return="com.annimon.stream.function.Predicate&lt;T&gt;"
        jni-return="Lcom/annimon/stream/function/Predicate&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Predicate;Lcom/annimon/stream/function/Predicate;[Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/function/Predicate;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="p1"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
        <parameter
          name="p2"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
        <parameter
          name="rest"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;..."
          jni-type="[Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="negate"
        native="false"
        return="com.annimon.stream.function.Predicate&lt;T&gt;"
        jni-return="Lcom/annimon/stream/function/Predicate&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/function/Predicate;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="p1"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="notNull"
        native="false"
        return="com.annimon.stream.function.Predicate&lt;T&gt;"
        jni-return="Lcom/annimon/stream/function/Predicate&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/function/Predicate;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="or"
        native="false"
        return="com.annimon.stream.function.Predicate&lt;T&gt;"
        jni-return="Lcom/annimon/stream/function/Predicate&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Predicate;Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/function/Predicate;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="p1"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
        <parameter
          name="p2"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="or"
        native="false"
        return="com.annimon.stream.function.Predicate&lt;T&gt;"
        jni-return="Lcom/annimon/stream/function/Predicate&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Predicate;Lcom/annimon/stream/function/Predicate;[Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/function/Predicate;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="p1"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
        <parameter
          name="p2"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
        <parameter
          name="rest"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;..."
          jni-type="[Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.Predicate&lt;T&gt;"
        jni-return="Lcom/annimon/stream/function/Predicate&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowablePredicate;)Lcom/annimon/stream/function/Predicate;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="throwablePredicate"
          type="com.annimon.stream.function.ThrowablePredicate&lt;? super T, java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowablePredicate&lt;-TT;Ljava/lang/Throwable;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.Predicate&lt;T&gt;"
        jni-return="Lcom/annimon/stream/function/Predicate&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowablePredicate;Z)Lcom/annimon/stream/function/Predicate;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="throwablePredicate"
          type="com.annimon.stream.function.ThrowablePredicate&lt;? super T, java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowablePredicate&lt;-TT;Ljava/lang/Throwable;&gt;;" />
        <parameter
          name="resultIfFailed"
          type="boolean"
          jni-type="Z" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="xor"
        native="false"
        return="com.annimon.stream.function.Predicate&lt;T&gt;"
        jni-return="Lcom/annimon/stream/function/Predicate&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Predicate;Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/function/Predicate;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="p1"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
        <parameter
          name="p2"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/Predicate$Util;"
      enclosing-method-name="and"
      enclosing-method-signature="(Lcom/annimon/stream/function/Predicate;Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/function/Predicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Predicate.Util.1"
      jni-signature="Lcom/annimon/stream/function/Predicate$Util$1;"
      source-file-name="Predicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Predicate"
        name-generic-aware="com.annimon.stream.function.Predicate&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/Predicate&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="value"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/Predicate$Util;"
      enclosing-method-name="and"
      enclosing-method-signature="(Lcom/annimon/stream/function/Predicate;Lcom/annimon/stream/function/Predicate;[Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/function/Predicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Predicate.Util.2"
      jni-signature="Lcom/annimon/stream/function/Predicate$Util$2;"
      source-file-name="Predicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Predicate"
        name-generic-aware="com.annimon.stream.function.Predicate&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/Predicate&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="value"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/Predicate$Util;"
      enclosing-method-name="or"
      enclosing-method-signature="(Lcom/annimon/stream/function/Predicate;Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/function/Predicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Predicate.Util.3"
      jni-signature="Lcom/annimon/stream/function/Predicate$Util$3;"
      source-file-name="Predicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Predicate"
        name-generic-aware="com.annimon.stream.function.Predicate&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/Predicate&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="value"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/Predicate$Util;"
      enclosing-method-name="or"
      enclosing-method-signature="(Lcom/annimon/stream/function/Predicate;Lcom/annimon/stream/function/Predicate;[Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/function/Predicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Predicate.Util.4"
      jni-signature="Lcom/annimon/stream/function/Predicate$Util$4;"
      source-file-name="Predicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Predicate"
        name-generic-aware="com.annimon.stream.function.Predicate&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/Predicate&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="value"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/Predicate$Util;"
      enclosing-method-name="xor"
      enclosing-method-signature="(Lcom/annimon/stream/function/Predicate;Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/function/Predicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Predicate.Util.5"
      jni-signature="Lcom/annimon/stream/function/Predicate$Util$5;"
      source-file-name="Predicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Predicate"
        name-generic-aware="com.annimon.stream.function.Predicate&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/Predicate&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="value"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/Predicate$Util;"
      enclosing-method-name="negate"
      enclosing-method-signature="(Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/function/Predicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Predicate.Util.6"
      jni-signature="Lcom/annimon/stream/function/Predicate$Util$6;"
      source-file-name="Predicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Predicate"
        name-generic-aware="com.annimon.stream.function.Predicate&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/Predicate&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="value"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/Predicate$Util;"
      enclosing-method-name="notNull"
      enclosing-method-signature="()Lcom/annimon/stream/function/Predicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Predicate.Util.7"
      jni-signature="Lcom/annimon/stream/function/Predicate$Util$7;"
      source-file-name="Predicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Predicate"
        name-generic-aware="com.annimon.stream.function.Predicate&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/Predicate&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="value"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/Predicate$Util;"
      enclosing-method-name="safe"
      enclosing-method-signature="(Lcom/annimon/stream/function/ThrowablePredicate;Z)Lcom/annimon/stream/function/Predicate;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Predicate.Util.8"
      jni-signature="Lcom/annimon/stream/function/Predicate$Util$8;"
      source-file-name="Predicate.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Predicate"
        name-generic-aware="com.annimon.stream.function.Predicate&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/Predicate&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="value"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="Supplier"
      jni-signature="Lcom/annimon/stream/function/Supplier;"
      source-file-name="Supplier.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="Supplier.Util"
      jni-signature="Lcom/annimon/stream/function/Supplier$Util;"
      source-file-name="Supplier.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.Supplier&lt;T&gt;"
        jni-return="Lcom/annimon/stream/function/Supplier&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableSupplier;)Lcom/annimon/stream/function/Supplier;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="throwableSupplier"
          type="com.annimon.stream.function.ThrowableSupplier&lt;? extends T, java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableSupplier&lt;+TT;Ljava/lang/Throwable;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="safe"
        native="false"
        return="com.annimon.stream.function.Supplier&lt;T&gt;"
        jni-return="Lcom/annimon/stream/function/Supplier&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/ThrowableSupplier;Ljava/lang/Object;)Lcom/annimon/stream/function/Supplier;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="throwableSupplier"
          type="com.annimon.stream.function.ThrowableSupplier&lt;? extends T, java.lang.Throwable&gt;"
          jni-type="Lcom/annimon/stream/function/ThrowableSupplier&lt;+TT;Ljava/lang/Throwable;&gt;;" />
        <parameter
          name="resultIfFailed"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/Supplier$Util;"
      enclosing-method-name="safe"
      enclosing-method-signature="(Lcom/annimon/stream/function/ThrowableSupplier;Ljava/lang/Object;)Lcom/annimon/stream/function/Supplier;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Supplier.Util.1"
      jni-signature="Lcom/annimon/stream/function/Supplier$Util$1;"
      source-file-name="Supplier.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.Supplier"
        name-generic-aware="com.annimon.stream.function.Supplier&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/Supplier&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
    </class>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ThrowableConsumer"
      jni-signature="Lcom/annimon/stream/function/ThrowableConsumer;"
      source-file-name="ThrowableConsumer.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="E"
          jni-classBound="Ljava/lang/Throwable;"
          classBound="java.lang.Throwable"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)V">
        <parameter
          name="p0"
          type="T"
          jni-type="TT;" />
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="E" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ThrowableDoubleConsumer"
      jni-signature="Lcom/annimon/stream/function/ThrowableDoubleConsumer;"
      source-file-name="ThrowableDoubleConsumer.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="E"
          jni-classBound="Ljava/lang/Throwable;"
          classBound="java.lang.Throwable"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)V">
        <parameter
          name="p0"
          type="double"
          jni-type="D" />
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="E" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ThrowableDoubleFunction"
      jni-signature="Lcom/annimon/stream/function/ThrowableDoubleFunction;"
      source-file-name="ThrowableDoubleFunction.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="E"
          jni-classBound="Ljava/lang/Throwable;"
          classBound="java.lang.Throwable"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="double"
          jni-type="D" />
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="E" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ThrowableDoublePredicate"
      jni-signature="Lcom/annimon/stream/function/ThrowableDoublePredicate;"
      source-file-name="ThrowableDoublePredicate.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="E"
          jni-classBound="Ljava/lang/Throwable;"
          classBound="java.lang.Throwable"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)Z">
        <parameter
          name="p0"
          type="double"
          jni-type="D" />
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="E" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ThrowableDoubleSupplier"
      jni-signature="Lcom/annimon/stream/function/ThrowableDoubleSupplier;"
      source-file-name="ThrowableDoubleSupplier.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="E"
          jni-classBound="Ljava/lang/Throwable;"
          classBound="java.lang.Throwable"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="getAsDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D">
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="E" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ThrowableFunction"
      jni-signature="Lcom/annimon/stream/function/ThrowableFunction;"
      source-file-name="ThrowableFunction.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="I"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="E"
          jni-classBound="Ljava/lang/Throwable;"
          classBound="java.lang.Throwable"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="I"
          jni-type="TI;" />
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="E" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ThrowableIntConsumer"
      jni-signature="Lcom/annimon/stream/function/ThrowableIntConsumer;"
      source-file-name="ThrowableIntConsumer.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="E"
          jni-classBound="Ljava/lang/Throwable;"
          classBound="java.lang.Throwable"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)V">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="E" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ThrowableIntFunction"
      jni-signature="Lcom/annimon/stream/function/ThrowableIntFunction;"
      source-file-name="ThrowableIntFunction.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="E"
          jni-classBound="Ljava/lang/Throwable;"
          classBound="java.lang.Throwable"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="E" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ThrowableIntPredicate"
      jni-signature="Lcom/annimon/stream/function/ThrowableIntPredicate;"
      source-file-name="ThrowableIntPredicate.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="E"
          jni-classBound="Ljava/lang/Throwable;"
          classBound="java.lang.Throwable"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)Z">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="E" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ThrowableIntSupplier"
      jni-signature="Lcom/annimon/stream/function/ThrowableIntSupplier;"
      source-file-name="ThrowableIntSupplier.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="E"
          jni-classBound="Ljava/lang/Throwable;"
          classBound="java.lang.Throwable"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="getAsInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I">
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="E" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ThrowableLongConsumer"
      jni-signature="Lcom/annimon/stream/function/ThrowableLongConsumer;"
      source-file-name="ThrowableLongConsumer.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="E"
          jni-classBound="Ljava/lang/Throwable;"
          classBound="java.lang.Throwable"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)V">
        <parameter
          name="p0"
          type="long"
          jni-type="J" />
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="E" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ThrowableLongFunction"
      jni-signature="Lcom/annimon/stream/function/ThrowableLongFunction;"
      source-file-name="ThrowableLongFunction.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="E"
          jni-classBound="Ljava/lang/Throwable;"
          classBound="java.lang.Throwable"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="long"
          jni-type="J" />
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="E" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ThrowableLongPredicate"
      jni-signature="Lcom/annimon/stream/function/ThrowableLongPredicate;"
      source-file-name="ThrowableLongPredicate.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="E"
          jni-classBound="Ljava/lang/Throwable;"
          classBound="java.lang.Throwable"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)Z">
        <parameter
          name="p0"
          type="long"
          jni-type="J" />
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="E" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ThrowableLongSupplier"
      jni-signature="Lcom/annimon/stream/function/ThrowableLongSupplier;"
      source-file-name="ThrowableLongSupplier.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="E"
          jni-classBound="Ljava/lang/Throwable;"
          classBound="java.lang.Throwable"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="getAsLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J">
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="E" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ThrowablePredicate"
      jni-signature="Lcom/annimon/stream/function/ThrowablePredicate;"
      source-file-name="ThrowablePredicate.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="E"
          jni-classBound="Ljava/lang/Throwable;"
          classBound="java.lang.Throwable"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="test"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="p0"
          type="T"
          jni-type="TT;" />
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="E" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ThrowableSupplier"
      jni-signature="Lcom/annimon/stream/function/ThrowableSupplier;"
      source-file-name="ThrowableSupplier.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="E"
          jni-classBound="Ljava/lang/Throwable;"
          classBound="java.lang.Throwable"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;">
        <exception
          name="java/lang/Throwable"
          type="java.lang.Throwable"
          type-generic-aware="E" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ToBooleanFunction"
      jni-signature="Lcom/annimon/stream/function/ToBooleanFunction;"
      source-file-name="ToBooleanFunction.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="applyAsBoolean"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Z">
        <parameter
          name="p0"
          type="T"
          jni-type="TT;" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ToDoubleFunction"
      jni-signature="Lcom/annimon/stream/function/ToDoubleFunction;"
      source-file-name="ToDoubleFunction.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="applyAsDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)D">
        <parameter
          name="p0"
          type="T"
          jni-type="TT;" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ToIntFunction"
      jni-signature="Lcom/annimon/stream/function/ToIntFunction;"
      source-file-name="ToIntFunction.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="applyAsInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)I">
        <parameter
          name="p0"
          type="T"
          jni-type="TT;" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="ToLongFunction"
      jni-signature="Lcom/annimon/stream/function/ToLongFunction;"
      source-file-name="ToLongFunction.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="applyAsLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)J">
        <parameter
          name="p0"
          type="T"
          jni-type="TT;" />
      </method>
    </interface>
    <interface
      abstract="true"
      deprecated="not deprecated"
      final="false"
      name="UnaryOperator"
      jni-signature="Lcom/annimon/stream/function/UnaryOperator;"
      source-file-name="UnaryOperator.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <implements
        name="com.annimon.stream.function.Function"
        name-generic-aware="com.annimon.stream.function.Function&lt;T, T&gt;"
        jni-type="Lcom/annimon/stream/function/Function&lt;TT;TT;&gt;;" />
    </interface>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="UnaryOperator.Util"
      jni-signature="Lcom/annimon/stream/function/UnaryOperator$Util;"
      source-file-name="UnaryOperator.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="identity"
        native="false"
        return="com.annimon.stream.function.UnaryOperator&lt;T&gt;"
        jni-return="Lcom/annimon/stream/function/UnaryOperator&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/function/UnaryOperator;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/function/UnaryOperator$Util;"
      enclosing-method-name="identity"
      enclosing-method-signature="()Lcom/annimon/stream/function/UnaryOperator;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="UnaryOperator.Util.1"
      jni-signature="Lcom/annimon/stream/function/UnaryOperator$Util$1;"
      source-file-name="UnaryOperator.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.UnaryOperator"
        name-generic-aware="com.annimon.stream.function.UnaryOperator&lt;T&gt;"
        jni-type="Lcom/annimon/stream/function/UnaryOperator&lt;TT;&gt;;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="apply"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)Ljava/lang/Object;">
        <parameter
          name="t"
          type="T"
          jni-type="TT;" />
      </method>
    </class>
  </package>
  <package
    name="com.annimon.stream.internal"
    jni-name="com/annimon/stream/internal">
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Compat"
      jni-signature="Lcom/annimon/stream/internal/Compat;"
      source-file-name="Compat.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="Compat"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="newArray"
        native="false"
        return="E[]"
        jni-return="[TE;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I[Ljava/lang/Object;)[Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="E"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="length"
          type="int"
          jni-type="I" />
        <parameter
          name="array"
          type="E..."
          jni-type="[TE;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="newArrayCompat"
        native="false"
        return="E[]"
        jni-return="[TE;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([Ljava/lang/Object;I)[Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="E"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="array"
          type="E[]"
          jni-type="[TE;" />
        <parameter
          name="length"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="queue"
        native="false"
        return="java.util.Queue&lt;T&gt;"
        jni-return="Ljava/util/Queue&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/util/Queue;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Compose"
      jni-signature="Lcom/annimon/stream/internal/Compose;"
      source-file-name="Compose.java"
      static="false"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="closeables"
        native="false"
        return="java.lang.Runnable"
        jni-return="Ljava/lang/Runnable;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/io/Closeable;Ljava/io/Closeable;)Ljava/lang/Runnable;">
        <parameter
          name="a"
          type="java.io.Closeable"
          jni-type="Ljava/io/Closeable;" />
        <parameter
          name="b"
          type="java.io.Closeable"
          jni-type="Ljava/io/Closeable;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="runnables"
        native="false"
        return="java.lang.Runnable"
        jni-return="Ljava/lang/Runnable;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Runnable;Ljava/lang/Runnable;)Ljava/lang/Runnable;">
        <parameter
          name="a"
          type="java.lang.Runnable"
          jni-type="Ljava/lang/Runnable;" />
        <parameter
          name="b"
          type="java.lang.Runnable"
          jni-type="Ljava/lang/Runnable;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/internal/Compose;"
      enclosing-method-name="runnables"
      enclosing-method-signature="(Ljava/lang/Runnable;Ljava/lang/Runnable;)Ljava/lang/Runnable;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Compose.1"
      jni-signature="Lcom/annimon/stream/internal/Compose$1;"
      source-file-name="Compose.java"
      static="true"
      visibility="">
      <implements
        name="java.lang.Runnable"
        name-generic-aware="java.lang.Runnable"
        jni-type="Ljava/lang/Runnable;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="run"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/internal/Compose;"
      enclosing-method-name="closeables"
      enclosing-method-signature="(Ljava/io/Closeable;Ljava/io/Closeable;)Ljava/lang/Runnable;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Compose.2"
      jni-signature="Lcom/annimon/stream/internal/Compose$2;"
      source-file-name="Compose.java"
      static="true"
      visibility="">
      <implements
        name="java.lang.Runnable"
        name-generic-aware="java.lang.Runnable"
        jni-type="Ljava/lang/Runnable;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="run"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Operators"
      jni-signature="Lcom/annimon/stream/internal/Operators;"
      source-file-name="Operators.java"
      static="false"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toArray"
        native="false"
        return="R[]"
        jni-return="[TR;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Lcom/annimon/stream/function/IntFunction;)[Ljava/lang/Object;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
          <typeParameter
            name="R"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="generator"
          type="com.annimon.stream.function.IntFunction&lt;R[]&gt;"
          jni-type="Lcom/annimon/stream/function/IntFunction&lt;[TR;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toDoubleArray"
        native="false"
        return="double[]"
        jni-return="[D"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;)[D">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toIntArray"
        native="false"
        return="int[]"
        jni-return="[I"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;)[I">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toList"
        native="false"
        return="java.util.List&lt;T&gt;"
        jni-return="Ljava/util/List&lt;TT;&gt;;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;)Ljava/util/List;">
        <typeParameters>
          <typeParameter
            name="T"
            jni-classBound="Ljava/lang/Object;"
            classBound="java.lang.Object"
            interfaceBounds=""
            jni-interfaceBounds="" />
        </typeParameters>
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="toLongArray"
        native="false"
        return="long[]"
        jni-return="[J"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;)[J">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="Params"
      jni-signature="Lcom/annimon/stream/internal/Params;"
      source-file-name="Params.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="Params"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <field
        deprecated="not deprecated"
        final="false"
        name="closeHandler"
        static="false"
        synthetic="false"
        transient="false"
        type="java.lang.Runnable"
        type-generic-aware="java.lang.Runnable"
        jni-signature="Ljava/lang/Runnable;"
        visibility="public"
        volatile="false" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="SpinedBuffer"
      jni-signature="Lcom/annimon/stream/internal/SpinedBuffer;"
      source-file-name="SpinedBuffer.java"
      static="false"
      visibility="" />
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/internal/SpinedBuffer$OfPrimitive;"
      extends="com.annimon.stream.internal.SpinedBuffer.OfPrimitive"
      extends-generic-aware="com.annimon.stream.internal.SpinedBuffer.OfPrimitive&lt;java.lang.Double, double[], com.annimon.stream.function.DoubleConsumer&gt;"
      final="false"
      name="SpinedBuffer.OfDouble"
      jni-signature="Lcom/annimon/stream/internal/SpinedBuffer$OfDouble;"
      source-file-name="SpinedBuffer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.DoubleConsumer"
        name-generic-aware="com.annimon.stream.function.DoubleConsumer"
        jni-type="Lcom/annimon/stream/function/DoubleConsumer;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(D)V">
        <parameter
          name="i"
          type="double"
          jni-type="D" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="arrayLength"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;)I">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="arrayLength"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="([D)I">
        <parameter
          name="array"
          type="double[]"
          jni-type="[D" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)D">
        <parameter
          name="index"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="iterator"
        native="false"
        return="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
        jni-return="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="iterator"
        native="false"
        return="java.util.Iterator"
        jni-return="Ljava/util/Iterator;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()Ljava/util/Iterator;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="newArray"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(I)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="newArray"
        native="false"
        return="double[]"
        jni-return="[D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)[D">
        <parameter
          name="size"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="newArrayArray"
        native="false"
        return="java.lang.Object[]"
        jni-return="[Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="true"
        synthetic="true"
        jni-signature="(I)[Ljava/lang/Object;">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="newArrayArray"
        native="false"
        return="double[][]"
        jni-return="[[D"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="(I)[[D">
        <parameter
          name="size"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/internal/SpinedBuffer$OfDouble;"
      enclosing-method-name="iterator"
      enclosing-method-signature="()Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      final="false"
      name="SpinedBuffer.OfDouble.1"
      jni-signature="Lcom/annimon/stream/internal/SpinedBuffer$OfDouble$1;"
      source-file-name="SpinedBuffer.java"
      static="false"
      visibility="">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/internal/SpinedBuffer$OfPrimitive;"
      extends="com.annimon.stream.internal.SpinedBuffer.OfPrimitive"
      extends-generic-aware="com.annimon.stream.internal.SpinedBuffer.OfPrimitive&lt;java.lang.Integer, int[], com.annimon.stream.function.IntConsumer&gt;"
      final="false"
      name="SpinedBuffer.OfInt"
      jni-signature="Lcom/annimon/stream/internal/SpinedBuffer$OfInt;"
      source-file-name="SpinedBuffer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.IntConsumer"
        name-generic-aware="com.annimon.stream.function.IntConsumer"
        jni-type="Lcom/annimon/stream/function/IntConsumer;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)V">
        <parameter
          name="i"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="arrayLength"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;)I">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="arrayLength"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="([I)I">
        <parameter
          name="array"
          type="int[]"
          jni-type="[I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)I">
        <parameter
          name="index"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="iterator"
        native="false"
        return="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
        jni-return="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="iterator"
        native="false"
        return="java.util.Iterator"
        jni-return="Ljava/util/Iterator;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()Ljava/util/Iterator;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="newArray"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(I)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="newArray"
        native="false"
        return="int[]"
        jni-return="[I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)[I">
        <parameter
          name="size"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="newArrayArray"
        native="false"
        return="java.lang.Object[]"
        jni-return="[Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="true"
        synthetic="true"
        jni-signature="(I)[Ljava/lang/Object;">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="newArrayArray"
        native="false"
        return="int[][]"
        jni-return="[[I"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="(I)[[I">
        <parameter
          name="size"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/internal/SpinedBuffer$OfInt;"
      enclosing-method-name="iterator"
      enclosing-method-signature="()Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="SpinedBuffer.OfInt.1"
      jni-signature="Lcom/annimon/stream/internal/SpinedBuffer$OfInt$1;"
      source-file-name="SpinedBuffer.java"
      static="false"
      visibility="">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/internal/SpinedBuffer$OfPrimitive;"
      extends="com.annimon.stream.internal.SpinedBuffer.OfPrimitive"
      extends-generic-aware="com.annimon.stream.internal.SpinedBuffer.OfPrimitive&lt;java.lang.Long, long[], com.annimon.stream.function.LongConsumer&gt;"
      final="false"
      name="SpinedBuffer.OfLong"
      jni-signature="Lcom/annimon/stream/internal/SpinedBuffer$OfLong;"
      source-file-name="SpinedBuffer.java"
      static="true"
      visibility="">
      <implements
        name="com.annimon.stream.function.LongConsumer"
        name-generic-aware="com.annimon.stream.function.LongConsumer"
        jni-type="Lcom/annimon/stream/function/LongConsumer;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="accept"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)V">
        <parameter
          name="i"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="arrayLength"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="true"
        synthetic="true"
        jni-signature="(Ljava/lang/Object;)I">
        <parameter
          name="p0"
          type="java.lang.Object"
          jni-type="Ljava/lang/Object;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="arrayLength"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="([J)I">
        <parameter
          name="array"
          type="long[]"
          jni-type="[J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="get"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(J)J">
        <parameter
          name="index"
          type="long"
          jni-type="J" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="iterator"
        native="false"
        return="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
        jni-return="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="iterator"
        native="false"
        return="java.util.Iterator"
        jni-return="Ljava/util/Iterator;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()Ljava/util/Iterator;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="newArray"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="(I)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="newArray"
        native="false"
        return="long[]"
        jni-return="[J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(I)[J">
        <parameter
          name="size"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="newArrayArray"
        native="false"
        return="java.lang.Object[]"
        jni-return="[Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="true"
        synthetic="true"
        jni-signature="(I)[Ljava/lang/Object;">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="newArrayArray"
        native="false"
        return="long[][]"
        jni-return="[[J"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="(I)[[J">
        <parameter
          name="size"
          type="int"
          jni-type="I" />
      </method>
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/internal/SpinedBuffer$OfLong;"
      enclosing-method-name="iterator"
      enclosing-method-signature="()Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="false"
      name="SpinedBuffer.OfLong.1"
      jni-signature="Lcom/annimon/stream/internal/SpinedBuffer$OfLong$1;"
      source-file-name="SpinedBuffer.java"
      static="false"
      visibility="">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="true"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="SpinedBuffer.OfPrimitive"
      jni-signature="Lcom/annimon/stream/internal/SpinedBuffer$OfPrimitive;"
      source-file-name="SpinedBuffer.java"
      static="true"
      visibility="">
      <typeParameters>
        <typeParameter
          name="E"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="T_ARR"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="T_CONS"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <implements
        name="java.lang.Iterable"
        name-generic-aware="java.lang.Iterable&lt;E&gt;"
        jni-type="Ljava/lang/Iterable&lt;TE;&gt;;" />
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="arrayLength"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;)I">
        <parameter
          name="p0"
          type="T_ARR"
          jni-type="TT_ARR;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="asPrimitiveArray"
        native="false"
        return="T_ARR"
        jni-return="TT_ARR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="clear"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="count"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="isEmpty"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="iterator"
        native="false"
        return="java.util.Iterator&lt;E&gt;"
        jni-return="Ljava/util/Iterator&lt;TE;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/util/Iterator;" />
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="newArray"
        native="false"
        return="T_ARR"
        jni-return="TT_ARR;"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="(I)Ljava/lang/Object;">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
      </method>
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="newArrayArray"
        native="false"
        return="T_ARR[]"
        jni-return="[TT_ARR;"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="(I)[Ljava/lang/Object;">
        <parameter
          name="p0"
          type="int"
          jni-type="I" />
      </method>
    </class>
  </package>
  <package
    name="com.annimon.stream.iterator"
    jni-name="com/annimon/stream/iterator">
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="IndexedIterator"
      jni-signature="Lcom/annimon/stream/iterator/IndexedIterator;"
      source-file-name="IndexedIterator.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <implements
        name="java.util.Iterator"
        name-generic-aware="java.util.Iterator&lt;T&gt;"
        jni-type="Ljava/util/Iterator&lt;TT;&gt;;" />
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IndexedIterator"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILjava/util/Iterator;)V">
        <parameter
          name="start"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
      </constructor>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IndexedIterator"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getIndex"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="next"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="remove"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="LazyIterator"
      jni-signature="Lcom/annimon/stream/iterator/LazyIterator;"
      source-file-name="LazyIterator.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <implements
        name="java.util.Iterator"
        name-generic-aware="java.util.Iterator&lt;T&gt;"
        jni-type="Ljava/util/Iterator&lt;TT;&gt;;" />
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LazyIterator"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Iterable;)V">
        <parameter
          name="iterable"
          type="java.lang.Iterable&lt;? extends T&gt;"
          jni-type="Ljava/lang/Iterable&lt;+TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="next"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="remove"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="true"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="LsaExtIterator"
      jni-signature="Lcom/annimon/stream/iterator/LsaExtIterator;"
      source-file-name="LsaExtIterator.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <implements
        name="java.util.Iterator"
        name-generic-aware="java.util.Iterator&lt;T&gt;"
        jni-type="Ljava/util/Iterator&lt;TT;&gt;;" />
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LsaExtIterator"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="next"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="remove"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <field
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        static="false"
        synthetic="false"
        transient="false"
        type="boolean"
        type-generic-aware="boolean"
        jni-signature="Z"
        visibility="protected"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="false"
        name="isInit"
        static="false"
        synthetic="false"
        transient="false"
        type="boolean"
        type-generic-aware="boolean"
        jni-signature="Z"
        visibility="protected"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="false"
        name="next"
        static="false"
        synthetic="false"
        transient="false"
        type="java.lang.Object"
        type-generic-aware="T"
        jni-signature="Ljava/lang/Object;"
        visibility="protected"
        volatile="false" />
    </class>
    <class
      abstract="true"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="LsaIterator"
      jni-signature="Lcom/annimon/stream/iterator/LsaIterator;"
      source-file-name="LsaIterator.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <implements
        name="java.util.Iterator"
        name-generic-aware="java.util.Iterator&lt;T&gt;"
        jni-type="Ljava/util/Iterator&lt;TT;&gt;;" />
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LsaIterator"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="true"
        name="next"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="remove"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="PrimitiveExtIterator"
      jni-signature="Lcom/annimon/stream/iterator/PrimitiveExtIterator;"
      source-file-name="PrimitiveExtIterator.java"
      static="false"
      visibility="public" />
    <class
      abstract="true"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      final="false"
      name="PrimitiveExtIterator.OfDouble"
      jni-signature="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfDouble;"
      source-file-name="PrimitiveExtIterator.java"
      static="true"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="PrimitiveExtIterator.OfDouble"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <field
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        static="false"
        synthetic="false"
        transient="false"
        type="boolean"
        type-generic-aware="boolean"
        jni-signature="Z"
        visibility="protected"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="false"
        name="isInit"
        static="false"
        synthetic="false"
        transient="false"
        type="boolean"
        type-generic-aware="boolean"
        jni-signature="Z"
        visibility="protected"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="false"
        name="next"
        static="false"
        synthetic="false"
        transient="false"
        type="double"
        type-generic-aware="double"
        jni-signature="D"
        visibility="protected"
        volatile="false" />
    </class>
    <class
      abstract="true"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="PrimitiveExtIterator.OfInt"
      jni-signature="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfInt;"
      source-file-name="PrimitiveExtIterator.java"
      static="true"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="PrimitiveExtIterator.OfInt"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <field
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        static="false"
        synthetic="false"
        transient="false"
        type="boolean"
        type-generic-aware="boolean"
        jni-signature="Z"
        visibility="protected"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="false"
        name="isInit"
        static="false"
        synthetic="false"
        transient="false"
        type="boolean"
        type-generic-aware="boolean"
        jni-signature="Z"
        visibility="protected"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="false"
        name="next"
        static="false"
        synthetic="false"
        transient="false"
        type="int"
        type-generic-aware="int"
        jni-signature="I"
        visibility="protected"
        volatile="false" />
    </class>
    <class
      abstract="true"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="false"
      name="PrimitiveExtIterator.OfLong"
      jni-signature="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfLong;"
      source-file-name="PrimitiveExtIterator.java"
      static="true"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="PrimitiveExtIterator.OfLong"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
      <field
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        static="false"
        synthetic="false"
        transient="false"
        type="boolean"
        type-generic-aware="boolean"
        jni-signature="Z"
        visibility="protected"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="false"
        name="isInit"
        static="false"
        synthetic="false"
        transient="false"
        type="boolean"
        type-generic-aware="boolean"
        jni-signature="Z"
        visibility="protected"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="false"
        name="next"
        static="false"
        synthetic="false"
        transient="false"
        type="long"
        type-generic-aware="long"
        jni-signature="J"
        visibility="protected"
        volatile="false" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="PrimitiveIndexedIterator"
      jni-signature="Lcom/annimon/stream/iterator/PrimitiveIndexedIterator;"
      source-file-name="PrimitiveIndexedIterator.java"
      static="false"
      visibility="public" />
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      final="false"
      name="PrimitiveIndexedIterator.OfDouble"
      jni-signature="Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfDouble;"
      source-file-name="PrimitiveIndexedIterator.java"
      static="true"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="PrimitiveIndexedIterator.OfDouble"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;)V">
        <parameter
          name="start"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
      </constructor>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="PrimitiveIndexedIterator.OfDouble"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getIndex"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="PrimitiveIndexedIterator.OfInt"
      jni-signature="Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfInt;"
      source-file-name="PrimitiveIndexedIterator.java"
      static="true"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="PrimitiveIndexedIterator.OfInt"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILcom/annimon/stream/iterator/PrimitiveIterator$OfInt;)V">
        <parameter
          name="start"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
      </constructor>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="PrimitiveIndexedIterator.OfInt"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getIndex"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="false"
      name="PrimitiveIndexedIterator.OfLong"
      jni-signature="Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfLong;"
      source-file-name="PrimitiveIndexedIterator.java"
      static="true"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="PrimitiveIndexedIterator.OfLong"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(IILcom/annimon/stream/iterator/PrimitiveIterator$OfLong;)V">
        <parameter
          name="start"
          type="int"
          jni-type="I" />
        <parameter
          name="step"
          type="int"
          jni-type="I" />
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
      </constructor>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="PrimitiveIndexedIterator.OfLong"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="getIndex"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="true"
      name="PrimitiveIterator"
      jni-signature="Lcom/annimon/stream/iterator/PrimitiveIterator;"
      source-file-name="PrimitiveIterator.java"
      static="false"
      visibility="public" />
    <class
      abstract="true"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="PrimitiveIterator.OfDouble"
      jni-signature="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      source-file-name="PrimitiveIterator.java"
      static="true"
      visibility="public">
      <implements
        name="java.util.Iterator"
        name-generic-aware="java.util.Iterator&lt;java.lang.Double&gt;"
        jni-type="Ljava/util/Iterator&lt;Ljava/lang/Double;&gt;;" />
      <constructor
        deprecated="not deprecated"
        final="false"
        name="PrimitiveIterator.OfDouble"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="next"
        native="false"
        return="java.lang.Double"
        jni-return="Ljava/lang/Double;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Double;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="next"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="remove"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="true"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="PrimitiveIterator.OfInt"
      jni-signature="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      source-file-name="PrimitiveIterator.java"
      static="true"
      visibility="public">
      <implements
        name="java.util.Iterator"
        name-generic-aware="java.util.Iterator&lt;java.lang.Integer&gt;"
        jni-type="Ljava/util/Iterator&lt;Ljava/lang/Integer;&gt;;" />
      <constructor
        deprecated="not deprecated"
        final="false"
        name="PrimitiveIterator.OfInt"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="next"
        native="false"
        return="java.lang.Integer"
        jni-return="Ljava/lang/Integer;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Integer;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="next"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="remove"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="true"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="PrimitiveIterator.OfLong"
      jni-signature="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      source-file-name="PrimitiveIterator.java"
      static="true"
      visibility="public">
      <implements
        name="java.util.Iterator"
        name-generic-aware="java.util.Iterator&lt;java.lang.Long&gt;"
        jni-type="Ljava/util/Iterator&lt;Ljava/lang/Long;&gt;;" />
      <constructor
        deprecated="not deprecated"
        final="false"
        name="PrimitiveIterator.OfLong"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="next"
        native="false"
        return="java.lang.Long"
        jni-return="Ljava/lang/Long;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Long;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="next"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="true"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="remove"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
  </package>
  <package
    name="com.annimon.stream.operator"
    jni-name="com/annimon/stream/operator">
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      final="false"
      name="DoubleArray"
      jni-signature="Lcom/annimon/stream/operator/DoubleArray;"
      source-file-name="DoubleArray.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleArray"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([D)V">
        <parameter
          name="values"
          type="double[]"
          jni-type="[D" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      final="false"
      name="DoubleConcat"
      jni-signature="Lcom/annimon/stream/operator/DoubleConcat;"
      source-file-name="DoubleConcat.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleConcat"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;)V">
        <parameter
          name="iterator1"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
        <parameter
          name="iterator2"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfDouble"
      final="false"
      name="DoubleDropWhile"
      jni-signature="Lcom/annimon/stream/operator/DoubleDropWhile;"
      source-file-name="DoubleDropWhile.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleDropWhile"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoublePredicate;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      final="false"
      name="DoubleFilter"
      jni-signature="Lcom/annimon/stream/operator/DoubleFilter;"
      source-file-name="DoubleFilter.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleFilter"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoublePredicate;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      final="false"
      name="DoubleFilterIndexed"
      jni-signature="Lcom/annimon/stream/operator/DoubleFilterIndexed;"
      source-file-name="DoubleFilterIndexed.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleFilterIndexed"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfDouble;Lcom/annimon/stream/function/IndexedDoublePredicate;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIndexedIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfDouble;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedDoublePredicate"
          jni-type="Lcom/annimon/stream/function/IndexedDoublePredicate;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      final="false"
      name="DoubleFlatMap"
      jni-signature="Lcom/annimon/stream/operator/DoubleFlatMap;"
      source-file-name="DoubleFlatMap.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleFlatMap"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoubleFunction;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.DoubleFunction&lt;? extends com.annimon.stream.DoubleStream&gt;"
          jni-type="Lcom/annimon/stream/function/DoubleFunction&lt;+Lcom/annimon/stream/DoubleStream;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      final="false"
      name="DoubleGenerate"
      jni-signature="Lcom/annimon/stream/operator/DoubleGenerate;"
      source-file-name="DoubleGenerate.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleGenerate"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/DoubleSupplier;)V">
        <parameter
          name="supplier"
          type="com.annimon.stream.function.DoubleSupplier"
          jni-type="Lcom/annimon/stream/function/DoubleSupplier;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      final="false"
      name="DoubleIterate"
      jni-signature="Lcom/annimon/stream/operator/DoubleIterate;"
      source-file-name="DoubleIterate.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleIterate"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(DLcom/annimon/stream/function/DoubleUnaryOperator;)V">
        <parameter
          name="seed"
          type="double"
          jni-type="D" />
        <parameter
          name="f"
          type="com.annimon.stream.function.DoubleUnaryOperator"
          jni-type="Lcom/annimon/stream/function/DoubleUnaryOperator;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      final="false"
      name="DoubleLimit"
      jni-signature="Lcom/annimon/stream/operator/DoubleLimit;"
      source-file-name="DoubleLimit.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleLimit"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;J)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
        <parameter
          name="maxSize"
          type="long"
          jni-type="J" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      final="false"
      name="DoubleMap"
      jni-signature="Lcom/annimon/stream/operator/DoubleMap;"
      source-file-name="DoubleMap.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleMap"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoubleUnaryOperator;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.DoubleUnaryOperator"
          jni-type="Lcom/annimon/stream/function/DoubleUnaryOperator;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      final="false"
      name="DoubleMapIndexed"
      jni-signature="Lcom/annimon/stream/operator/DoubleMapIndexed;"
      source-file-name="DoubleMapIndexed.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleMapIndexed"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfDouble;Lcom/annimon/stream/function/IndexedDoubleUnaryOperator;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIndexedIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfDouble;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IndexedDoubleUnaryOperator"
          jni-type="Lcom/annimon/stream/function/IndexedDoubleUnaryOperator;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="DoubleMapToInt"
      jni-signature="Lcom/annimon/stream/operator/DoubleMapToInt;"
      source-file-name="DoubleMapToInt.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleMapToInt"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoubleToIntFunction;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.DoubleToIntFunction"
          jni-type="Lcom/annimon/stream/function/DoubleToIntFunction;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="false"
      name="DoubleMapToLong"
      jni-signature="Lcom/annimon/stream/operator/DoubleMapToLong;"
      source-file-name="DoubleMapToLong.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleMapToLong"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoubleToLongFunction;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.DoubleToLongFunction"
          jni-type="Lcom/annimon/stream/function/DoubleToLongFunction;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaIterator;"
      extends="com.annimon.stream.iterator.LsaIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaIterator&lt;R&gt;"
      final="false"
      name="DoubleMapToObj"
      jni-signature="Lcom/annimon/stream/operator/DoubleMapToObj;"
      source-file-name="DoubleMapToObj.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleMapToObj"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoubleFunction;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.DoubleFunction&lt;? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/DoubleFunction&lt;+TR;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      final="false"
      name="DoublePeek"
      jni-signature="Lcom/annimon/stream/operator/DoublePeek;"
      source-file-name="DoublePeek.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoublePeek"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoubleConsumer;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
        <parameter
          name="action"
          type="com.annimon.stream.function.DoubleConsumer"
          jni-type="Lcom/annimon/stream/function/DoubleConsumer;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      final="false"
      name="DoubleSample"
      jni-signature="Lcom/annimon/stream/operator/DoubleSample;"
      source-file-name="DoubleSample.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleSample"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;I)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
        <parameter
          name="stepWidth"
          type="int"
          jni-type="I" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfDouble"
      final="false"
      name="DoubleScan"
      jni-signature="Lcom/annimon/stream/operator/DoubleScan;"
      source-file-name="DoubleScan.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleScan"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoubleBinaryOperator;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.DoubleBinaryOperator"
          jni-type="Lcom/annimon/stream/function/DoubleBinaryOperator;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfDouble"
      final="false"
      name="DoubleScanIdentity"
      jni-signature="Lcom/annimon/stream/operator/DoubleScanIdentity;"
      source-file-name="DoubleScanIdentity.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleScanIdentity"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;DLcom/annimon/stream/function/DoubleBinaryOperator;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
        <parameter
          name="identity"
          type="double"
          jni-type="D" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.DoubleBinaryOperator"
          jni-type="Lcom/annimon/stream/function/DoubleBinaryOperator;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      final="false"
      name="DoubleSkip"
      jni-signature="Lcom/annimon/stream/operator/DoubleSkip;"
      source-file-name="DoubleSkip.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleSkip"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;J)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
        <parameter
          name="n"
          type="long"
          jni-type="J" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfDouble"
      final="false"
      name="DoubleSorted"
      jni-signature="Lcom/annimon/stream/operator/DoubleSorted;"
      source-file-name="DoubleSorted.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleSorted"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfDouble"
      final="false"
      name="DoubleTakeUntil"
      jni-signature="Lcom/annimon/stream/operator/DoubleTakeUntil;"
      source-file-name="DoubleTakeUntil.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleTakeUntil"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoublePredicate;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
        <parameter
          name="stopPredicate"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfDouble"
      final="false"
      name="DoubleTakeWhile"
      jni-signature="Lcom/annimon/stream/operator/DoubleTakeWhile;"
      source-file-name="DoubleTakeWhile.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="DoubleTakeWhile"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoublePredicate;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.DoublePredicate"
          jni-type="Lcom/annimon/stream/function/DoublePredicate;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="IntArray"
      jni-signature="Lcom/annimon/stream/operator/IntArray;"
      source-file-name="IntArray.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntArray"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([I)V">
        <parameter
          name="values"
          type="int[]"
          jni-type="[I" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="IntCodePoints"
      jni-signature="Lcom/annimon/stream/operator/IntCodePoints;"
      source-file-name="IntCodePoints.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntCodePoints"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/CharSequence;)V">
        <parameter
          name="charSequence"
          type="java.lang.CharSequence"
          jni-type="Ljava/lang/CharSequence;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="IntConcat"
      jni-signature="Lcom/annimon/stream/operator/IntConcat;"
      source-file-name="IntConcat.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntConcat"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;)V">
        <parameter
          name="iterator1"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
        <parameter
          name="iterator2"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfInt"
      final="false"
      name="IntDropWhile"
      jni-signature="Lcom/annimon/stream/operator/IntDropWhile;"
      source-file-name="IntDropWhile.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntDropWhile"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntPredicate;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="IntFilter"
      jni-signature="Lcom/annimon/stream/operator/IntFilter;"
      source-file-name="IntFilter.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntFilter"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntPredicate;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="IntFilterIndexed"
      jni-signature="Lcom/annimon/stream/operator/IntFilterIndexed;"
      source-file-name="IntFilterIndexed.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntFilterIndexed"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfInt;Lcom/annimon/stream/function/IndexedIntPredicate;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIndexedIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfInt;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedIntPredicate"
          jni-type="Lcom/annimon/stream/function/IndexedIntPredicate;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="IntFlatMap"
      jni-signature="Lcom/annimon/stream/operator/IntFlatMap;"
      source-file-name="IntFlatMap.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntFlatMap"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntFunction;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IntFunction&lt;? extends com.annimon.stream.IntStream&gt;"
          jni-type="Lcom/annimon/stream/function/IntFunction&lt;+Lcom/annimon/stream/IntStream;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="IntGenerate"
      jni-signature="Lcom/annimon/stream/operator/IntGenerate;"
      source-file-name="IntGenerate.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntGenerate"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/IntSupplier;)V">
        <parameter
          name="supplier"
          type="com.annimon.stream.function.IntSupplier"
          jni-type="Lcom/annimon/stream/function/IntSupplier;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="IntIterate"
      jni-signature="Lcom/annimon/stream/operator/IntIterate;"
      source-file-name="IntIterate.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntIterate"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(ILcom/annimon/stream/function/IntUnaryOperator;)V">
        <parameter
          name="seed"
          type="int"
          jni-type="I" />
        <parameter
          name="f"
          type="com.annimon.stream.function.IntUnaryOperator"
          jni-type="Lcom/annimon/stream/function/IntUnaryOperator;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="IntLimit"
      jni-signature="Lcom/annimon/stream/operator/IntLimit;"
      source-file-name="IntLimit.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntLimit"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;J)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
        <parameter
          name="maxSize"
          type="long"
          jni-type="J" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="IntMap"
      jni-signature="Lcom/annimon/stream/operator/IntMap;"
      source-file-name="IntMap.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntMap"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntUnaryOperator;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IntUnaryOperator"
          jni-type="Lcom/annimon/stream/function/IntUnaryOperator;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="IntMapIndexed"
      jni-signature="Lcom/annimon/stream/operator/IntMapIndexed;"
      source-file-name="IntMapIndexed.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntMapIndexed"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfInt;Lcom/annimon/stream/function/IntBinaryOperator;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIndexedIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfInt;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IntBinaryOperator"
          jni-type="Lcom/annimon/stream/function/IntBinaryOperator;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      final="false"
      name="IntMapToDouble"
      jni-signature="Lcom/annimon/stream/operator/IntMapToDouble;"
      source-file-name="IntMapToDouble.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntMapToDouble"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntToDoubleFunction;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IntToDoubleFunction"
          jni-type="Lcom/annimon/stream/function/IntToDoubleFunction;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="false"
      name="IntMapToLong"
      jni-signature="Lcom/annimon/stream/operator/IntMapToLong;"
      source-file-name="IntMapToLong.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntMapToLong"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntToLongFunction;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IntToLongFunction"
          jni-type="Lcom/annimon/stream/function/IntToLongFunction;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaIterator;"
      extends="com.annimon.stream.iterator.LsaIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaIterator&lt;R&gt;"
      final="false"
      name="IntMapToObj"
      jni-signature="Lcom/annimon/stream/operator/IntMapToObj;"
      source-file-name="IntMapToObj.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntMapToObj"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntFunction;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IntFunction&lt;? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/IntFunction&lt;+TR;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="IntPeek"
      jni-signature="Lcom/annimon/stream/operator/IntPeek;"
      source-file-name="IntPeek.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntPeek"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntConsumer;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
        <parameter
          name="action"
          type="com.annimon.stream.function.IntConsumer"
          jni-type="Lcom/annimon/stream/function/IntConsumer;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="IntRangeClosed"
      jni-signature="Lcom/annimon/stream/operator/IntRangeClosed;"
      source-file-name="IntRangeClosed.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntRangeClosed"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(II)V">
        <parameter
          name="startInclusive"
          type="int"
          jni-type="I" />
        <parameter
          name="endInclusive"
          type="int"
          jni-type="I" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="IntSample"
      jni-signature="Lcom/annimon/stream/operator/IntSample;"
      source-file-name="IntSample.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntSample"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;I)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
        <parameter
          name="stepWidth"
          type="int"
          jni-type="I" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfInt"
      final="false"
      name="IntScan"
      jni-signature="Lcom/annimon/stream/operator/IntScan;"
      source-file-name="IntScan.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntScan"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntBinaryOperator;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.IntBinaryOperator"
          jni-type="Lcom/annimon/stream/function/IntBinaryOperator;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfInt"
      final="false"
      name="IntScanIdentity"
      jni-signature="Lcom/annimon/stream/operator/IntScanIdentity;"
      source-file-name="IntScanIdentity.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntScanIdentity"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;ILcom/annimon/stream/function/IntBinaryOperator;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
        <parameter
          name="identity"
          type="int"
          jni-type="I" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.IntBinaryOperator"
          jni-type="Lcom/annimon/stream/function/IntBinaryOperator;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="IntSkip"
      jni-signature="Lcom/annimon/stream/operator/IntSkip;"
      source-file-name="IntSkip.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntSkip"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;J)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
        <parameter
          name="n"
          type="long"
          jni-type="J" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfInt"
      final="false"
      name="IntSorted"
      jni-signature="Lcom/annimon/stream/operator/IntSorted;"
      source-file-name="IntSorted.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntSorted"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfInt"
      final="false"
      name="IntTakeUntil"
      jni-signature="Lcom/annimon/stream/operator/IntTakeUntil;"
      source-file-name="IntTakeUntil.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntTakeUntil"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntPredicate;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
        <parameter
          name="stopPredicate"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfInt"
      final="false"
      name="IntTakeWhile"
      jni-signature="Lcom/annimon/stream/operator/IntTakeWhile;"
      source-file-name="IntTakeWhile.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="IntTakeWhile"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntPredicate;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IntPredicate"
          jni-type="Lcom/annimon/stream/function/IntPredicate;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="false"
      name="LongArray"
      jni-signature="Lcom/annimon/stream/operator/LongArray;"
      source-file-name="LongArray.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongArray"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([J)V">
        <parameter
          name="values"
          type="long[]"
          jni-type="[J" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="false"
      name="LongConcat"
      jni-signature="Lcom/annimon/stream/operator/LongConcat;"
      source-file-name="LongConcat.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongConcat"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;)V">
        <parameter
          name="iterator1"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
        <parameter
          name="iterator2"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfLong"
      final="false"
      name="LongDropWhile"
      jni-signature="Lcom/annimon/stream/operator/LongDropWhile;"
      source-file-name="LongDropWhile.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongDropWhile"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongPredicate;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="false"
      name="LongFilter"
      jni-signature="Lcom/annimon/stream/operator/LongFilter;"
      source-file-name="LongFilter.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongFilter"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongPredicate;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="false"
      name="LongFilterIndexed"
      jni-signature="Lcom/annimon/stream/operator/LongFilterIndexed;"
      source-file-name="LongFilterIndexed.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongFilterIndexed"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfLong;Lcom/annimon/stream/function/IndexedLongPredicate;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIndexedIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfLong;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedLongPredicate"
          jni-type="Lcom/annimon/stream/function/IndexedLongPredicate;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="false"
      name="LongFlatMap"
      jni-signature="Lcom/annimon/stream/operator/LongFlatMap;"
      source-file-name="LongFlatMap.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongFlatMap"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongFunction;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.LongFunction&lt;? extends com.annimon.stream.LongStream&gt;"
          jni-type="Lcom/annimon/stream/function/LongFunction&lt;+Lcom/annimon/stream/LongStream;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="false"
      name="LongGenerate"
      jni-signature="Lcom/annimon/stream/operator/LongGenerate;"
      source-file-name="LongGenerate.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongGenerate"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/LongSupplier;)V">
        <parameter
          name="supplier"
          type="com.annimon.stream.function.LongSupplier"
          jni-type="Lcom/annimon/stream/function/LongSupplier;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="false"
      name="LongIterate"
      jni-signature="Lcom/annimon/stream/operator/LongIterate;"
      source-file-name="LongIterate.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongIterate"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(JLcom/annimon/stream/function/LongUnaryOperator;)V">
        <parameter
          name="seed"
          type="long"
          jni-type="J" />
        <parameter
          name="f"
          type="com.annimon.stream.function.LongUnaryOperator"
          jni-type="Lcom/annimon/stream/function/LongUnaryOperator;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="false"
      name="LongLimit"
      jni-signature="Lcom/annimon/stream/operator/LongLimit;"
      source-file-name="LongLimit.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongLimit"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;J)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
        <parameter
          name="maxSize"
          type="long"
          jni-type="J" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="false"
      name="LongMap"
      jni-signature="Lcom/annimon/stream/operator/LongMap;"
      source-file-name="LongMap.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongMap"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongUnaryOperator;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.LongUnaryOperator"
          jni-type="Lcom/annimon/stream/function/LongUnaryOperator;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="false"
      name="LongMapIndexed"
      jni-signature="Lcom/annimon/stream/operator/LongMapIndexed;"
      source-file-name="LongMapIndexed.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongMapIndexed"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfLong;Lcom/annimon/stream/function/IndexedLongUnaryOperator;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIndexedIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfLong;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IndexedLongUnaryOperator"
          jni-type="Lcom/annimon/stream/function/IndexedLongUnaryOperator;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      final="false"
      name="LongMapToDouble"
      jni-signature="Lcom/annimon/stream/operator/LongMapToDouble;"
      source-file-name="LongMapToDouble.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongMapToDouble"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongToDoubleFunction;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.LongToDoubleFunction"
          jni-type="Lcom/annimon/stream/function/LongToDoubleFunction;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="LongMapToInt"
      jni-signature="Lcom/annimon/stream/operator/LongMapToInt;"
      source-file-name="LongMapToInt.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongMapToInt"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongToIntFunction;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.LongToIntFunction"
          jni-type="Lcom/annimon/stream/function/LongToIntFunction;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaIterator;"
      extends="com.annimon.stream.iterator.LsaIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaIterator&lt;R&gt;"
      final="false"
      name="LongMapToObj"
      jni-signature="Lcom/annimon/stream/operator/LongMapToObj;"
      source-file-name="LongMapToObj.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongMapToObj"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongFunction;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.LongFunction&lt;? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/LongFunction&lt;+TR;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="false"
      name="LongPeek"
      jni-signature="Lcom/annimon/stream/operator/LongPeek;"
      source-file-name="LongPeek.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongPeek"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongConsumer;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
        <parameter
          name="action"
          type="com.annimon.stream.function.LongConsumer"
          jni-type="Lcom/annimon/stream/function/LongConsumer;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="false"
      name="LongRangeClosed"
      jni-signature="Lcom/annimon/stream/operator/LongRangeClosed;"
      source-file-name="LongRangeClosed.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongRangeClosed"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(JJ)V">
        <parameter
          name="startInclusive"
          type="long"
          jni-type="J" />
        <parameter
          name="endInclusive"
          type="long"
          jni-type="J" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="false"
      name="LongSample"
      jni-signature="Lcom/annimon/stream/operator/LongSample;"
      source-file-name="LongSample.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongSample"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;I)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
        <parameter
          name="stepWidth"
          type="int"
          jni-type="I" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfLong"
      final="false"
      name="LongScan"
      jni-signature="Lcom/annimon/stream/operator/LongScan;"
      source-file-name="LongScan.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongScan"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongBinaryOperator;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.LongBinaryOperator"
          jni-type="Lcom/annimon/stream/function/LongBinaryOperator;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfLong"
      final="false"
      name="LongScanIdentity"
      jni-signature="Lcom/annimon/stream/operator/LongScanIdentity;"
      source-file-name="LongScanIdentity.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongScanIdentity"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;JLcom/annimon/stream/function/LongBinaryOperator;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
        <parameter
          name="identity"
          type="long"
          jni-type="J" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.LongBinaryOperator"
          jni-type="Lcom/annimon/stream/function/LongBinaryOperator;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="false"
      name="LongSkip"
      jni-signature="Lcom/annimon/stream/operator/LongSkip;"
      source-file-name="LongSkip.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongSkip"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;J)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
        <parameter
          name="n"
          type="long"
          jni-type="J" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfLong"
      final="false"
      name="LongSorted"
      jni-signature="Lcom/annimon/stream/operator/LongSorted;"
      source-file-name="LongSorted.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongSorted"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfLong"
      final="false"
      name="LongTakeUntil"
      jni-signature="Lcom/annimon/stream/operator/LongTakeUntil;"
      source-file-name="LongTakeUntil.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongTakeUntil"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongPredicate;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
        <parameter
          name="stopPredicate"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfLong"
      final="false"
      name="LongTakeWhile"
      jni-signature="Lcom/annimon/stream/operator/LongTakeWhile;"
      source-file-name="LongTakeWhile.java"
      static="false"
      visibility="public">
      <constructor
        deprecated="not deprecated"
        final="false"
        name="LongTakeWhile"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongPredicate;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
          jni-type="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.LongPredicate"
          jni-type="Lcom/annimon/stream/function/LongPredicate;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaIterator;"
      extends="com.annimon.stream.iterator.LsaIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaIterator&lt;T&gt;"
      final="false"
      name="ObjArray"
      jni-signature="Lcom/annimon/stream/operator/ObjArray;"
      source-file-name="ObjArray.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjArray"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="([Ljava/lang/Object;)V">
        <parameter
          name="elements"
          type="T[]"
          jni-type="[TT;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaIterator;"
      extends="com.annimon.stream.iterator.LsaIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaIterator&lt;java.util.List&lt;T&gt;&gt;"
      final="false"
      name="ObjChunkBy"
      jni-signature="Lcom/annimon/stream/operator/ObjChunkBy;"
      source-file-name="ObjChunkBy.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="K"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjChunkBy"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Lcom/annimon/stream/function/Function;)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="classifier"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends K&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TK;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="java.util.List&lt;T&gt;"
        jni-return="Ljava/util/List&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/util/List;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaExtIterator;"
      extends="com.annimon.stream.iterator.LsaExtIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaExtIterator&lt;T&gt;"
      final="false"
      name="ObjConcat"
      jni-signature="Lcom/annimon/stream/operator/ObjConcat;"
      source-file-name="ObjConcat.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjConcat"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Ljava/util/Iterator;)V">
        <parameter
          name="iterator1"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="iterator2"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaExtIterator;"
      extends="com.annimon.stream.iterator.LsaExtIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaExtIterator&lt;T&gt;"
      final="false"
      name="ObjDistinct"
      jni-signature="Lcom/annimon/stream/operator/ObjDistinct;"
      source-file-name="ObjDistinct.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjDistinct"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaExtIterator;"
      extends="com.annimon.stream.iterator.LsaExtIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaExtIterator&lt;T&gt;"
      final="false"
      name="ObjDistinctBy"
      jni-signature="Lcom/annimon/stream/operator/ObjDistinctBy;"
      source-file-name="ObjDistinctBy.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="K"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjDistinctBy"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Lcom/annimon/stream/function/Function;)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="classifier"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends K&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TK;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaExtIterator;"
      extends="com.annimon.stream.iterator.LsaExtIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaExtIterator&lt;T&gt;"
      final="false"
      name="ObjDropWhile"
      jni-signature="Lcom/annimon/stream/operator/ObjDropWhile;"
      source-file-name="ObjDropWhile.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjDropWhile"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Lcom/annimon/stream/function/Predicate;)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaExtIterator;"
      extends="com.annimon.stream.iterator.LsaExtIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaExtIterator&lt;T&gt;"
      final="false"
      name="ObjDropWhileIndexed"
      jni-signature="Lcom/annimon/stream/operator/ObjDropWhileIndexed;"
      source-file-name="ObjDropWhileIndexed.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjDropWhileIndexed"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/IndexedIterator;Lcom/annimon/stream/function/IndexedPredicate;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.IndexedIterator&lt;? extends T&gt;"
          jni-type="Lcom/annimon/stream/iterator/IndexedIterator&lt;+TT;&gt;;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedPredicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedPredicate&lt;-TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="ObjFilter"
      jni-signature="Lcom/annimon/stream/operator/ObjFilter;"
      source-file-name="ObjFilter.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <implements
        name="java.util.Iterator"
        name-generic-aware="java.util.Iterator&lt;T&gt;"
        jni-type="Ljava/util/Iterator&lt;TT;&gt;;" />
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjFilter"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Lcom/annimon/stream/function/Predicate;)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="next"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="remove"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="ObjFilterIndexed"
      jni-signature="Lcom/annimon/stream/operator/ObjFilterIndexed;"
      source-file-name="ObjFilterIndexed.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <implements
        name="java.util.Iterator"
        name-generic-aware="java.util.Iterator&lt;T&gt;"
        jni-type="Ljava/util/Iterator&lt;TT;&gt;;" />
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjFilterIndexed"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/IndexedIterator;Lcom/annimon/stream/function/IndexedPredicate;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.IndexedIterator&lt;? extends T&gt;"
          jni-type="Lcom/annimon/stream/iterator/IndexedIterator&lt;+TT;&gt;;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedPredicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedPredicate&lt;-TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="next"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="remove"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaExtIterator;"
      extends="com.annimon.stream.iterator.LsaExtIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaExtIterator&lt;R&gt;"
      final="false"
      name="ObjFlatMap"
      jni-signature="Lcom/annimon/stream/operator/ObjFlatMap;"
      source-file-name="ObjFlatMap.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjFlatMap"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Lcom/annimon/stream/function/Function;)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends com.annimon.stream.Stream&lt;? extends R&gt;&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+Lcom/annimon/stream/Stream&lt;+TR;&gt;;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfDouble"
      final="false"
      name="ObjFlatMapToDouble"
      jni-signature="Lcom/annimon/stream/operator/ObjFlatMapToDouble;"
      source-file-name="ObjFlatMapToDouble.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjFlatMapToDouble"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Lcom/annimon/stream/function/Function;)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends com.annimon.stream.DoubleStream&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+Lcom/annimon/stream/DoubleStream;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfInt"
      final="false"
      name="ObjFlatMapToInt"
      jni-signature="Lcom/annimon/stream/operator/ObjFlatMapToInt;"
      source-file-name="ObjFlatMapToInt.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjFlatMapToInt"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Lcom/annimon/stream/function/Function;)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends com.annimon.stream.IntStream&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+Lcom/annimon/stream/IntStream;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveExtIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveExtIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveExtIterator.OfLong"
      final="false"
      name="ObjFlatMapToLong"
      jni-signature="Lcom/annimon/stream/operator/ObjFlatMapToLong;"
      source-file-name="ObjFlatMapToLong.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjFlatMapToLong"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Lcom/annimon/stream/function/Function;)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends com.annimon.stream.LongStream&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+Lcom/annimon/stream/LongStream;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaIterator;"
      extends="com.annimon.stream.iterator.LsaIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaIterator&lt;T&gt;"
      final="false"
      name="ObjGenerate"
      jni-signature="Lcom/annimon/stream/operator/ObjGenerate;"
      source-file-name="ObjGenerate.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjGenerate"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/function/Supplier;)V">
        <parameter
          name="supplier"
          type="com.annimon.stream.function.Supplier&lt;T&gt;"
          jni-type="Lcom/annimon/stream/function/Supplier&lt;TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaIterator;"
      extends="com.annimon.stream.iterator.LsaIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaIterator&lt;T&gt;"
      final="false"
      name="ObjIterate"
      jni-signature="Lcom/annimon/stream/operator/ObjIterate;"
      source-file-name="ObjIterate.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjIterate"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/Object;Lcom/annimon/stream/function/UnaryOperator;)V">
        <parameter
          name="seed"
          type="T"
          jni-type="TT;" />
        <parameter
          name="op"
          type="com.annimon.stream.function.UnaryOperator&lt;T&gt;"
          jni-type="Lcom/annimon/stream/function/UnaryOperator&lt;TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaIterator;"
      extends="com.annimon.stream.iterator.LsaIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaIterator&lt;T&gt;"
      final="false"
      name="ObjLimit"
      jni-signature="Lcom/annimon/stream/operator/ObjLimit;"
      source-file-name="ObjLimit.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjLimit"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;J)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="maxSize"
          type="long"
          jni-type="J" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaIterator;"
      extends="com.annimon.stream.iterator.LsaIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaIterator&lt;R&gt;"
      final="false"
      name="ObjMap"
      jni-signature="Lcom/annimon/stream/operator/ObjMap;"
      source-file-name="ObjMap.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjMap"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Lcom/annimon/stream/function/Function;)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.Function&lt;? super T, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/Function&lt;-TT;+TR;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaIterator;"
      extends="com.annimon.stream.iterator.LsaIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaIterator&lt;R&gt;"
      final="false"
      name="ObjMapIndexed"
      jni-signature="Lcom/annimon/stream/operator/ObjMapIndexed;"
      source-file-name="ObjMapIndexed.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjMapIndexed"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/IndexedIterator;Lcom/annimon/stream/function/IndexedFunction;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.IndexedIterator&lt;? extends T&gt;"
          jni-type="Lcom/annimon/stream/iterator/IndexedIterator&lt;+TT;&gt;;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.IndexedFunction&lt;? super T, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedFunction&lt;-TT;+TR;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfDouble"
      final="false"
      name="ObjMapToDouble"
      jni-signature="Lcom/annimon/stream/operator/ObjMapToDouble;"
      source-file-name="ObjMapToDouble.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjMapToDouble"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Lcom/annimon/stream/function/ToDoubleFunction;)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.ToDoubleFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToDoubleFunction&lt;-TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextDouble"
        native="false"
        return="double"
        jni-return="D"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()D" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfInt"
      final="false"
      name="ObjMapToInt"
      jni-signature="Lcom/annimon/stream/operator/ObjMapToInt;"
      source-file-name="ObjMapToInt.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjMapToInt"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Lcom/annimon/stream/function/ToIntFunction;)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.ToIntFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToIntFunction&lt;-TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextInt"
        native="false"
        return="int"
        jni-return="I"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()I" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;"
      extends="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      extends-generic-aware="com.annimon.stream.iterator.PrimitiveIterator.OfLong"
      final="false"
      name="ObjMapToLong"
      jni-signature="Lcom/annimon/stream/operator/ObjMapToLong;"
      source-file-name="ObjMapToLong.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjMapToLong"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Lcom/annimon/stream/function/ToLongFunction;)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="mapper"
          type="com.annimon.stream.function.ToLongFunction&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/ToLongFunction&lt;-TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextLong"
        native="false"
        return="long"
        jni-return="J"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()J" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaIterator;"
      extends="com.annimon.stream.iterator.LsaIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaIterator&lt;T&gt;"
      final="false"
      name="ObjMerge"
      jni-signature="Lcom/annimon/stream/operator/ObjMerge;"
      source-file-name="ObjMerge.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjMerge"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Ljava/util/Iterator;Lcom/annimon/stream/function/BiFunction;)V">
        <parameter
          name="iterator1"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="iterator2"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="selector"
          type="com.annimon.stream.function.BiFunction&lt;? super T, ? super T, com.annimon.stream.operator.ObjMerge.MergeResult&gt;"
          jni-type="Lcom/annimon/stream/function/BiFunction&lt;-TT;-TT;Lcom/annimon/stream/operator/ObjMerge$MergeResult;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      enclosing-method-jni-type="Lcom/annimon/stream/operator/ObjMerge;"
      jni-extends="Ljava/lang/Object;"
      extends="java.lang.Object"
      extends-generic-aware="java.lang.Object"
      final="false"
      name="ObjMerge.1"
      jni-signature="Lcom/annimon/stream/operator/ObjMerge$1;"
      source-file-name="ObjMerge.java"
      static="true"
      visibility="" />
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Ljava/lang/Enum;"
      extends="java.lang.Enum"
      extends-generic-aware="java.lang.Enum&lt;com.annimon.stream.operator.ObjMerge.MergeResult&gt;"
      final="true"
      name="ObjMerge.MergeResult"
      jni-signature="Lcom/annimon/stream/operator/ObjMerge$MergeResult;"
      source-file-name="ObjMerge.java"
      static="true"
      visibility="public">
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="valueOf"
        native="false"
        return="com.annimon.stream.operator.ObjMerge.MergeResult"
        jni-return="Lcom/annimon/stream/operator/ObjMerge$MergeResult;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/lang/String;)Lcom/annimon/stream/operator/ObjMerge$MergeResult;">
        <parameter
          name="name"
          type="java.lang.String"
          jni-type="Ljava/lang/String;" />
      </method>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="values"
        native="false"
        return="com.annimon.stream.operator.ObjMerge.MergeResult[]"
        jni-return="[Lcom/annimon/stream/operator/ObjMerge$MergeResult;"
        static="true"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()[Lcom/annimon/stream/operator/ObjMerge$MergeResult;" />
      <field
        deprecated="not deprecated"
        final="true"
        name="TAKE_FIRST"
        static="true"
        synthetic="false"
        transient="false"
        type="com.annimon.stream.operator.ObjMerge.MergeResult"
        type-generic-aware="com.annimon.stream.operator.ObjMerge.MergeResult"
        jni-signature="Lcom/annimon/stream/operator/ObjMerge$MergeResult;"
        visibility="public"
        volatile="false" />
      <field
        deprecated="not deprecated"
        final="true"
        name="TAKE_SECOND"
        static="true"
        synthetic="false"
        transient="false"
        type="com.annimon.stream.operator.ObjMerge.MergeResult"
        type-generic-aware="com.annimon.stream.operator.ObjMerge.MergeResult"
        jni-signature="Lcom/annimon/stream/operator/ObjMerge$MergeResult;"
        visibility="public"
        volatile="false" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaIterator;"
      extends="com.annimon.stream.iterator.LsaIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaIterator&lt;T&gt;"
      final="false"
      name="ObjPeek"
      jni-signature="Lcom/annimon/stream/operator/ObjPeek;"
      source-file-name="ObjPeek.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjPeek"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Lcom/annimon/stream/function/Consumer;)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="action"
          type="com.annimon.stream.function.Consumer&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Consumer&lt;-TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaExtIterator;"
      extends="com.annimon.stream.iterator.LsaExtIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaExtIterator&lt;T&gt;"
      final="false"
      name="ObjScan"
      jni-signature="Lcom/annimon/stream/operator/ObjScan;"
      source-file-name="ObjScan.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjScan"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Lcom/annimon/stream/function/BiFunction;)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.BiFunction&lt;T, T, T&gt;"
          jni-type="Lcom/annimon/stream/function/BiFunction&lt;TT;TT;TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaExtIterator;"
      extends="com.annimon.stream.iterator.LsaExtIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaExtIterator&lt;R&gt;"
      final="false"
      name="ObjScanIdentity"
      jni-signature="Lcom/annimon/stream/operator/ObjScanIdentity;"
      source-file-name="ObjScanIdentity.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjScanIdentity"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Ljava/lang/Object;Lcom/annimon/stream/function/BiFunction;)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="identity"
          type="R"
          jni-type="TR;" />
        <parameter
          name="accumulator"
          type="com.annimon.stream.function.BiFunction&lt;? super R, ? super T, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/BiFunction&lt;-TR;-TT;+TR;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaIterator;"
      extends="com.annimon.stream.iterator.LsaIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaIterator&lt;T&gt;"
      final="false"
      name="ObjSkip"
      jni-signature="Lcom/annimon/stream/operator/ObjSkip;"
      source-file-name="ObjSkip.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjSkip"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;J)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="n"
          type="long"
          jni-type="J" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="T"
        jni-return="TT;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaIterator;"
      extends="com.annimon.stream.iterator.LsaIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaIterator&lt;java.util.List&lt;T&gt;&gt;"
      final="false"
      name="ObjSlidingWindow"
      jni-signature="Lcom/annimon/stream/operator/ObjSlidingWindow;"
      source-file-name="ObjSlidingWindow.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjSlidingWindow"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;II)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="windowSize"
          type="int"
          jni-type="I" />
        <parameter
          name="stepWidth"
          type="int"
          jni-type="I" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="java.lang.Object"
        jni-return="Ljava/lang/Object;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="true"
        synthetic="true"
        jni-signature="()Ljava/lang/Object;" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="java.util.List&lt;T&gt;"
        jni-return="Ljava/util/List&lt;TT;&gt;;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/util/List;" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaExtIterator;"
      extends="com.annimon.stream.iterator.LsaExtIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaExtIterator&lt;T&gt;"
      final="false"
      name="ObjSorted"
      jni-signature="Lcom/annimon/stream/operator/ObjSorted;"
      source-file-name="ObjSorted.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjSorted"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Ljava/util/Comparator;)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="comparator"
          type="java.util.Comparator&lt;? super T&gt;"
          jni-type="Ljava/util/Comparator&lt;-TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaExtIterator;"
      extends="com.annimon.stream.iterator.LsaExtIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaExtIterator&lt;T&gt;"
      final="false"
      name="ObjTakeUntil"
      jni-signature="Lcom/annimon/stream/operator/ObjTakeUntil;"
      source-file-name="ObjTakeUntil.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjTakeUntil"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Lcom/annimon/stream/function/Predicate;)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaExtIterator;"
      extends="com.annimon.stream.iterator.LsaExtIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaExtIterator&lt;T&gt;"
      final="false"
      name="ObjTakeUntilIndexed"
      jni-signature="Lcom/annimon/stream/operator/ObjTakeUntilIndexed;"
      source-file-name="ObjTakeUntilIndexed.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjTakeUntilIndexed"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/IndexedIterator;Lcom/annimon/stream/function/IndexedPredicate;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.IndexedIterator&lt;? extends T&gt;"
          jni-type="Lcom/annimon/stream/iterator/IndexedIterator&lt;+TT;&gt;;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedPredicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedPredicate&lt;-TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaExtIterator;"
      extends="com.annimon.stream.iterator.LsaExtIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaExtIterator&lt;T&gt;"
      final="false"
      name="ObjTakeWhile"
      jni-signature="Lcom/annimon/stream/operator/ObjTakeWhile;"
      source-file-name="ObjTakeWhile.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjTakeWhile"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Lcom/annimon/stream/function/Predicate;)V">
        <parameter
          name="iterator"
          type="java.util.Iterator&lt;? extends T&gt;"
          jni-type="Ljava/util/Iterator&lt;+TT;&gt;;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.Predicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/Predicate&lt;-TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaExtIterator;"
      extends="com.annimon.stream.iterator.LsaExtIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaExtIterator&lt;T&gt;"
      final="false"
      name="ObjTakeWhileIndexed"
      jni-signature="Lcom/annimon/stream/operator/ObjTakeWhileIndexed;"
      source-file-name="ObjTakeWhileIndexed.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="T"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjTakeWhileIndexed"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Lcom/annimon/stream/iterator/IndexedIterator;Lcom/annimon/stream/function/IndexedPredicate;)V">
        <parameter
          name="iterator"
          type="com.annimon.stream.iterator.IndexedIterator&lt;? extends T&gt;"
          jni-type="Lcom/annimon/stream/iterator/IndexedIterator&lt;+TT;&gt;;" />
        <parameter
          name="predicate"
          type="com.annimon.stream.function.IndexedPredicate&lt;? super T&gt;"
          jni-type="Lcom/annimon/stream/function/IndexedPredicate&lt;-TT;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="void"
        jni-return="V"
        static="false"
        synchronized="false"
        visibility="protected"
        bridge="false"
        synthetic="false"
        jni-signature="()V" />
    </class>
    <class
      abstract="false"
      deprecated="not deprecated"
      jni-extends="Lcom/annimon/stream/iterator/LsaIterator;"
      extends="com.annimon.stream.iterator.LsaIterator"
      extends-generic-aware="com.annimon.stream.iterator.LsaIterator&lt;R&gt;"
      final="false"
      name="ObjZip"
      jni-signature="Lcom/annimon/stream/operator/ObjZip;"
      source-file-name="ObjZip.java"
      static="false"
      visibility="public">
      <typeParameters>
        <typeParameter
          name="F"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="S"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
        <typeParameter
          name="R"
          jni-classBound="Ljava/lang/Object;"
          classBound="java.lang.Object"
          interfaceBounds=""
          jni-interfaceBounds="" />
      </typeParameters>
      <constructor
        deprecated="not deprecated"
        final="false"
        name="ObjZip"
        static="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="(Ljava/util/Iterator;Ljava/util/Iterator;Lcom/annimon/stream/function/BiFunction;)V">
        <parameter
          name="iterator1"
          type="java.util.Iterator&lt;? extends F&gt;"
          jni-type="Ljava/util/Iterator&lt;+TF;&gt;;" />
        <parameter
          name="iterator2"
          type="java.util.Iterator&lt;? extends S&gt;"
          jni-type="Ljava/util/Iterator&lt;+TS;&gt;;" />
        <parameter
          name="combiner"
          type="com.annimon.stream.function.BiFunction&lt;? super F, ? super S, ? extends R&gt;"
          jni-type="Lcom/annimon/stream/function/BiFunction&lt;-TF;-TS;+TR;&gt;;" />
      </constructor>
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="hasNext"
        native="false"
        return="boolean"
        jni-return="Z"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Z" />
      <method
        abstract="false"
        deprecated="not deprecated"
        final="false"
        name="nextIteration"
        native="false"
        return="R"
        jni-return="TR;"
        static="false"
        synchronized="false"
        visibility="public"
        bridge="false"
        synthetic="false"
        jni-signature="()Ljava/lang/Object;" />
    </class>
  </package>
</api>
