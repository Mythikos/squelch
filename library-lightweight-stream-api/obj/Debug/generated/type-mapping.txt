com/annimon/stream/Collector = Com.Annimon.Stream.ICollector
  accumulator()Lcom/annimon/stream/function/BiConsumer; = Accumulator()
  finisher()Lcom/annimon/stream/function/Function; = Finisher()
  supplier()Lcom/annimon/stream/function/Supplier; = Supplier()
com/annimon/stream/Collectors = Com.Annimon.Stream.Collectors
  averaging(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Collector; = Averaging(Com.Annimon.Stream.Function.IFunction)
  averagingDouble(Lcom/annimon/stream/function/ToDoubleFunction;)Lcom/annimon/stream/Collector; = AveragingDouble(Com.Annimon.Stream.Function.IToDoubleFunction)
  averagingInt(Lcom/annimon/stream/function/ToIntFunction;)Lcom/annimon/stream/Collector; = AveragingInt(Com.Annimon.Stream.Function.IToIntFunction)
  averagingLong(Lcom/annimon/stream/function/ToLongFunction;)Lcom/annimon/stream/Collector; = AveragingLong(Com.Annimon.Stream.Function.IToLongFunction)
  collectingAndThen(Lcom/annimon/stream/Collector;Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Collector; = CollectingAndThen(Com.Annimon.Stream.ICollector, Com.Annimon.Stream.Function.IFunction)
  counting()Lcom/annimon/stream/Collector; = Counting()
  filtering(Lcom/annimon/stream/function/Predicate;Lcom/annimon/stream/Collector;)Lcom/annimon/stream/Collector; = Filtering(Com.Annimon.Stream.Function.IPredicate, Com.Annimon.Stream.ICollector)
  flatMapping(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/Collector;)Lcom/annimon/stream/Collector; = FlatMapping(Com.Annimon.Stream.Function.IFunction, Com.Annimon.Stream.ICollector)
  groupingBy(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Collector; = GroupingBy(Com.Annimon.Stream.Function.IFunction)
  groupingBy(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/Collector;)Lcom/annimon/stream/Collector; = GroupingBy(Com.Annimon.Stream.Function.IFunction, Com.Annimon.Stream.ICollector)
  groupingBy(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Supplier;Lcom/annimon/stream/Collector;)Lcom/annimon/stream/Collector; = GroupingBy(Com.Annimon.Stream.Function.IFunction, Com.Annimon.Stream.Function.ISupplier, Com.Annimon.Stream.ICollector)
  joining()Lcom/annimon/stream/Collector; = Joining()
  joining(Ljava/lang/CharSequence;)Lcom/annimon/stream/Collector; = Joining(Java.Lang.ICharSequence)
  joining(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/annimon/stream/Collector; = Joining(Java.Lang.ICharSequence, Java.Lang.ICharSequence, Java.Lang.ICharSequence)
  joining(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/String;)Lcom/annimon/stream/Collector; = Joining(Java.Lang.ICharSequence, Java.Lang.ICharSequence, Java.Lang.ICharSequence, string)
  mapping(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/Collector;)Lcom/annimon/stream/Collector; = Mapping(Com.Annimon.Stream.Function.IFunction, Com.Annimon.Stream.ICollector)
  partitioningBy(Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/Collector; = PartitioningBy(Com.Annimon.Stream.Function.IPredicate)
  partitioningBy(Lcom/annimon/stream/function/Predicate;Lcom/annimon/stream/Collector;)Lcom/annimon/stream/Collector; = PartitioningBy(Com.Annimon.Stream.Function.IPredicate, Com.Annimon.Stream.ICollector)
  reducing(Ljava/lang/Object;Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/BinaryOperator;)Lcom/annimon/stream/Collector; = Reducing(Java.Lang.Object, Com.Annimon.Stream.Function.IFunction, Com.Annimon.Stream.Function.IBinaryOperator)
  reducing(Ljava/lang/Object;Lcom/annimon/stream/function/BinaryOperator;)Lcom/annimon/stream/Collector; = Reducing(Java.Lang.Object, Com.Annimon.Stream.Function.IBinaryOperator)
  summingDouble(Lcom/annimon/stream/function/ToDoubleFunction;)Lcom/annimon/stream/Collector; = SummingDouble(Com.Annimon.Stream.Function.IToDoubleFunction)
  summingInt(Lcom/annimon/stream/function/ToIntFunction;)Lcom/annimon/stream/Collector; = SummingInt(Com.Annimon.Stream.Function.IToIntFunction)
  summingLong(Lcom/annimon/stream/function/ToLongFunction;)Lcom/annimon/stream/Collector; = SummingLong(Com.Annimon.Stream.Function.IToLongFunction)
  toCollection(Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/Collector; = ToCollection(Com.Annimon.Stream.Function.ISupplier)
  toList()Lcom/annimon/stream/Collector; = ToList()
  toMap(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Collector; = ToMap(Com.Annimon.Stream.Function.IFunction)
  toMap(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Collector; = ToMap(Com.Annimon.Stream.Function.IFunction, Com.Annimon.Stream.Function.IFunction)
  toMap(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/BinaryOperator;)Lcom/annimon/stream/Collector; = ToMap(Com.Annimon.Stream.Function.IFunction, Com.Annimon.Stream.Function.IFunction, Com.Annimon.Stream.Function.IBinaryOperator)
  toMap(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/BinaryOperator;Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/Collector; = ToMap(Com.Annimon.Stream.Function.IFunction, Com.Annimon.Stream.Function.IFunction, Com.Annimon.Stream.Function.IBinaryOperator, Com.Annimon.Stream.Function.ISupplier)
  toMap(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/Collector; = ToMap(Com.Annimon.Stream.Function.IFunction, Com.Annimon.Stream.Function.IFunction, Com.Annimon.Stream.Function.ISupplier)
  toSet()Lcom/annimon/stream/Collector; = ToSet()
  toUnmodifiableList()Lcom/annimon/stream/Collector; = ToUnmodifiableList()
  toUnmodifiableMap(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Collector; = ToUnmodifiableMap(Com.Annimon.Stream.Function.IFunction, Com.Annimon.Stream.Function.IFunction)
  toUnmodifiableMap(Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/Function;Lcom/annimon/stream/function/BinaryOperator;)Lcom/annimon/stream/Collector; = ToUnmodifiableMap(Com.Annimon.Stream.Function.IFunction, Com.Annimon.Stream.Function.IFunction, Com.Annimon.Stream.Function.IBinaryOperator)
  toUnmodifiableSet()Lcom/annimon/stream/Collector; = ToUnmodifiableSet()
com/annimon/stream/ComparatorCompat = Com.Annimon.Stream.ComparatorCompat
  <init>(Ljava/util/Comparator;)V = .ctor(Java.Util.IComparator)
  chain(Ljava/util/Comparator;)Lcom/annimon/stream/ComparatorCompat; = Chain(Java.Util.IComparator)
  comparator()Ljava/util/Comparator; = Comparator()
  compare(Ljava/lang/Object;Ljava/lang/Object;)I = Compare(Java.Lang.Object, Java.Lang.Object)
  comparing(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/ComparatorCompat; = Comparing(Com.Annimon.Stream.Function.IFunction)
  comparing(Lcom/annimon/stream/function/Function;Ljava/util/Comparator;)Lcom/annimon/stream/ComparatorCompat; = Comparing(Com.Annimon.Stream.Function.IFunction, Java.Util.IComparator)
  comparingDouble(Lcom/annimon/stream/function/ToDoubleFunction;)Lcom/annimon/stream/ComparatorCompat; = ComparingDouble(Com.Annimon.Stream.Function.IToDoubleFunction)
  comparingInt(Lcom/annimon/stream/function/ToIntFunction;)Lcom/annimon/stream/ComparatorCompat; = ComparingInt(Com.Annimon.Stream.Function.IToIntFunction)
  comparingLong(Lcom/annimon/stream/function/ToLongFunction;)Lcom/annimon/stream/ComparatorCompat; = ComparingLong(Com.Annimon.Stream.Function.IToLongFunction)
  naturalOrder()Lcom/annimon/stream/ComparatorCompat; = NaturalOrder()
  nullsFirst()Lcom/annimon/stream/ComparatorCompat; = NullsFirst()
  nullsFirst(Ljava/util/Comparator;)Lcom/annimon/stream/ComparatorCompat; = NullsFirst(Java.Util.IComparator)
  nullsLast()Lcom/annimon/stream/ComparatorCompat; = NullsLast()
  nullsLast(Ljava/util/Comparator;)Lcom/annimon/stream/ComparatorCompat; = NullsLast(Java.Util.IComparator)
  reversed()Lcom/annimon/stream/ComparatorCompat; = Reversed()
  reversed(Ljava/util/Comparator;)Ljava/util/Comparator; = Reversed(Java.Util.IComparator)
  reverseOrder()Lcom/annimon/stream/ComparatorCompat; = ReverseOrder()
  thenComparing(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/ComparatorCompat; = ThenComparing(Com.Annimon.Stream.Function.IFunction)
  thenComparing(Lcom/annimon/stream/function/Function;Ljava/util/Comparator;)Lcom/annimon/stream/ComparatorCompat; = ThenComparing(Com.Annimon.Stream.Function.IFunction, Java.Util.IComparator)
  thenComparing(Ljava/util/Comparator;)Lcom/annimon/stream/ComparatorCompat; = ThenComparing(Java.Util.IComparator)
  thenComparing(Ljava/util/Comparator;Ljava/util/Comparator;)Ljava/util/Comparator; = ThenComparing(Java.Util.IComparator, Java.Util.IComparator)
  thenComparingDouble(Lcom/annimon/stream/function/ToDoubleFunction;)Lcom/annimon/stream/ComparatorCompat; = ThenComparingDouble(Com.Annimon.Stream.Function.IToDoubleFunction)
  thenComparingInt(Lcom/annimon/stream/function/ToIntFunction;)Lcom/annimon/stream/ComparatorCompat; = ThenComparingInt(Com.Annimon.Stream.Function.IToIntFunction)
  thenComparingLong(Lcom/annimon/stream/function/ToLongFunction;)Lcom/annimon/stream/ComparatorCompat; = ThenComparingLong(Com.Annimon.Stream.Function.IToLongFunction)
com/annimon/stream/DoubleStream = Com.Annimon.Stream.DoubleStream
  allMatch(Lcom/annimon/stream/function/DoublePredicate;)Z = AllMatch(Com.Annimon.Stream.Function.IDoublePredicate)
  anyMatch(Lcom/annimon/stream/function/DoublePredicate;)Z = AnyMatch(Com.Annimon.Stream.Function.IDoublePredicate)
  average()Lcom/annimon/stream/OptionalDouble; = Average()
  boxed()Lcom/annimon/stream/Stream; = Boxed()
  close()V = Close()
  collect(Lcom/annimon/stream/function/Supplier;Lcom/annimon/stream/function/ObjDoubleConsumer;)Ljava/lang/Object; = Collect(Com.Annimon.Stream.Function.ISupplier, Com.Annimon.Stream.Function.IObjDoubleConsumer)
  concat(Lcom/annimon/stream/DoubleStream;Lcom/annimon/stream/DoubleStream;)Lcom/annimon/stream/DoubleStream; = Concat(Com.Annimon.Stream.DoubleStream, Com.Annimon.Stream.DoubleStream)
  count()J = Count()
  custom(Lcom/annimon/stream/function/Function;)Ljava/lang/Object; = Custom(Com.Annimon.Stream.Function.IFunction)
  distinct()Lcom/annimon/stream/DoubleStream; = Distinct()
  dropWhile(Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/DoubleStream; = DropWhile(Com.Annimon.Stream.Function.IDoublePredicate)
  empty()Lcom/annimon/stream/DoubleStream; = Empty()
  filter(Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/DoubleStream; = Filter(Com.Annimon.Stream.Function.IDoublePredicate)
  filterIndexed(Lcom/annimon/stream/function/IndexedDoublePredicate;)Lcom/annimon/stream/DoubleStream; = FilterIndexed(Com.Annimon.Stream.Function.IIndexedDoublePredicate)
  filterIndexed(IILcom/annimon/stream/function/IndexedDoublePredicate;)Lcom/annimon/stream/DoubleStream; = FilterIndexed(int, int, Com.Annimon.Stream.Function.IIndexedDoublePredicate)
  filterNot(Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/DoubleStream; = FilterNot(Com.Annimon.Stream.Function.IDoublePredicate)
  findFirst()Lcom/annimon/stream/OptionalDouble; = FindFirst()
  findLast()Lcom/annimon/stream/OptionalDouble; = FindLast()
  findSingle()Lcom/annimon/stream/OptionalDouble; = FindSingle()
  flatMap(Lcom/annimon/stream/function/DoubleFunction;)Lcom/annimon/stream/DoubleStream; = FlatMap(Com.Annimon.Stream.Function.IDoubleFunction)
  forEach(Lcom/annimon/stream/function/DoubleConsumer;)V = ForEach(Com.Annimon.Stream.Function.IDoubleConsumer)
  forEachIndexed(Lcom/annimon/stream/function/IndexedDoubleConsumer;)V = ForEachIndexed(Com.Annimon.Stream.Function.IIndexedDoubleConsumer)
  forEachIndexed(IILcom/annimon/stream/function/IndexedDoubleConsumer;)V = ForEachIndexed(int, int, Com.Annimon.Stream.Function.IIndexedDoubleConsumer)
  generate(Lcom/annimon/stream/function/DoubleSupplier;)Lcom/annimon/stream/DoubleStream; = Generate(Com.Annimon.Stream.Function.IDoubleSupplier)
  iterate(DLcom/annimon/stream/function/DoublePredicate;Lcom/annimon/stream/function/DoubleUnaryOperator;)Lcom/annimon/stream/DoubleStream; = Iterate(double, Com.Annimon.Stream.Function.IDoublePredicate, Com.Annimon.Stream.Function.IDoubleUnaryOperator)
  iterate(DLcom/annimon/stream/function/DoubleUnaryOperator;)Lcom/annimon/stream/DoubleStream; = Iterate(double, Com.Annimon.Stream.Function.IDoubleUnaryOperator)
  iterator()Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble; = Iterator()
  limit(J)Lcom/annimon/stream/DoubleStream; = Limit(long)
  map(Lcom/annimon/stream/function/DoubleUnaryOperator;)Lcom/annimon/stream/DoubleStream; = Map(Com.Annimon.Stream.Function.IDoubleUnaryOperator)
  mapIndexed(Lcom/annimon/stream/function/IndexedDoubleUnaryOperator;)Lcom/annimon/stream/DoubleStream; = MapIndexed(Com.Annimon.Stream.Function.IIndexedDoubleUnaryOperator)
  mapIndexed(IILcom/annimon/stream/function/IndexedDoubleUnaryOperator;)Lcom/annimon/stream/DoubleStream; = MapIndexed(int, int, Com.Annimon.Stream.Function.IIndexedDoubleUnaryOperator)
  mapToInt(Lcom/annimon/stream/function/DoubleToIntFunction;)Lcom/annimon/stream/IntStream; = MapToInt(Com.Annimon.Stream.Function.IDoubleToIntFunction)
  mapToLong(Lcom/annimon/stream/function/DoubleToLongFunction;)Lcom/annimon/stream/LongStream; = MapToLong(Com.Annimon.Stream.Function.IDoubleToLongFunction)
  mapToObj(Lcom/annimon/stream/function/DoubleFunction;)Lcom/annimon/stream/Stream; = MapToObj(Com.Annimon.Stream.Function.IDoubleFunction)
  max()Lcom/annimon/stream/OptionalDouble; = Max()
  min()Lcom/annimon/stream/OptionalDouble; = Min()
  noneMatch(Lcom/annimon/stream/function/DoublePredicate;)Z = NoneMatch(Com.Annimon.Stream.Function.IDoublePredicate)
  of(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;)Lcom/annimon/stream/DoubleStream; = Of(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfDouble)
  of(D)Lcom/annimon/stream/DoubleStream; = Of(double)
  of([D)Lcom/annimon/stream/DoubleStream; = Of(params double[])
  onClose(Ljava/lang/Runnable;)Lcom/annimon/stream/DoubleStream; = OnClose(Java.Lang.IRunnable)
  peek(Lcom/annimon/stream/function/DoubleConsumer;)Lcom/annimon/stream/DoubleStream; = Peek(Com.Annimon.Stream.Function.IDoubleConsumer)
  reduce(Lcom/annimon/stream/function/DoubleBinaryOperator;)Lcom/annimon/stream/OptionalDouble; = Reduce(Com.Annimon.Stream.Function.IDoubleBinaryOperator)
  reduce(DLcom/annimon/stream/function/DoubleBinaryOperator;)D = Reduce(double, Com.Annimon.Stream.Function.IDoubleBinaryOperator)
  sample(I)Lcom/annimon/stream/DoubleStream; = Sample(int)
  scan(Lcom/annimon/stream/function/DoubleBinaryOperator;)Lcom/annimon/stream/DoubleStream; = Scan(Com.Annimon.Stream.Function.IDoubleBinaryOperator)
  scan(DLcom/annimon/stream/function/DoubleBinaryOperator;)Lcom/annimon/stream/DoubleStream; = Scan(double, Com.Annimon.Stream.Function.IDoubleBinaryOperator)
  single()D = Single()
  skip(J)Lcom/annimon/stream/DoubleStream; = Skip(long)
  sorted()Lcom/annimon/stream/DoubleStream; = Sorted()
  sorted(Ljava/util/Comparator;)Lcom/annimon/stream/DoubleStream; = Sorted(Java.Util.IComparator)
  sum()D = Sum()
  takeUntil(Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/DoubleStream; = TakeUntil(Com.Annimon.Stream.Function.IDoublePredicate)
  takeWhile(Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/DoubleStream; = TakeWhile(Com.Annimon.Stream.Function.IDoublePredicate)
  toArray()[D = ToArray()
com/annimon/stream/Exceptional = Com.Annimon.Stream.Exceptional
  getException()Ljava/lang/Throwable; = Exception
  isPresent()Z = IsPresent
  getOptional()Lcom/annimon/stream/Optional; = Optional
  getOrThrow()Ljava/lang/Object; = OrThrow
  getOrThrowRuntimeException()Ljava/lang/Object; = OrThrowRuntimeException
  custom(Lcom/annimon/stream/function/Function;)Ljava/lang/Object; = Custom(Com.Annimon.Stream.Function.IFunction)
  get()Ljava/lang/Object; = Get()
  getOrElse(Lcom/annimon/stream/function/Supplier;)Ljava/lang/Object; = GetOrElse(Com.Annimon.Stream.Function.ISupplier)
  getOrElse(Ljava/lang/Object;)Ljava/lang/Object; = GetOrElse(Java.Lang.Object)
  getOrThrow(Ljava/lang/Throwable;)Ljava/lang/Object; = GetOrThrow(Java.Lang.Object)
  ifException(Lcom/annimon/stream/function/Consumer;)Lcom/annimon/stream/Exceptional; = IfException(Com.Annimon.Stream.Function.IConsumer)
  ifExceptionIs(Ljava/lang/Class;Lcom/annimon/stream/function/Consumer;)Lcom/annimon/stream/Exceptional; = IfExceptionIs(Java.Lang.Class, Com.Annimon.Stream.Function.IConsumer)
  ifPresent(Lcom/annimon/stream/function/Consumer;)Lcom/annimon/stream/Exceptional; = IfPresent(Com.Annimon.Stream.Function.IConsumer)
  map(Lcom/annimon/stream/function/ThrowableFunction;)Lcom/annimon/stream/Exceptional; = Map(Com.Annimon.Stream.Function.IThrowableFunction)
  of(Lcom/annimon/stream/function/ThrowableSupplier;)Lcom/annimon/stream/Exceptional; = Of(Com.Annimon.Stream.Function.IThrowableSupplier)
  of(Ljava/lang/Throwable;)Lcom/annimon/stream/Exceptional; = Of(Java.Lang.Throwable)
  or(Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/Exceptional; = Or(Com.Annimon.Stream.Function.ISupplier)
  recover(Lcom/annimon/stream/function/ThrowableFunction;)Lcom/annimon/stream/Exceptional; = Recover(Com.Annimon.Stream.Function.IThrowableFunction)
  recoverWith(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Exceptional; = RecoverWith(Com.Annimon.Stream.Function.IFunction)
com/annimon/stream/function/BiConsumer = Com.Annimon.Stream.Function.IBiConsumer
  accept(Ljava/lang/Object;Ljava/lang/Object;)V = Accept(Java.Lang.Object, Java.Lang.Object)
com/annimon/stream/function/BiFunction = Com.Annimon.Stream.Function.IBiFunction
  apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; = Apply(Java.Lang.Object, Java.Lang.Object)
com/annimon/stream/function/BinaryOperator = Com.Annimon.Stream.Function.IBinaryOperator
com/annimon/stream/function/BooleanConsumer = Com.Annimon.Stream.Function.IBooleanConsumer
  accept(Z)V = Accept(bool)
com/annimon/stream/function/BooleanFunction = Com.Annimon.Stream.Function.IBooleanFunction
  apply(Z)Ljava/lang/Object; = Apply(bool)
com/annimon/stream/function/BooleanPredicate = Com.Annimon.Stream.Function.IBooleanPredicate
  test(Z)Z = Test(bool)
com/annimon/stream/function/BooleanSupplier = Com.Annimon.Stream.Function.IBooleanSupplier
  getAsBoolean()Z = AsBoolean
com/annimon/stream/function/Consumer = Com.Annimon.Stream.Function.IConsumer
  accept(Ljava/lang/Object;)V = Accept(Java.Lang.Object)
com/annimon/stream/function/DoubleBinaryOperator = Com.Annimon.Stream.Function.IDoubleBinaryOperator
  applyAsDouble(DD)D = ApplyAsDouble(double, double)
com/annimon/stream/function/DoubleConsumer = Com.Annimon.Stream.Function.IDoubleConsumer
  accept(D)V = Accept(double)
com/annimon/stream/function/DoubleFunction = Com.Annimon.Stream.Function.IDoubleFunction
  apply(D)Ljava/lang/Object; = Apply(double)
com/annimon/stream/function/DoublePredicate = Com.Annimon.Stream.Function.IDoublePredicate
  test(D)Z = Test(double)
com/annimon/stream/function/DoubleSupplier = Com.Annimon.Stream.Function.IDoubleSupplier
  getAsDouble()D = AsDouble
com/annimon/stream/function/DoubleToIntFunction = Com.Annimon.Stream.Function.IDoubleToIntFunction
  applyAsInt(D)I = ApplyAsInt(double)
com/annimon/stream/function/DoubleToLongFunction = Com.Annimon.Stream.Function.IDoubleToLongFunction
  applyAsLong(D)J = ApplyAsLong(double)
com/annimon/stream/function/DoubleUnaryOperator = Com.Annimon.Stream.Function.IDoubleUnaryOperator
  applyAsDouble(D)D = ApplyAsDouble(double)
com/annimon/stream/function/Function = Com.Annimon.Stream.Function.IFunction
  apply(Ljava/lang/Object;)Ljava/lang/Object; = Apply(Java.Lang.Object)
com/annimon/stream/function/IndexedBiFunction = Com.Annimon.Stream.Function.IIndexedBiFunction
  apply(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; = Apply(int, Java.Lang.Object, Java.Lang.Object)
com/annimon/stream/function/IndexedConsumer = Com.Annimon.Stream.Function.IIndexedConsumer
  accept(ILjava/lang/Object;)V = Accept(int, Java.Lang.Object)
com/annimon/stream/function/IndexedDoubleConsumer = Com.Annimon.Stream.Function.IIndexedDoubleConsumer
  accept(ID)V = Accept(int, double)
com/annimon/stream/function/IndexedDoubleFunction = Com.Annimon.Stream.Function.IIndexedDoubleFunction
  apply(ID)Ljava/lang/Object; = Apply(int, double)
com/annimon/stream/function/IndexedDoublePredicate = Com.Annimon.Stream.Function.IIndexedDoublePredicate
  test(ID)Z = Test(int, double)
com/annimon/stream/function/IndexedDoubleUnaryOperator = Com.Annimon.Stream.Function.IIndexedDoubleUnaryOperator
  applyAsDouble(ID)D = ApplyAsDouble(int, double)
com/annimon/stream/function/IndexedFunction = Com.Annimon.Stream.Function.IIndexedFunction
  apply(ILjava/lang/Object;)Ljava/lang/Object; = Apply(int, Java.Lang.Object)
com/annimon/stream/function/IndexedIntConsumer = Com.Annimon.Stream.Function.IIndexedIntConsumer
  accept(II)V = Accept(int, int)
com/annimon/stream/function/IndexedIntFunction = Com.Annimon.Stream.Function.IIndexedIntFunction
  apply(II)Ljava/lang/Object; = Apply(int, int)
com/annimon/stream/function/IndexedIntPredicate = Com.Annimon.Stream.Function.IIndexedIntPredicate
  test(II)Z = Test(int, int)
com/annimon/stream/function/IndexedLongConsumer = Com.Annimon.Stream.Function.IIndexedLongConsumer
  accept(IJ)V = Accept(int, long)
com/annimon/stream/function/IndexedLongFunction = Com.Annimon.Stream.Function.IIndexedLongFunction
  apply(IJ)Ljava/lang/Object; = Apply(int, long)
com/annimon/stream/function/IndexedLongPredicate = Com.Annimon.Stream.Function.IIndexedLongPredicate
  test(IJ)Z = Test(int, long)
com/annimon/stream/function/IndexedLongUnaryOperator = Com.Annimon.Stream.Function.IIndexedLongUnaryOperator
  applyAsLong(IJ)J = ApplyAsLong(int, long)
com/annimon/stream/function/IndexedPredicate = Com.Annimon.Stream.Function.IIndexedPredicate
  test(ILjava/lang/Object;)Z = Test(int, Java.Lang.Object)
com/annimon/stream/function/IntBinaryOperator = Com.Annimon.Stream.Function.IIntBinaryOperator
  applyAsInt(II)I = ApplyAsInt(int, int)
com/annimon/stream/function/IntConsumer = Com.Annimon.Stream.Function.IIntConsumer
  accept(I)V = Accept(int)
com/annimon/stream/function/IntFunction = Com.Annimon.Stream.Function.IIntFunction
  apply(I)Ljava/lang/Object; = Apply(int)
com/annimon/stream/function/IntPredicate = Com.Annimon.Stream.Function.IIntPredicate
  test(I)Z = Test(int)
com/annimon/stream/function/IntSupplier = Com.Annimon.Stream.Function.IIntSupplier
  getAsInt()I = AsInt
com/annimon/stream/function/IntToDoubleFunction = Com.Annimon.Stream.Function.IIntToDoubleFunction
  applyAsDouble(I)D = ApplyAsDouble(int)
com/annimon/stream/function/IntToLongFunction = Com.Annimon.Stream.Function.IIntToLongFunction
  applyAsLong(I)J = ApplyAsLong(int)
com/annimon/stream/function/IntUnaryOperator = Com.Annimon.Stream.Function.IIntUnaryOperator
  applyAsInt(I)I = ApplyAsInt(int)
com/annimon/stream/function/LongBinaryOperator = Com.Annimon.Stream.Function.ILongBinaryOperator
  applyAsLong(JJ)J = ApplyAsLong(long, long)
com/annimon/stream/function/LongConsumer = Com.Annimon.Stream.Function.ILongConsumer
  accept(J)V = Accept(long)
com/annimon/stream/function/LongFunction = Com.Annimon.Stream.Function.ILongFunction
  apply(J)Ljava/lang/Object; = Apply(long)
com/annimon/stream/function/LongPredicate = Com.Annimon.Stream.Function.ILongPredicate
  test(J)Z = Test(long)
com/annimon/stream/function/LongSupplier = Com.Annimon.Stream.Function.ILongSupplier
  getAsLong()J = AsLong
com/annimon/stream/function/LongToDoubleFunction = Com.Annimon.Stream.Function.ILongToDoubleFunction
  applyAsDouble(J)D = ApplyAsDouble(long)
com/annimon/stream/function/LongToIntFunction = Com.Annimon.Stream.Function.ILongToIntFunction
  applyAsInt(J)I = ApplyAsInt(long)
com/annimon/stream/function/LongUnaryOperator = Com.Annimon.Stream.Function.ILongUnaryOperator
  applyAsLong(J)J = ApplyAsLong(long)
com/annimon/stream/function/ObjDoubleConsumer = Com.Annimon.Stream.Function.IObjDoubleConsumer
  accept(Ljava/lang/Object;D)V = Accept(Java.Lang.Object, double)
com/annimon/stream/function/ObjIntConsumer = Com.Annimon.Stream.Function.IObjIntConsumer
  accept(Ljava/lang/Object;I)V = Accept(Java.Lang.Object, int)
com/annimon/stream/function/ObjLongConsumer = Com.Annimon.Stream.Function.IObjLongConsumer
  accept(Ljava/lang/Object;J)V = Accept(Java.Lang.Object, long)
com/annimon/stream/function/Predicate = Com.Annimon.Stream.Function.IPredicate
  test(Ljava/lang/Object;)Z = Test(Java.Lang.Object)
com/annimon/stream/function/Supplier = Com.Annimon.Stream.Function.ISupplier
  get()Ljava/lang/Object; = Get()
com/annimon/stream/function/ThrowableConsumer = Com.Annimon.Stream.Function.IThrowableConsumer
  accept(Ljava/lang/Object;)V = Accept(Java.Lang.Object)
com/annimon/stream/function/ThrowableDoubleConsumer = Com.Annimon.Stream.Function.IThrowableDoubleConsumer
  accept(D)V = Accept(double)
com/annimon/stream/function/ThrowableDoubleFunction = Com.Annimon.Stream.Function.IThrowableDoubleFunction
  apply(D)Ljava/lang/Object; = Apply(double)
com/annimon/stream/function/ThrowableDoublePredicate = Com.Annimon.Stream.Function.IThrowableDoublePredicate
  test(D)Z = Test(double)
com/annimon/stream/function/ThrowableDoubleSupplier = Com.Annimon.Stream.Function.IThrowableDoubleSupplier
  getAsDouble()D = AsDouble
com/annimon/stream/function/ThrowableFunction = Com.Annimon.Stream.Function.IThrowableFunction
  apply(Ljava/lang/Object;)Ljava/lang/Object; = Apply(Java.Lang.Object)
com/annimon/stream/function/ThrowableIntConsumer = Com.Annimon.Stream.Function.IThrowableIntConsumer
  accept(I)V = Accept(int)
com/annimon/stream/function/ThrowableIntFunction = Com.Annimon.Stream.Function.IThrowableIntFunction
  apply(I)Ljava/lang/Object; = Apply(int)
com/annimon/stream/function/ThrowableIntPredicate = Com.Annimon.Stream.Function.IThrowableIntPredicate
  test(I)Z = Test(int)
com/annimon/stream/function/ThrowableIntSupplier = Com.Annimon.Stream.Function.IThrowableIntSupplier
  getAsInt()I = AsInt
com/annimon/stream/function/ThrowableLongConsumer = Com.Annimon.Stream.Function.IThrowableLongConsumer
  accept(J)V = Accept(long)
com/annimon/stream/function/ThrowableLongFunction = Com.Annimon.Stream.Function.IThrowableLongFunction
  apply(J)Ljava/lang/Object; = Apply(long)
com/annimon/stream/function/ThrowableLongPredicate = Com.Annimon.Stream.Function.IThrowableLongPredicate
  test(J)Z = Test(long)
com/annimon/stream/function/ThrowableLongSupplier = Com.Annimon.Stream.Function.IThrowableLongSupplier
  getAsLong()J = AsLong
com/annimon/stream/function/ThrowablePredicate = Com.Annimon.Stream.Function.IThrowablePredicate
  test(Ljava/lang/Object;)Z = Test(Java.Lang.Object)
com/annimon/stream/function/ThrowableSupplier = Com.Annimon.Stream.Function.IThrowableSupplier
  get()Ljava/lang/Object; = Get()
com/annimon/stream/function/ToBooleanFunction = Com.Annimon.Stream.Function.IToBooleanFunction
  applyAsBoolean(Ljava/lang/Object;)Z = ApplyAsBoolean(Java.Lang.Object)
com/annimon/stream/function/ToDoubleFunction = Com.Annimon.Stream.Function.IToDoubleFunction
  applyAsDouble(Ljava/lang/Object;)D = ApplyAsDouble(Java.Lang.Object)
com/annimon/stream/function/ToIntFunction = Com.Annimon.Stream.Function.IToIntFunction
  applyAsInt(Ljava/lang/Object;)I = ApplyAsInt(Java.Lang.Object)
com/annimon/stream/function/ToLongFunction = Com.Annimon.Stream.Function.IToLongFunction
  applyAsLong(Ljava/lang/Object;)J = ApplyAsLong(Java.Lang.Object)
com/annimon/stream/function/UnaryOperator = Com.Annimon.Stream.Function.IUnaryOperator
com/annimon/stream/internal/Compat = Com.Annimon.Stream.Internal.Compat
  <init>()V = .ctor()
  newArray(I[Ljava/lang/Object;)[Ljava/lang/Object; = NewArray(int, params Java.Lang.Object[])
  newArrayCompat([Ljava/lang/Object;I)[Ljava/lang/Object; = NewArrayCompat(Java.Lang.Object[], int)
  queue()Ljava/util/Queue; = Queue()
com/annimon/stream/internal/Compose = Com.Annimon.Stream.Internal.Compose
  closeables(Ljava/io/Closeable;Ljava/io/Closeable;)Ljava/lang/Runnable; = Closeables(Java.IO.ICloseable, Java.IO.ICloseable)
  runnables(Ljava/lang/Runnable;Ljava/lang/Runnable;)Ljava/lang/Runnable; = Runnables(Java.Lang.IRunnable, Java.Lang.IRunnable)
com/annimon/stream/internal/Operators = Com.Annimon.Stream.Internal.Operators
  toArray(Ljava/util/Iterator;Lcom/annimon/stream/function/IntFunction;)[Ljava/lang/Object; = ToArray(Java.Util.IIterator, Com.Annimon.Stream.Function.IIntFunction)
  toDoubleArray(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;)[D = ToDoubleArray(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfDouble)
  toIntArray(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;)[I = ToIntArray(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfInt)
  toList(Ljava/util/Iterator;)Ljava/util/List; = ToList(Java.Util.IIterator)
  toLongArray(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;)[J = ToLongArray(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfLong)
com/annimon/stream/internal/Params = Com.Annimon.Stream.Internal.Params
  <init>()V = .ctor()
  closeHandler = CloseHandler
com/annimon/stream/IntPair = Com.Annimon.Stream.IntPair
  <init>(ILjava/lang/Object;)V = .ctor(int, Java.Lang.Object)
  getFirst()I = First
  getSecond()Ljava/lang/Object; = Second
com/annimon/stream/IntStream = Com.Annimon.Stream.IntStream
  allMatch(Lcom/annimon/stream/function/IntPredicate;)Z = AllMatch(Com.Annimon.Stream.Function.IIntPredicate)
  anyMatch(Lcom/annimon/stream/function/IntPredicate;)Z = AnyMatch(Com.Annimon.Stream.Function.IIntPredicate)
  boxed()Lcom/annimon/stream/Stream; = Boxed()
  close()V = Close()
  collect(Lcom/annimon/stream/function/Supplier;Lcom/annimon/stream/function/ObjIntConsumer;)Ljava/lang/Object; = Collect(Com.Annimon.Stream.Function.ISupplier, Com.Annimon.Stream.Function.IObjIntConsumer)
  concat(Lcom/annimon/stream/IntStream;Lcom/annimon/stream/IntStream;)Lcom/annimon/stream/IntStream; = Concat(Com.Annimon.Stream.IntStream, Com.Annimon.Stream.IntStream)
  count()J = Count()
  custom(Lcom/annimon/stream/function/Function;)Ljava/lang/Object; = Custom(Com.Annimon.Stream.Function.IFunction)
  distinct()Lcom/annimon/stream/IntStream; = Distinct()
  dropWhile(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/IntStream; = DropWhile(Com.Annimon.Stream.Function.IIntPredicate)
  empty()Lcom/annimon/stream/IntStream; = Empty()
  filter(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/IntStream; = Filter(Com.Annimon.Stream.Function.IIntPredicate)
  filterIndexed(Lcom/annimon/stream/function/IndexedIntPredicate;)Lcom/annimon/stream/IntStream; = FilterIndexed(Com.Annimon.Stream.Function.IIndexedIntPredicate)
  filterIndexed(IILcom/annimon/stream/function/IndexedIntPredicate;)Lcom/annimon/stream/IntStream; = FilterIndexed(int, int, Com.Annimon.Stream.Function.IIndexedIntPredicate)
  filterNot(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/IntStream; = FilterNot(Com.Annimon.Stream.Function.IIntPredicate)
  findFirst()Lcom/annimon/stream/OptionalInt; = FindFirst()
  findLast()Lcom/annimon/stream/OptionalInt; = FindLast()
  findSingle()Lcom/annimon/stream/OptionalInt; = FindSingle()
  flatMap(Lcom/annimon/stream/function/IntFunction;)Lcom/annimon/stream/IntStream; = FlatMap(Com.Annimon.Stream.Function.IIntFunction)
  forEach(Lcom/annimon/stream/function/IntConsumer;)V = ForEach(Com.Annimon.Stream.Function.IIntConsumer)
  forEachIndexed(Lcom/annimon/stream/function/IndexedIntConsumer;)V = ForEachIndexed(Com.Annimon.Stream.Function.IIndexedIntConsumer)
  forEachIndexed(IILcom/annimon/stream/function/IndexedIntConsumer;)V = ForEachIndexed(int, int, Com.Annimon.Stream.Function.IIndexedIntConsumer)
  generate(Lcom/annimon/stream/function/IntSupplier;)Lcom/annimon/stream/IntStream; = Generate(Com.Annimon.Stream.Function.IIntSupplier)
  iterate(ILcom/annimon/stream/function/IntPredicate;Lcom/annimon/stream/function/IntUnaryOperator;)Lcom/annimon/stream/IntStream; = Iterate(int, Com.Annimon.Stream.Function.IIntPredicate, Com.Annimon.Stream.Function.IIntUnaryOperator)
  iterate(ILcom/annimon/stream/function/IntUnaryOperator;)Lcom/annimon/stream/IntStream; = Iterate(int, Com.Annimon.Stream.Function.IIntUnaryOperator)
  iterator()Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt; = Iterator()
  limit(J)Lcom/annimon/stream/IntStream; = Limit(long)
  map(Lcom/annimon/stream/function/IntUnaryOperator;)Lcom/annimon/stream/IntStream; = Map(Com.Annimon.Stream.Function.IIntUnaryOperator)
  mapIndexed(Lcom/annimon/stream/function/IntBinaryOperator;)Lcom/annimon/stream/IntStream; = MapIndexed(Com.Annimon.Stream.Function.IIntBinaryOperator)
  mapIndexed(IILcom/annimon/stream/function/IntBinaryOperator;)Lcom/annimon/stream/IntStream; = MapIndexed(int, int, Com.Annimon.Stream.Function.IIntBinaryOperator)
  mapToDouble(Lcom/annimon/stream/function/IntToDoubleFunction;)Lcom/annimon/stream/DoubleStream; = MapToDouble(Com.Annimon.Stream.Function.IIntToDoubleFunction)
  mapToLong(Lcom/annimon/stream/function/IntToLongFunction;)Lcom/annimon/stream/LongStream; = MapToLong(Com.Annimon.Stream.Function.IIntToLongFunction)
  mapToObj(Lcom/annimon/stream/function/IntFunction;)Lcom/annimon/stream/Stream; = MapToObj(Com.Annimon.Stream.Function.IIntFunction)
  max()Lcom/annimon/stream/OptionalInt; = Max()
  min()Lcom/annimon/stream/OptionalInt; = Min()
  noneMatch(Lcom/annimon/stream/function/IntPredicate;)Z = NoneMatch(Com.Annimon.Stream.Function.IIntPredicate)
  of(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;)Lcom/annimon/stream/IntStream; = Of(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfInt)
  of(I)Lcom/annimon/stream/IntStream; = Of(int)
  of([I)Lcom/annimon/stream/IntStream; = Of(params int[])
  ofCodePoints(Ljava/lang/CharSequence;)Lcom/annimon/stream/IntStream; = OfCodePoints(Java.Lang.ICharSequence)
  onClose(Ljava/lang/Runnable;)Lcom/annimon/stream/IntStream; = OnClose(Java.Lang.IRunnable)
  peek(Lcom/annimon/stream/function/IntConsumer;)Lcom/annimon/stream/IntStream; = Peek(Com.Annimon.Stream.Function.IIntConsumer)
  range(II)Lcom/annimon/stream/IntStream; = Range(int, int)
  rangeClosed(II)Lcom/annimon/stream/IntStream; = RangeClosed(int, int)
  reduce(Lcom/annimon/stream/function/IntBinaryOperator;)Lcom/annimon/stream/OptionalInt; = Reduce(Com.Annimon.Stream.Function.IIntBinaryOperator)
  reduce(ILcom/annimon/stream/function/IntBinaryOperator;)I = Reduce(int, Com.Annimon.Stream.Function.IIntBinaryOperator)
  sample(I)Lcom/annimon/stream/IntStream; = Sample(int)
  scan(Lcom/annimon/stream/function/IntBinaryOperator;)Lcom/annimon/stream/IntStream; = Scan(Com.Annimon.Stream.Function.IIntBinaryOperator)
  scan(ILcom/annimon/stream/function/IntBinaryOperator;)Lcom/annimon/stream/IntStream; = Scan(int, Com.Annimon.Stream.Function.IIntBinaryOperator)
  single()I = Single()
  skip(J)Lcom/annimon/stream/IntStream; = Skip(long)
  sorted()Lcom/annimon/stream/IntStream; = Sorted()
  sorted(Ljava/util/Comparator;)Lcom/annimon/stream/IntStream; = Sorted(Java.Util.IComparator)
  sum()I = Sum()
  takeUntil(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/IntStream; = TakeUntil(Com.Annimon.Stream.Function.IIntPredicate)
  takeWhile(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/IntStream; = TakeWhile(Com.Annimon.Stream.Function.IIntPredicate)
  toArray()[I = ToArray()
com/annimon/stream/iterator/IndexedIterator = Com.Annimon.Stream.Iterator.IndexedIterator
  <init>(IILjava/util/Iterator;)V = .ctor(int, int, Java.Util.IIterator)
  <init>(Ljava/util/Iterator;)V = .ctor(Java.Util.IIterator)
  hasNext()Z = HasNext
  getIndex()I = Index
  next()Ljava/lang/Object; = Next()
  remove()V = Remove()
com/annimon/stream/iterator/LazyIterator = Com.Annimon.Stream.Iterator.LazyIterator
  <init>(Ljava/lang/Iterable;)V = .ctor(Java.Lang.IIterable)
  hasNext()Z = HasNext
  next()Ljava/lang/Object; = Next()
  remove()V = Remove()
com/annimon/stream/iterator/LsaExtIterator = Com.Annimon.Stream.Iterator.LsaExtIterator
  <init>()V = .ctor()
  hasNext = HasNext
  isInit = IsInit
  next = Next
  hasNext()Z = HasNext
  next()Ljava/lang/Object; = Next()
  nextIteration()V = NextIteration()
  remove()V = Remove()
com/annimon/stream/iterator/LsaIterator = Com.Annimon.Stream.Iterator.LsaIterator
  <init>()V = .ctor()
  next()Ljava/lang/Object; = Next()
  nextIteration()Ljava/lang/Object; = NextIteration()
  remove()V = Remove()
com/annimon/stream/iterator/PrimitiveExtIterator = Com.Annimon.Stream.Iterator.PrimitiveExtIterator
com/annimon/stream/iterator/PrimitiveIndexedIterator = Com.Annimon.Stream.Iterator.PrimitiveIndexedIterator
com/annimon/stream/iterator/PrimitiveIterator = Com.Annimon.Stream.Iterator.PrimitiveIterator
com/annimon/stream/LongStream = Com.Annimon.Stream.LongStream
  allMatch(Lcom/annimon/stream/function/LongPredicate;)Z = AllMatch(Com.Annimon.Stream.Function.ILongPredicate)
  anyMatch(Lcom/annimon/stream/function/LongPredicate;)Z = AnyMatch(Com.Annimon.Stream.Function.ILongPredicate)
  boxed()Lcom/annimon/stream/Stream; = Boxed()
  close()V = Close()
  collect(Lcom/annimon/stream/function/Supplier;Lcom/annimon/stream/function/ObjLongConsumer;)Ljava/lang/Object; = Collect(Com.Annimon.Stream.Function.ISupplier, Com.Annimon.Stream.Function.IObjLongConsumer)
  concat(Lcom/annimon/stream/LongStream;Lcom/annimon/stream/LongStream;)Lcom/annimon/stream/LongStream; = Concat(Com.Annimon.Stream.LongStream, Com.Annimon.Stream.LongStream)
  count()J = Count()
  custom(Lcom/annimon/stream/function/Function;)Ljava/lang/Object; = Custom(Com.Annimon.Stream.Function.IFunction)
  distinct()Lcom/annimon/stream/LongStream; = Distinct()
  dropWhile(Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/LongStream; = DropWhile(Com.Annimon.Stream.Function.ILongPredicate)
  empty()Lcom/annimon/stream/LongStream; = Empty()
  filter(Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/LongStream; = Filter(Com.Annimon.Stream.Function.ILongPredicate)
  filterIndexed(Lcom/annimon/stream/function/IndexedLongPredicate;)Lcom/annimon/stream/LongStream; = FilterIndexed(Com.Annimon.Stream.Function.IIndexedLongPredicate)
  filterIndexed(IILcom/annimon/stream/function/IndexedLongPredicate;)Lcom/annimon/stream/LongStream; = FilterIndexed(int, int, Com.Annimon.Stream.Function.IIndexedLongPredicate)
  filterNot(Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/LongStream; = FilterNot(Com.Annimon.Stream.Function.ILongPredicate)
  findFirst()Lcom/annimon/stream/OptionalLong; = FindFirst()
  findLast()Lcom/annimon/stream/OptionalLong; = FindLast()
  findSingle()Lcom/annimon/stream/OptionalLong; = FindSingle()
  flatMap(Lcom/annimon/stream/function/LongFunction;)Lcom/annimon/stream/LongStream; = FlatMap(Com.Annimon.Stream.Function.ILongFunction)
  forEach(Lcom/annimon/stream/function/LongConsumer;)V = ForEach(Com.Annimon.Stream.Function.ILongConsumer)
  forEachIndexed(Lcom/annimon/stream/function/IndexedLongConsumer;)V = ForEachIndexed(Com.Annimon.Stream.Function.IIndexedLongConsumer)
  forEachIndexed(IILcom/annimon/stream/function/IndexedLongConsumer;)V = ForEachIndexed(int, int, Com.Annimon.Stream.Function.IIndexedLongConsumer)
  generate(Lcom/annimon/stream/function/LongSupplier;)Lcom/annimon/stream/LongStream; = Generate(Com.Annimon.Stream.Function.ILongSupplier)
  iterate(JLcom/annimon/stream/function/LongPredicate;Lcom/annimon/stream/function/LongUnaryOperator;)Lcom/annimon/stream/LongStream; = Iterate(long, Com.Annimon.Stream.Function.ILongPredicate, Com.Annimon.Stream.Function.ILongUnaryOperator)
  iterate(JLcom/annimon/stream/function/LongUnaryOperator;)Lcom/annimon/stream/LongStream; = Iterate(long, Com.Annimon.Stream.Function.ILongUnaryOperator)
  iterator()Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong; = Iterator()
  limit(J)Lcom/annimon/stream/LongStream; = Limit(long)
  map(Lcom/annimon/stream/function/LongUnaryOperator;)Lcom/annimon/stream/LongStream; = Map(Com.Annimon.Stream.Function.ILongUnaryOperator)
  mapIndexed(Lcom/annimon/stream/function/IndexedLongUnaryOperator;)Lcom/annimon/stream/LongStream; = MapIndexed(Com.Annimon.Stream.Function.IIndexedLongUnaryOperator)
  mapIndexed(IILcom/annimon/stream/function/IndexedLongUnaryOperator;)Lcom/annimon/stream/LongStream; = MapIndexed(int, int, Com.Annimon.Stream.Function.IIndexedLongUnaryOperator)
  mapToDouble(Lcom/annimon/stream/function/LongToDoubleFunction;)Lcom/annimon/stream/DoubleStream; = MapToDouble(Com.Annimon.Stream.Function.ILongToDoubleFunction)
  mapToInt(Lcom/annimon/stream/function/LongToIntFunction;)Lcom/annimon/stream/IntStream; = MapToInt(Com.Annimon.Stream.Function.ILongToIntFunction)
  mapToObj(Lcom/annimon/stream/function/LongFunction;)Lcom/annimon/stream/Stream; = MapToObj(Com.Annimon.Stream.Function.ILongFunction)
  max()Lcom/annimon/stream/OptionalLong; = Max()
  min()Lcom/annimon/stream/OptionalLong; = Min()
  noneMatch(Lcom/annimon/stream/function/LongPredicate;)Z = NoneMatch(Com.Annimon.Stream.Function.ILongPredicate)
  of(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;)Lcom/annimon/stream/LongStream; = Of(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfLong)
  of(J)Lcom/annimon/stream/LongStream; = Of(long)
  of([J)Lcom/annimon/stream/LongStream; = Of(params long[])
  onClose(Ljava/lang/Runnable;)Lcom/annimon/stream/LongStream; = OnClose(Java.Lang.IRunnable)
  peek(Lcom/annimon/stream/function/LongConsumer;)Lcom/annimon/stream/LongStream; = Peek(Com.Annimon.Stream.Function.ILongConsumer)
  range(JJ)Lcom/annimon/stream/LongStream; = Range(long, long)
  rangeClosed(JJ)Lcom/annimon/stream/LongStream; = RangeClosed(long, long)
  reduce(Lcom/annimon/stream/function/LongBinaryOperator;)Lcom/annimon/stream/OptionalLong; = Reduce(Com.Annimon.Stream.Function.ILongBinaryOperator)
  reduce(JLcom/annimon/stream/function/LongBinaryOperator;)J = Reduce(long, Com.Annimon.Stream.Function.ILongBinaryOperator)
  sample(I)Lcom/annimon/stream/LongStream; = Sample(int)
  scan(Lcom/annimon/stream/function/LongBinaryOperator;)Lcom/annimon/stream/LongStream; = Scan(Com.Annimon.Stream.Function.ILongBinaryOperator)
  scan(JLcom/annimon/stream/function/LongBinaryOperator;)Lcom/annimon/stream/LongStream; = Scan(long, Com.Annimon.Stream.Function.ILongBinaryOperator)
  single()J = Single()
  skip(J)Lcom/annimon/stream/LongStream; = Skip(long)
  sorted()Lcom/annimon/stream/LongStream; = Sorted()
  sorted(Ljava/util/Comparator;)Lcom/annimon/stream/LongStream; = Sorted(Java.Util.IComparator)
  sum()J = Sum()
  takeUntil(Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/LongStream; = TakeUntil(Com.Annimon.Stream.Function.ILongPredicate)
  takeWhile(Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/LongStream; = TakeWhile(Com.Annimon.Stream.Function.ILongPredicate)
  toArray()[J = ToArray()
com/annimon/stream/Objects = Com.Annimon.Stream.Objects
  compare(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)I = Compare(Java.Lang.Object, Java.Lang.Object, Java.Util.IComparator)
  compareInt(II)I = CompareInt(int, int)
  compareLong(JJ)I = CompareLong(long, long)
  deepEquals(Ljava/lang/Object;Ljava/lang/Object;)Z = DeepEquals(Java.Lang.Object, Java.Lang.Object)
  equals(Ljava/lang/Object;Ljava/lang/Object;)Z = Equals(Java.Lang.Object, Java.Lang.Object)
  hash([Ljava/lang/Object;)I = Hash(params Java.Lang.Object[])
  hashCode(Ljava/lang/Object;)I = HashCode(Java.Lang.Object)
  isNull(Ljava/lang/Object;)Z = IsNull(Java.Lang.Object)
  nonNull(Ljava/lang/Object;)Z = NonNull(Java.Lang.Object)
  requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; = RequireNonNull(Java.Lang.Object)
  requireNonNull(Ljava/lang/Object;Lcom/annimon/stream/function/Supplier;)Ljava/lang/Object; = RequireNonNull(Java.Lang.Object, Com.Annimon.Stream.Function.ISupplier)
  requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; = RequireNonNull(Java.Lang.Object, string)
  requireNonNullElements(Ljava/util/Collection;)Ljava/util/Collection; = RequireNonNullElements(System.Collections.ICollection)
  requireNonNullElse(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; = RequireNonNullElse(Java.Lang.Object, Java.Lang.Object)
  requireNonNullElseGet(Ljava/lang/Object;Lcom/annimon/stream/function/Supplier;)Ljava/lang/Object; = RequireNonNullElseGet(Java.Lang.Object, Com.Annimon.Stream.Function.ISupplier)
  toString(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String; = ToString(Java.Lang.Object, string)
com/annimon/stream/operator/DoubleArray = Com.Annimon.Stream.Operator.DoubleArray
  <init>([D)V = .ctor(double[])
  hasNext()Z = HasNext
  nextDouble()D = NextDouble()
com/annimon/stream/operator/DoubleConcat = Com.Annimon.Stream.Operator.DoubleConcat
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfDouble, Com.Annimon.Stream.Iterator.PrimitiveIterator.OfDouble)
  hasNext()Z = HasNext
  nextDouble()D = NextDouble()
com/annimon/stream/operator/DoubleDropWhile = Com.Annimon.Stream.Operator.DoubleDropWhile
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoublePredicate;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfDouble, Com.Annimon.Stream.Function.IDoublePredicate)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/DoubleFilter = Com.Annimon.Stream.Operator.DoubleFilter
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoublePredicate;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfDouble, Com.Annimon.Stream.Function.IDoublePredicate)
  hasNext()Z = HasNext
  nextDouble()D = NextDouble()
com/annimon/stream/operator/DoubleFilterIndexed = Com.Annimon.Stream.Operator.DoubleFilterIndexed
  <init>(Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfDouble;Lcom/annimon/stream/function/IndexedDoublePredicate;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIndexedIterator.OfDouble, Com.Annimon.Stream.Function.IIndexedDoublePredicate)
  hasNext()Z = HasNext
  nextDouble()D = NextDouble()
com/annimon/stream/operator/DoubleFlatMap = Com.Annimon.Stream.Operator.DoubleFlatMap
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoubleFunction;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfDouble, Com.Annimon.Stream.Function.IDoubleFunction)
  hasNext()Z = HasNext
  nextDouble()D = NextDouble()
com/annimon/stream/operator/DoubleGenerate = Com.Annimon.Stream.Operator.DoubleGenerate
  <init>(Lcom/annimon/stream/function/DoubleSupplier;)V = .ctor(Com.Annimon.Stream.Function.IDoubleSupplier)
  hasNext()Z = HasNext
  nextDouble()D = NextDouble()
com/annimon/stream/operator/DoubleIterate = Com.Annimon.Stream.Operator.DoubleIterate
  <init>(DLcom/annimon/stream/function/DoubleUnaryOperator;)V = .ctor(double, Com.Annimon.Stream.Function.IDoubleUnaryOperator)
  hasNext()Z = HasNext
  nextDouble()D = NextDouble()
com/annimon/stream/operator/DoubleLimit = Com.Annimon.Stream.Operator.DoubleLimit
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;J)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfDouble, long)
  hasNext()Z = HasNext
  nextDouble()D = NextDouble()
com/annimon/stream/operator/DoubleMap = Com.Annimon.Stream.Operator.DoubleMap
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoubleUnaryOperator;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfDouble, Com.Annimon.Stream.Function.IDoubleUnaryOperator)
  hasNext()Z = HasNext
  nextDouble()D = NextDouble()
com/annimon/stream/operator/DoubleMapIndexed = Com.Annimon.Stream.Operator.DoubleMapIndexed
  <init>(Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfDouble;Lcom/annimon/stream/function/IndexedDoubleUnaryOperator;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIndexedIterator.OfDouble, Com.Annimon.Stream.Function.IIndexedDoubleUnaryOperator)
  hasNext()Z = HasNext
  nextDouble()D = NextDouble()
com/annimon/stream/operator/DoubleMapToInt = Com.Annimon.Stream.Operator.DoubleMapToInt
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoubleToIntFunction;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfDouble, Com.Annimon.Stream.Function.IDoubleToIntFunction)
  hasNext()Z = HasNext
  nextInt()I = NextInt()
com/annimon/stream/operator/DoubleMapToLong = Com.Annimon.Stream.Operator.DoubleMapToLong
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoubleToLongFunction;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfDouble, Com.Annimon.Stream.Function.IDoubleToLongFunction)
  hasNext()Z = HasNext
  nextLong()J = NextLong()
com/annimon/stream/operator/DoubleMapToObj = Com.Annimon.Stream.Operator.DoubleMapToObj
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoubleFunction;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfDouble, Com.Annimon.Stream.Function.IDoubleFunction)
  hasNext()Z = HasNext
  nextIteration()Ljava/lang/Object; = NextIteration()
com/annimon/stream/operator/DoublePeek = Com.Annimon.Stream.Operator.DoublePeek
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoubleConsumer;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfDouble, Com.Annimon.Stream.Function.IDoubleConsumer)
  hasNext()Z = HasNext
  nextDouble()D = NextDouble()
com/annimon/stream/operator/DoubleSample = Com.Annimon.Stream.Operator.DoubleSample
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;I)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfDouble, int)
  hasNext()Z = HasNext
  nextDouble()D = NextDouble()
com/annimon/stream/operator/DoubleScan = Com.Annimon.Stream.Operator.DoubleScan
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoubleBinaryOperator;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfDouble, Com.Annimon.Stream.Function.IDoubleBinaryOperator)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/DoubleScanIdentity = Com.Annimon.Stream.Operator.DoubleScanIdentity
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;DLcom/annimon/stream/function/DoubleBinaryOperator;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfDouble, double, Com.Annimon.Stream.Function.IDoubleBinaryOperator)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/DoubleSkip = Com.Annimon.Stream.Operator.DoubleSkip
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;J)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfDouble, long)
  hasNext()Z = HasNext
  nextDouble()D = NextDouble()
com/annimon/stream/operator/DoubleSorted = Com.Annimon.Stream.Operator.DoubleSorted
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfDouble)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/DoubleTakeUntil = Com.Annimon.Stream.Operator.DoubleTakeUntil
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoublePredicate;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfDouble, Com.Annimon.Stream.Function.IDoublePredicate)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/DoubleTakeWhile = Com.Annimon.Stream.Operator.DoubleTakeWhile
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfDouble;Lcom/annimon/stream/function/DoublePredicate;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfDouble, Com.Annimon.Stream.Function.IDoublePredicate)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/IntArray = Com.Annimon.Stream.Operator.IntArray
  <init>([I)V = .ctor(int[])
  hasNext()Z = HasNext
  nextInt()I = NextInt()
com/annimon/stream/operator/IntCodePoints = Com.Annimon.Stream.Operator.IntCodePoints
  <init>(Ljava/lang/CharSequence;)V = .ctor(Java.Lang.ICharSequence)
  hasNext()Z = HasNext
  nextInt()I = NextInt()
com/annimon/stream/operator/IntConcat = Com.Annimon.Stream.Operator.IntConcat
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfInt, Com.Annimon.Stream.Iterator.PrimitiveIterator.OfInt)
  hasNext()Z = HasNext
  nextInt()I = NextInt()
com/annimon/stream/operator/IntDropWhile = Com.Annimon.Stream.Operator.IntDropWhile
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntPredicate;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfInt, Com.Annimon.Stream.Function.IIntPredicate)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/IntFilter = Com.Annimon.Stream.Operator.IntFilter
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntPredicate;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfInt, Com.Annimon.Stream.Function.IIntPredicate)
  hasNext()Z = HasNext
  nextInt()I = NextInt()
com/annimon/stream/operator/IntFilterIndexed = Com.Annimon.Stream.Operator.IntFilterIndexed
  <init>(Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfInt;Lcom/annimon/stream/function/IndexedIntPredicate;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIndexedIterator.OfInt, Com.Annimon.Stream.Function.IIndexedIntPredicate)
  hasNext()Z = HasNext
  nextInt()I = NextInt()
com/annimon/stream/operator/IntFlatMap = Com.Annimon.Stream.Operator.IntFlatMap
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntFunction;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfInt, Com.Annimon.Stream.Function.IIntFunction)
  hasNext()Z = HasNext
  nextInt()I = NextInt()
com/annimon/stream/operator/IntGenerate = Com.Annimon.Stream.Operator.IntGenerate
  <init>(Lcom/annimon/stream/function/IntSupplier;)V = .ctor(Com.Annimon.Stream.Function.IIntSupplier)
  hasNext()Z = HasNext
  nextInt()I = NextInt()
com/annimon/stream/operator/IntIterate = Com.Annimon.Stream.Operator.IntIterate
  <init>(ILcom/annimon/stream/function/IntUnaryOperator;)V = .ctor(int, Com.Annimon.Stream.Function.IIntUnaryOperator)
  hasNext()Z = HasNext
  nextInt()I = NextInt()
com/annimon/stream/operator/IntLimit = Com.Annimon.Stream.Operator.IntLimit
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;J)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfInt, long)
  hasNext()Z = HasNext
  nextInt()I = NextInt()
com/annimon/stream/operator/IntMap = Com.Annimon.Stream.Operator.IntMap
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntUnaryOperator;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfInt, Com.Annimon.Stream.Function.IIntUnaryOperator)
  hasNext()Z = HasNext
  nextInt()I = NextInt()
com/annimon/stream/operator/IntMapIndexed = Com.Annimon.Stream.Operator.IntMapIndexed
  <init>(Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfInt;Lcom/annimon/stream/function/IntBinaryOperator;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIndexedIterator.OfInt, Com.Annimon.Stream.Function.IIntBinaryOperator)
  hasNext()Z = HasNext
  nextInt()I = NextInt()
com/annimon/stream/operator/IntMapToDouble = Com.Annimon.Stream.Operator.IntMapToDouble
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntToDoubleFunction;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfInt, Com.Annimon.Stream.Function.IIntToDoubleFunction)
  hasNext()Z = HasNext
  nextDouble()D = NextDouble()
com/annimon/stream/operator/IntMapToLong = Com.Annimon.Stream.Operator.IntMapToLong
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntToLongFunction;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfInt, Com.Annimon.Stream.Function.IIntToLongFunction)
  hasNext()Z = HasNext
  nextLong()J = NextLong()
com/annimon/stream/operator/IntMapToObj = Com.Annimon.Stream.Operator.IntMapToObj
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntFunction;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfInt, Com.Annimon.Stream.Function.IIntFunction)
  hasNext()Z = HasNext
  nextIteration()Ljava/lang/Object; = NextIteration()
com/annimon/stream/operator/IntPeek = Com.Annimon.Stream.Operator.IntPeek
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntConsumer;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfInt, Com.Annimon.Stream.Function.IIntConsumer)
  hasNext()Z = HasNext
  nextInt()I = NextInt()
com/annimon/stream/operator/IntRangeClosed = Com.Annimon.Stream.Operator.IntRangeClosed
  <init>(II)V = .ctor(int, int)
  hasNext()Z = HasNext
  nextInt()I = NextInt()
com/annimon/stream/operator/IntSample = Com.Annimon.Stream.Operator.IntSample
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;I)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfInt, int)
  hasNext()Z = HasNext
  nextInt()I = NextInt()
com/annimon/stream/operator/IntScan = Com.Annimon.Stream.Operator.IntScan
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntBinaryOperator;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfInt, Com.Annimon.Stream.Function.IIntBinaryOperator)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/IntScanIdentity = Com.Annimon.Stream.Operator.IntScanIdentity
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;ILcom/annimon/stream/function/IntBinaryOperator;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfInt, int, Com.Annimon.Stream.Function.IIntBinaryOperator)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/IntSkip = Com.Annimon.Stream.Operator.IntSkip
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;J)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfInt, long)
  hasNext()Z = HasNext
  nextInt()I = NextInt()
com/annimon/stream/operator/IntSorted = Com.Annimon.Stream.Operator.IntSorted
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfInt)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/IntTakeUntil = Com.Annimon.Stream.Operator.IntTakeUntil
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntPredicate;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfInt, Com.Annimon.Stream.Function.IIntPredicate)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/IntTakeWhile = Com.Annimon.Stream.Operator.IntTakeWhile
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfInt;Lcom/annimon/stream/function/IntPredicate;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfInt, Com.Annimon.Stream.Function.IIntPredicate)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/LongArray = Com.Annimon.Stream.Operator.LongArray
  <init>([J)V = .ctor(long[])
  hasNext()Z = HasNext
  nextLong()J = NextLong()
com/annimon/stream/operator/LongConcat = Com.Annimon.Stream.Operator.LongConcat
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfLong, Com.Annimon.Stream.Iterator.PrimitiveIterator.OfLong)
  hasNext()Z = HasNext
  nextLong()J = NextLong()
com/annimon/stream/operator/LongDropWhile = Com.Annimon.Stream.Operator.LongDropWhile
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongPredicate;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfLong, Com.Annimon.Stream.Function.ILongPredicate)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/LongFilter = Com.Annimon.Stream.Operator.LongFilter
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongPredicate;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfLong, Com.Annimon.Stream.Function.ILongPredicate)
  hasNext()Z = HasNext
  nextLong()J = NextLong()
com/annimon/stream/operator/LongFilterIndexed = Com.Annimon.Stream.Operator.LongFilterIndexed
  <init>(Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfLong;Lcom/annimon/stream/function/IndexedLongPredicate;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIndexedIterator.OfLong, Com.Annimon.Stream.Function.IIndexedLongPredicate)
  hasNext()Z = HasNext
  nextLong()J = NextLong()
com/annimon/stream/operator/LongFlatMap = Com.Annimon.Stream.Operator.LongFlatMap
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongFunction;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfLong, Com.Annimon.Stream.Function.ILongFunction)
  hasNext()Z = HasNext
  nextLong()J = NextLong()
com/annimon/stream/operator/LongGenerate = Com.Annimon.Stream.Operator.LongGenerate
  <init>(Lcom/annimon/stream/function/LongSupplier;)V = .ctor(Com.Annimon.Stream.Function.ILongSupplier)
  hasNext()Z = HasNext
  nextLong()J = NextLong()
com/annimon/stream/operator/LongIterate = Com.Annimon.Stream.Operator.LongIterate
  <init>(JLcom/annimon/stream/function/LongUnaryOperator;)V = .ctor(long, Com.Annimon.Stream.Function.ILongUnaryOperator)
  hasNext()Z = HasNext
  nextLong()J = NextLong()
com/annimon/stream/operator/LongLimit = Com.Annimon.Stream.Operator.LongLimit
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;J)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfLong, long)
  hasNext()Z = HasNext
  nextLong()J = NextLong()
com/annimon/stream/operator/LongMap = Com.Annimon.Stream.Operator.LongMap
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongUnaryOperator;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfLong, Com.Annimon.Stream.Function.ILongUnaryOperator)
  hasNext()Z = HasNext
  nextLong()J = NextLong()
com/annimon/stream/operator/LongMapIndexed = Com.Annimon.Stream.Operator.LongMapIndexed
  <init>(Lcom/annimon/stream/iterator/PrimitiveIndexedIterator$OfLong;Lcom/annimon/stream/function/IndexedLongUnaryOperator;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIndexedIterator.OfLong, Com.Annimon.Stream.Function.IIndexedLongUnaryOperator)
  hasNext()Z = HasNext
  nextLong()J = NextLong()
com/annimon/stream/operator/LongMapToDouble = Com.Annimon.Stream.Operator.LongMapToDouble
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongToDoubleFunction;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfLong, Com.Annimon.Stream.Function.ILongToDoubleFunction)
  hasNext()Z = HasNext
  nextDouble()D = NextDouble()
com/annimon/stream/operator/LongMapToInt = Com.Annimon.Stream.Operator.LongMapToInt
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongToIntFunction;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfLong, Com.Annimon.Stream.Function.ILongToIntFunction)
  hasNext()Z = HasNext
  nextInt()I = NextInt()
com/annimon/stream/operator/LongMapToObj = Com.Annimon.Stream.Operator.LongMapToObj
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongFunction;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfLong, Com.Annimon.Stream.Function.ILongFunction)
  hasNext()Z = HasNext
  nextIteration()Ljava/lang/Object; = NextIteration()
com/annimon/stream/operator/LongPeek = Com.Annimon.Stream.Operator.LongPeek
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongConsumer;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfLong, Com.Annimon.Stream.Function.ILongConsumer)
  hasNext()Z = HasNext
  nextLong()J = NextLong()
com/annimon/stream/operator/LongRangeClosed = Com.Annimon.Stream.Operator.LongRangeClosed
  <init>(JJ)V = .ctor(long, long)
  hasNext()Z = HasNext
  nextLong()J = NextLong()
com/annimon/stream/operator/LongSample = Com.Annimon.Stream.Operator.LongSample
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;I)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfLong, int)
  hasNext()Z = HasNext
  nextLong()J = NextLong()
com/annimon/stream/operator/LongScan = Com.Annimon.Stream.Operator.LongScan
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongBinaryOperator;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfLong, Com.Annimon.Stream.Function.ILongBinaryOperator)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/LongScanIdentity = Com.Annimon.Stream.Operator.LongScanIdentity
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;JLcom/annimon/stream/function/LongBinaryOperator;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfLong, long, Com.Annimon.Stream.Function.ILongBinaryOperator)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/LongSkip = Com.Annimon.Stream.Operator.LongSkip
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;J)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfLong, long)
  hasNext()Z = HasNext
  nextLong()J = NextLong()
com/annimon/stream/operator/LongSorted = Com.Annimon.Stream.Operator.LongSorted
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfLong)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/LongTakeUntil = Com.Annimon.Stream.Operator.LongTakeUntil
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongPredicate;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfLong, Com.Annimon.Stream.Function.ILongPredicate)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/LongTakeWhile = Com.Annimon.Stream.Operator.LongTakeWhile
  <init>(Lcom/annimon/stream/iterator/PrimitiveIterator$OfLong;Lcom/annimon/stream/function/LongPredicate;)V = .ctor(Com.Annimon.Stream.Iterator.PrimitiveIterator.OfLong, Com.Annimon.Stream.Function.ILongPredicate)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/ObjArray = Com.Annimon.Stream.Operator.ObjArray
  <init>([Ljava/lang/Object;)V = .ctor(Java.Lang.Object[])
  hasNext()Z = HasNext
  nextIteration()Ljava/lang/Object; = NextIteration()
com/annimon/stream/operator/ObjChunkBy = Com.Annimon.Stream.Operator.ObjChunkBy
  <init>(Ljava/util/Iterator;Lcom/annimon/stream/function/Function;)V = .ctor(Java.Util.IIterator, Com.Annimon.Stream.Function.IFunction)
  hasNext()Z = HasNext
  nextIteration()Ljava/util/List; = NextIteration()
com/annimon/stream/operator/ObjConcat = Com.Annimon.Stream.Operator.ObjConcat
  <init>(Ljava/util/Iterator;Ljava/util/Iterator;)V = .ctor(Java.Util.IIterator, Java.Util.IIterator)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/ObjDistinct = Com.Annimon.Stream.Operator.ObjDistinct
  <init>(Ljava/util/Iterator;)V = .ctor(Java.Util.IIterator)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/ObjDistinctBy = Com.Annimon.Stream.Operator.ObjDistinctBy
  <init>(Ljava/util/Iterator;Lcom/annimon/stream/function/Function;)V = .ctor(Java.Util.IIterator, Com.Annimon.Stream.Function.IFunction)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/ObjDropWhile = Com.Annimon.Stream.Operator.ObjDropWhile
  <init>(Ljava/util/Iterator;Lcom/annimon/stream/function/Predicate;)V = .ctor(Java.Util.IIterator, Com.Annimon.Stream.Function.IPredicate)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/ObjDropWhileIndexed = Com.Annimon.Stream.Operator.ObjDropWhileIndexed
  <init>(Lcom/annimon/stream/iterator/IndexedIterator;Lcom/annimon/stream/function/IndexedPredicate;)V = .ctor(Com.Annimon.Stream.Iterator.IndexedIterator, Com.Annimon.Stream.Function.IIndexedPredicate)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/ObjFilter = Com.Annimon.Stream.Operator.ObjFilter
  <init>(Ljava/util/Iterator;Lcom/annimon/stream/function/Predicate;)V = .ctor(Java.Util.IIterator, Com.Annimon.Stream.Function.IPredicate)
  hasNext()Z = HasNext
  next()Ljava/lang/Object; = Next()
  remove()V = Remove()
com/annimon/stream/operator/ObjFilterIndexed = Com.Annimon.Stream.Operator.ObjFilterIndexed
  <init>(Lcom/annimon/stream/iterator/IndexedIterator;Lcom/annimon/stream/function/IndexedPredicate;)V = .ctor(Com.Annimon.Stream.Iterator.IndexedIterator, Com.Annimon.Stream.Function.IIndexedPredicate)
  hasNext()Z = HasNext
  next()Ljava/lang/Object; = Next()
  remove()V = Remove()
com/annimon/stream/operator/ObjFlatMap = Com.Annimon.Stream.Operator.ObjFlatMap
  <init>(Ljava/util/Iterator;Lcom/annimon/stream/function/Function;)V = .ctor(Java.Util.IIterator, Com.Annimon.Stream.Function.IFunction)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/ObjFlatMapToDouble = Com.Annimon.Stream.Operator.ObjFlatMapToDouble
  <init>(Ljava/util/Iterator;Lcom/annimon/stream/function/Function;)V = .ctor(Java.Util.IIterator, Com.Annimon.Stream.Function.IFunction)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/ObjFlatMapToInt = Com.Annimon.Stream.Operator.ObjFlatMapToInt
  <init>(Ljava/util/Iterator;Lcom/annimon/stream/function/Function;)V = .ctor(Java.Util.IIterator, Com.Annimon.Stream.Function.IFunction)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/ObjFlatMapToLong = Com.Annimon.Stream.Operator.ObjFlatMapToLong
  <init>(Ljava/util/Iterator;Lcom/annimon/stream/function/Function;)V = .ctor(Java.Util.IIterator, Com.Annimon.Stream.Function.IFunction)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/ObjGenerate = Com.Annimon.Stream.Operator.ObjGenerate
  <init>(Lcom/annimon/stream/function/Supplier;)V = .ctor(Com.Annimon.Stream.Function.ISupplier)
  hasNext()Z = HasNext
  nextIteration()Ljava/lang/Object; = NextIteration()
com/annimon/stream/operator/ObjIterate = Com.Annimon.Stream.Operator.ObjIterate
  <init>(Ljava/lang/Object;Lcom/annimon/stream/function/UnaryOperator;)V = .ctor(Java.Lang.Object, Com.Annimon.Stream.Function.IUnaryOperator)
  hasNext()Z = HasNext
  nextIteration()Ljava/lang/Object; = NextIteration()
com/annimon/stream/operator/ObjLimit = Com.Annimon.Stream.Operator.ObjLimit
  <init>(Ljava/util/Iterator;J)V = .ctor(Java.Util.IIterator, long)
  hasNext()Z = HasNext
  nextIteration()Ljava/lang/Object; = NextIteration()
com/annimon/stream/operator/ObjMap = Com.Annimon.Stream.Operator.ObjMap
  <init>(Ljava/util/Iterator;Lcom/annimon/stream/function/Function;)V = .ctor(Java.Util.IIterator, Com.Annimon.Stream.Function.IFunction)
  hasNext()Z = HasNext
  nextIteration()Ljava/lang/Object; = NextIteration()
com/annimon/stream/operator/ObjMapIndexed = Com.Annimon.Stream.Operator.ObjMapIndexed
  <init>(Lcom/annimon/stream/iterator/IndexedIterator;Lcom/annimon/stream/function/IndexedFunction;)V = .ctor(Com.Annimon.Stream.Iterator.IndexedIterator, Com.Annimon.Stream.Function.IIndexedFunction)
  hasNext()Z = HasNext
  nextIteration()Ljava/lang/Object; = NextIteration()
com/annimon/stream/operator/ObjMapToDouble = Com.Annimon.Stream.Operator.ObjMapToDouble
  <init>(Ljava/util/Iterator;Lcom/annimon/stream/function/ToDoubleFunction;)V = .ctor(Java.Util.IIterator, Com.Annimon.Stream.Function.IToDoubleFunction)
  hasNext()Z = HasNext
  nextDouble()D = NextDouble()
com/annimon/stream/operator/ObjMapToInt = Com.Annimon.Stream.Operator.ObjMapToInt
  <init>(Ljava/util/Iterator;Lcom/annimon/stream/function/ToIntFunction;)V = .ctor(Java.Util.IIterator, Com.Annimon.Stream.Function.IToIntFunction)
  hasNext()Z = HasNext
  nextInt()I = NextInt()
com/annimon/stream/operator/ObjMapToLong = Com.Annimon.Stream.Operator.ObjMapToLong
  <init>(Ljava/util/Iterator;Lcom/annimon/stream/function/ToLongFunction;)V = .ctor(Java.Util.IIterator, Com.Annimon.Stream.Function.IToLongFunction)
  hasNext()Z = HasNext
  nextLong()J = NextLong()
com/annimon/stream/operator/ObjMerge = Com.Annimon.Stream.Operator.ObjMerge
  <init>(Ljava/util/Iterator;Ljava/util/Iterator;Lcom/annimon/stream/function/BiFunction;)V = .ctor(Java.Util.IIterator, Java.Util.IIterator, Com.Annimon.Stream.Function.IBiFunction)
  hasNext()Z = HasNext
  nextIteration()Ljava/lang/Object; = NextIteration()
com/annimon/stream/operator/ObjPeek = Com.Annimon.Stream.Operator.ObjPeek
  <init>(Ljava/util/Iterator;Lcom/annimon/stream/function/Consumer;)V = .ctor(Java.Util.IIterator, Com.Annimon.Stream.Function.IConsumer)
  hasNext()Z = HasNext
  nextIteration()Ljava/lang/Object; = NextIteration()
com/annimon/stream/operator/ObjScan = Com.Annimon.Stream.Operator.ObjScan
  <init>(Ljava/util/Iterator;Lcom/annimon/stream/function/BiFunction;)V = .ctor(Java.Util.IIterator, Com.Annimon.Stream.Function.IBiFunction)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/ObjScanIdentity = Com.Annimon.Stream.Operator.ObjScanIdentity
  <init>(Ljava/util/Iterator;Ljava/lang/Object;Lcom/annimon/stream/function/BiFunction;)V = .ctor(Java.Util.IIterator, Java.Lang.Object, Com.Annimon.Stream.Function.IBiFunction)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/ObjSkip = Com.Annimon.Stream.Operator.ObjSkip
  <init>(Ljava/util/Iterator;J)V = .ctor(Java.Util.IIterator, long)
  hasNext()Z = HasNext
  nextIteration()Ljava/lang/Object; = NextIteration()
com/annimon/stream/operator/ObjSlidingWindow = Com.Annimon.Stream.Operator.ObjSlidingWindow
  <init>(Ljava/util/Iterator;II)V = .ctor(Java.Util.IIterator, int, int)
  hasNext()Z = HasNext
  nextIteration()Ljava/util/List; = NextIteration()
com/annimon/stream/operator/ObjSorted = Com.Annimon.Stream.Operator.ObjSorted
  <init>(Ljava/util/Iterator;Ljava/util/Comparator;)V = .ctor(Java.Util.IIterator, Java.Util.IComparator)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/ObjTakeUntil = Com.Annimon.Stream.Operator.ObjTakeUntil
  <init>(Ljava/util/Iterator;Lcom/annimon/stream/function/Predicate;)V = .ctor(Java.Util.IIterator, Com.Annimon.Stream.Function.IPredicate)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/ObjTakeUntilIndexed = Com.Annimon.Stream.Operator.ObjTakeUntilIndexed
  <init>(Lcom/annimon/stream/iterator/IndexedIterator;Lcom/annimon/stream/function/IndexedPredicate;)V = .ctor(Com.Annimon.Stream.Iterator.IndexedIterator, Com.Annimon.Stream.Function.IIndexedPredicate)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/ObjTakeWhile = Com.Annimon.Stream.Operator.ObjTakeWhile
  <init>(Ljava/util/Iterator;Lcom/annimon/stream/function/Predicate;)V = .ctor(Java.Util.IIterator, Com.Annimon.Stream.Function.IPredicate)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/ObjTakeWhileIndexed = Com.Annimon.Stream.Operator.ObjTakeWhileIndexed
  <init>(Lcom/annimon/stream/iterator/IndexedIterator;Lcom/annimon/stream/function/IndexedPredicate;)V = .ctor(Com.Annimon.Stream.Iterator.IndexedIterator, Com.Annimon.Stream.Function.IIndexedPredicate)
  nextIteration()V = NextIteration()
com/annimon/stream/operator/ObjZip = Com.Annimon.Stream.Operator.ObjZip
  <init>(Ljava/util/Iterator;Ljava/util/Iterator;Lcom/annimon/stream/function/BiFunction;)V = .ctor(Java.Util.IIterator, Java.Util.IIterator, Com.Annimon.Stream.Function.IBiFunction)
  hasNext()Z = HasNext
  nextIteration()Ljava/lang/Object; = NextIteration()
com/annimon/stream/Optional = Com.Annimon.Stream.Optional
  isEmpty()Z = IsEmpty
  isPresent()Z = IsPresent
  custom(Lcom/annimon/stream/function/Function;)Ljava/lang/Object; = Custom(Com.Annimon.Stream.Function.IFunction)
  empty()Lcom/annimon/stream/Optional; = Empty()
  executeIfAbsent(Ljava/lang/Runnable;)Lcom/annimon/stream/Optional; = ExecuteIfAbsent(Java.Lang.IRunnable)
  executeIfPresent(Lcom/annimon/stream/function/Consumer;)Lcom/annimon/stream/Optional; = ExecuteIfPresent(Com.Annimon.Stream.Function.IConsumer)
  filter(Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/Optional; = Filter(Com.Annimon.Stream.Function.IPredicate)
  filterNot(Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/Optional; = FilterNot(Com.Annimon.Stream.Function.IPredicate)
  flatMap(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Optional; = FlatMap(Com.Annimon.Stream.Function.IFunction)
  get()Ljava/lang/Object; = Get()
  ifPresent(Lcom/annimon/stream/function/Consumer;)V = IfPresent(Com.Annimon.Stream.Function.IConsumer)
  ifPresentOrElse(Lcom/annimon/stream/function/Consumer;Ljava/lang/Runnable;)V = IfPresentOrElse(Com.Annimon.Stream.Function.IConsumer, Java.Lang.IRunnable)
  map(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Optional; = Map(Com.Annimon.Stream.Function.IFunction)
  mapToBoolean(Lcom/annimon/stream/function/ToBooleanFunction;)Lcom/annimon/stream/OptionalBoolean; = MapToBoolean(Com.Annimon.Stream.Function.IToBooleanFunction)
  mapToDouble(Lcom/annimon/stream/function/ToDoubleFunction;)Lcom/annimon/stream/OptionalDouble; = MapToDouble(Com.Annimon.Stream.Function.IToDoubleFunction)
  mapToInt(Lcom/annimon/stream/function/ToIntFunction;)Lcom/annimon/stream/OptionalInt; = MapToInt(Com.Annimon.Stream.Function.IToIntFunction)
  mapToLong(Lcom/annimon/stream/function/ToLongFunction;)Lcom/annimon/stream/OptionalLong; = MapToLong(Com.Annimon.Stream.Function.IToLongFunction)
  of(Ljava/lang/Object;)Lcom/annimon/stream/Optional; = Of(Java.Lang.Object)
  ofNullable(Ljava/lang/Object;)Lcom/annimon/stream/Optional; = OfNullable(Java.Lang.Object)
  or(Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/Optional; = Or(Com.Annimon.Stream.Function.ISupplier)
  orElse(Ljava/lang/Object;)Ljava/lang/Object; = OrElse(Java.Lang.Object)
  orElseGet(Lcom/annimon/stream/function/Supplier;)Ljava/lang/Object; = OrElseGet(Com.Annimon.Stream.Function.ISupplier)
  orElseThrow()Ljava/lang/Object; = OrElseThrow()
  orElseThrow(Lcom/annimon/stream/function/Supplier;)Ljava/lang/Object; = OrElseThrow(Com.Annimon.Stream.Function.ISupplier)
  select(Ljava/lang/Class;)Lcom/annimon/stream/Optional; = Select(Java.Lang.Class)
  stream()Lcom/annimon/stream/Stream; = Stream()
com/annimon/stream/OptionalBoolean = Com.Annimon.Stream.OptionalBoolean
  getAsBoolean()Z = AsBoolean
  isEmpty()Z = IsEmpty
  isPresent()Z = IsPresent
  custom(Lcom/annimon/stream/function/Function;)Ljava/lang/Object; = Custom(Com.Annimon.Stream.Function.IFunction)
  empty()Lcom/annimon/stream/OptionalBoolean; = Empty()
  executeIfAbsent(Ljava/lang/Runnable;)Lcom/annimon/stream/OptionalBoolean; = ExecuteIfAbsent(Java.Lang.IRunnable)
  executeIfPresent(Lcom/annimon/stream/function/BooleanConsumer;)Lcom/annimon/stream/OptionalBoolean; = ExecuteIfPresent(Com.Annimon.Stream.Function.IBooleanConsumer)
  filter(Lcom/annimon/stream/function/BooleanPredicate;)Lcom/annimon/stream/OptionalBoolean; = Filter(Com.Annimon.Stream.Function.IBooleanPredicate)
  filterNot(Lcom/annimon/stream/function/BooleanPredicate;)Lcom/annimon/stream/OptionalBoolean; = FilterNot(Com.Annimon.Stream.Function.IBooleanPredicate)
  ifPresent(Lcom/annimon/stream/function/BooleanConsumer;)V = IfPresent(Com.Annimon.Stream.Function.IBooleanConsumer)
  ifPresentOrElse(Lcom/annimon/stream/function/BooleanConsumer;Ljava/lang/Runnable;)V = IfPresentOrElse(Com.Annimon.Stream.Function.IBooleanConsumer, Java.Lang.IRunnable)
  map(Lcom/annimon/stream/function/BooleanPredicate;)Lcom/annimon/stream/OptionalBoolean; = Map(Com.Annimon.Stream.Function.IBooleanPredicate)
  mapToObj(Lcom/annimon/stream/function/BooleanFunction;)Lcom/annimon/stream/Optional; = MapToObj(Com.Annimon.Stream.Function.IBooleanFunction)
  of(Z)Lcom/annimon/stream/OptionalBoolean; = Of(bool)
  ofNullable(Ljava/lang/Boolean;)Lcom/annimon/stream/OptionalBoolean; = OfNullable(Java.Lang.Boolean)
  or(Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/OptionalBoolean; = Or(Com.Annimon.Stream.Function.ISupplier)
  orElse(Z)Z = OrElse(bool)
  orElseGet(Lcom/annimon/stream/function/BooleanSupplier;)Z = OrElseGet(Com.Annimon.Stream.Function.IBooleanSupplier)
  orElseThrow()Z = OrElseThrow()
  orElseThrow(Lcom/annimon/stream/function/Supplier;)Z = OrElseThrow(Com.Annimon.Stream.Function.ISupplier)
com/annimon/stream/OptionalDouble = Com.Annimon.Stream.OptionalDouble
  getAsDouble()D = AsDouble
  isEmpty()Z = IsEmpty
  isPresent()Z = IsPresent
  custom(Lcom/annimon/stream/function/Function;)Ljava/lang/Object; = Custom(Com.Annimon.Stream.Function.IFunction)
  empty()Lcom/annimon/stream/OptionalDouble; = Empty()
  executeIfAbsent(Ljava/lang/Runnable;)Lcom/annimon/stream/OptionalDouble; = ExecuteIfAbsent(Java.Lang.IRunnable)
  executeIfPresent(Lcom/annimon/stream/function/DoubleConsumer;)Lcom/annimon/stream/OptionalDouble; = ExecuteIfPresent(Com.Annimon.Stream.Function.IDoubleConsumer)
  filter(Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/OptionalDouble; = Filter(Com.Annimon.Stream.Function.IDoublePredicate)
  filterNot(Lcom/annimon/stream/function/DoublePredicate;)Lcom/annimon/stream/OptionalDouble; = FilterNot(Com.Annimon.Stream.Function.IDoublePredicate)
  ifPresent(Lcom/annimon/stream/function/DoubleConsumer;)V = IfPresent(Com.Annimon.Stream.Function.IDoubleConsumer)
  ifPresentOrElse(Lcom/annimon/stream/function/DoubleConsumer;Ljava/lang/Runnable;)V = IfPresentOrElse(Com.Annimon.Stream.Function.IDoubleConsumer, Java.Lang.IRunnable)
  map(Lcom/annimon/stream/function/DoubleUnaryOperator;)Lcom/annimon/stream/OptionalDouble; = Map(Com.Annimon.Stream.Function.IDoubleUnaryOperator)
  mapToInt(Lcom/annimon/stream/function/DoubleToIntFunction;)Lcom/annimon/stream/OptionalInt; = MapToInt(Com.Annimon.Stream.Function.IDoubleToIntFunction)
  mapToLong(Lcom/annimon/stream/function/DoubleToLongFunction;)Lcom/annimon/stream/OptionalLong; = MapToLong(Com.Annimon.Stream.Function.IDoubleToLongFunction)
  mapToObj(Lcom/annimon/stream/function/DoubleFunction;)Lcom/annimon/stream/Optional; = MapToObj(Com.Annimon.Stream.Function.IDoubleFunction)
  of(D)Lcom/annimon/stream/OptionalDouble; = Of(double)
  ofNullable(Ljava/lang/Double;)Lcom/annimon/stream/OptionalDouble; = OfNullable(Java.Lang.Double)
  or(Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/OptionalDouble; = Or(Com.Annimon.Stream.Function.ISupplier)
  orElse(D)D = OrElse(double)
  orElseGet(Lcom/annimon/stream/function/DoubleSupplier;)D = OrElseGet(Com.Annimon.Stream.Function.IDoubleSupplier)
  orElseThrow()D = OrElseThrow()
  orElseThrow(Lcom/annimon/stream/function/Supplier;)D = OrElseThrow(Com.Annimon.Stream.Function.ISupplier)
  stream()Lcom/annimon/stream/DoubleStream; = Stream()
com/annimon/stream/OptionalInt = Com.Annimon.Stream.OptionalInt
  getAsInt()I = AsInt
  isEmpty()Z = IsEmpty
  isPresent()Z = IsPresent
  custom(Lcom/annimon/stream/function/Function;)Ljava/lang/Object; = Custom(Com.Annimon.Stream.Function.IFunction)
  empty()Lcom/annimon/stream/OptionalInt; = Empty()
  executeIfAbsent(Ljava/lang/Runnable;)Lcom/annimon/stream/OptionalInt; = ExecuteIfAbsent(Java.Lang.IRunnable)
  executeIfPresent(Lcom/annimon/stream/function/IntConsumer;)Lcom/annimon/stream/OptionalInt; = ExecuteIfPresent(Com.Annimon.Stream.Function.IIntConsumer)
  filter(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/OptionalInt; = Filter(Com.Annimon.Stream.Function.IIntPredicate)
  filterNot(Lcom/annimon/stream/function/IntPredicate;)Lcom/annimon/stream/OptionalInt; = FilterNot(Com.Annimon.Stream.Function.IIntPredicate)
  ifPresent(Lcom/annimon/stream/function/IntConsumer;)V = IfPresent(Com.Annimon.Stream.Function.IIntConsumer)
  ifPresentOrElse(Lcom/annimon/stream/function/IntConsumer;Ljava/lang/Runnable;)V = IfPresentOrElse(Com.Annimon.Stream.Function.IIntConsumer, Java.Lang.IRunnable)
  map(Lcom/annimon/stream/function/IntUnaryOperator;)Lcom/annimon/stream/OptionalInt; = Map(Com.Annimon.Stream.Function.IIntUnaryOperator)
  mapToDouble(Lcom/annimon/stream/function/IntToDoubleFunction;)Lcom/annimon/stream/OptionalDouble; = MapToDouble(Com.Annimon.Stream.Function.IIntToDoubleFunction)
  mapToLong(Lcom/annimon/stream/function/IntToLongFunction;)Lcom/annimon/stream/OptionalLong; = MapToLong(Com.Annimon.Stream.Function.IIntToLongFunction)
  mapToObj(Lcom/annimon/stream/function/IntFunction;)Lcom/annimon/stream/Optional; = MapToObj(Com.Annimon.Stream.Function.IIntFunction)
  of(I)Lcom/annimon/stream/OptionalInt; = Of(int)
  ofNullable(Ljava/lang/Integer;)Lcom/annimon/stream/OptionalInt; = OfNullable(Java.Lang.Integer)
  or(Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/OptionalInt; = Or(Com.Annimon.Stream.Function.ISupplier)
  orElse(I)I = OrElse(int)
  orElseGet(Lcom/annimon/stream/function/IntSupplier;)I = OrElseGet(Com.Annimon.Stream.Function.IIntSupplier)
  orElseThrow()I = OrElseThrow()
  orElseThrow(Lcom/annimon/stream/function/Supplier;)I = OrElseThrow(Com.Annimon.Stream.Function.ISupplier)
  stream()Lcom/annimon/stream/IntStream; = Stream()
com/annimon/stream/OptionalLong = Com.Annimon.Stream.OptionalLong
  getAsLong()J = AsLong
  isEmpty()Z = IsEmpty
  isPresent()Z = IsPresent
  custom(Lcom/annimon/stream/function/Function;)Ljava/lang/Object; = Custom(Com.Annimon.Stream.Function.IFunction)
  empty()Lcom/annimon/stream/OptionalLong; = Empty()
  executeIfAbsent(Ljava/lang/Runnable;)Lcom/annimon/stream/OptionalLong; = ExecuteIfAbsent(Java.Lang.IRunnable)
  executeIfPresent(Lcom/annimon/stream/function/LongConsumer;)Lcom/annimon/stream/OptionalLong; = ExecuteIfPresent(Com.Annimon.Stream.Function.ILongConsumer)
  filter(Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/OptionalLong; = Filter(Com.Annimon.Stream.Function.ILongPredicate)
  filterNot(Lcom/annimon/stream/function/LongPredicate;)Lcom/annimon/stream/OptionalLong; = FilterNot(Com.Annimon.Stream.Function.ILongPredicate)
  ifPresent(Lcom/annimon/stream/function/LongConsumer;)V = IfPresent(Com.Annimon.Stream.Function.ILongConsumer)
  ifPresentOrElse(Lcom/annimon/stream/function/LongConsumer;Ljava/lang/Runnable;)V = IfPresentOrElse(Com.Annimon.Stream.Function.ILongConsumer, Java.Lang.IRunnable)
  map(Lcom/annimon/stream/function/LongUnaryOperator;)Lcom/annimon/stream/OptionalLong; = Map(Com.Annimon.Stream.Function.ILongUnaryOperator)
  mapToInt(Lcom/annimon/stream/function/LongToIntFunction;)Lcom/annimon/stream/OptionalInt; = MapToInt(Com.Annimon.Stream.Function.ILongToIntFunction)
  mapToObj(Lcom/annimon/stream/function/LongFunction;)Lcom/annimon/stream/Optional; = MapToObj(Com.Annimon.Stream.Function.ILongFunction)
  of(J)Lcom/annimon/stream/OptionalLong; = Of(long)
  ofNullable(Ljava/lang/Long;)Lcom/annimon/stream/OptionalLong; = OfNullable(Java.Lang.Long)
  or(Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/OptionalLong; = Or(Com.Annimon.Stream.Function.ISupplier)
  orElse(J)J = OrElse(long)
  orElseGet(Lcom/annimon/stream/function/LongSupplier;)J = OrElseGet(Com.Annimon.Stream.Function.ILongSupplier)
  orElseThrow()J = OrElseThrow()
  orElseThrow(Lcom/annimon/stream/function/Supplier;)J = OrElseThrow(Com.Annimon.Stream.Function.ISupplier)
  stream()Lcom/annimon/stream/LongStream; = Stream()
com/annimon/stream/RandomCompat = Com.Annimon.Stream.RandomCompat
  <init>()V = .ctor()
  <init>(J)V = .ctor(long)
  <init>(Ljava/util/Random;)V = .ctor(Java.Util.Random)
  getRandom()Ljava/util/Random; = Random
  doubles()Lcom/annimon/stream/DoubleStream; = Doubles()
  doubles(DD)Lcom/annimon/stream/DoubleStream; = Doubles(double, double)
  doubles(J)Lcom/annimon/stream/DoubleStream; = Doubles(long)
  doubles(JDD)Lcom/annimon/stream/DoubleStream; = Doubles(long, double, double)
  ints()Lcom/annimon/stream/IntStream; = Ints()
  ints(II)Lcom/annimon/stream/IntStream; = Ints(int, int)
  ints(J)Lcom/annimon/stream/IntStream; = Ints(long)
  ints(JII)Lcom/annimon/stream/IntStream; = Ints(long, int, int)
  longs()Lcom/annimon/stream/LongStream; = Longs()
  longs(J)Lcom/annimon/stream/LongStream; = Longs(long)
  longs(JJ)Lcom/annimon/stream/LongStream; = Longs(long, long)
  longs(JJJ)Lcom/annimon/stream/LongStream; = Longs(long, long, long)
com/annimon/stream/Stream = Com.Annimon.Stream.Stream
  allMatch(Lcom/annimon/stream/function/Predicate;)Z = AllMatch(Com.Annimon.Stream.Function.IPredicate)
  anyMatch(Lcom/annimon/stream/function/Predicate;)Z = AnyMatch(Com.Annimon.Stream.Function.IPredicate)
  chunkBy(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Stream; = ChunkBy(Com.Annimon.Stream.Function.IFunction)
  close()V = Close()
  collect(Lcom/annimon/stream/Collector;)Ljava/lang/Object; = Collect(Com.Annimon.Stream.ICollector)
  collect(Lcom/annimon/stream/function/Supplier;Lcom/annimon/stream/function/BiConsumer;)Ljava/lang/Object; = Collect(Com.Annimon.Stream.Function.ISupplier, Com.Annimon.Stream.Function.IBiConsumer)
  concat(Lcom/annimon/stream/Stream;Lcom/annimon/stream/Stream;)Lcom/annimon/stream/Stream; = Concat(Com.Annimon.Stream.Stream, Com.Annimon.Stream.Stream)
  concat(Ljava/util/Iterator;Ljava/util/Iterator;)Lcom/annimon/stream/Stream; = Concat(Java.Util.IIterator, Java.Util.IIterator)
  count()J = Count()
  custom(Lcom/annimon/stream/function/Function;)Ljava/lang/Object; = Custom(Com.Annimon.Stream.Function.IFunction)
  distinct()Lcom/annimon/stream/Stream; = Distinct()
  distinctBy(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Stream; = DistinctBy(Com.Annimon.Stream.Function.IFunction)
  dropWhile(Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/Stream; = DropWhile(Com.Annimon.Stream.Function.IPredicate)
  dropWhileIndexed(Lcom/annimon/stream/function/IndexedPredicate;)Lcom/annimon/stream/Stream; = DropWhileIndexed(Com.Annimon.Stream.Function.IIndexedPredicate)
  dropWhileIndexed(IILcom/annimon/stream/function/IndexedPredicate;)Lcom/annimon/stream/Stream; = DropWhileIndexed(int, int, Com.Annimon.Stream.Function.IIndexedPredicate)
  empty()Lcom/annimon/stream/Stream; = Empty()
  equalsOnly(Ljava/lang/Object;)Lcom/annimon/stream/Stream; = EqualsOnly(Java.Lang.Object)
  filter(Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/Stream; = Filter(Com.Annimon.Stream.Function.IPredicate)
  filterIndexed(Lcom/annimon/stream/function/IndexedPredicate;)Lcom/annimon/stream/Stream; = FilterIndexed(Com.Annimon.Stream.Function.IIndexedPredicate)
  filterIndexed(IILcom/annimon/stream/function/IndexedPredicate;)Lcom/annimon/stream/Stream; = FilterIndexed(int, int, Com.Annimon.Stream.Function.IIndexedPredicate)
  filterNot(Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/Stream; = FilterNot(Com.Annimon.Stream.Function.IPredicate)
  findFirst()Lcom/annimon/stream/Optional; = FindFirst()
  findIndexed(Lcom/annimon/stream/function/IndexedPredicate;)Lcom/annimon/stream/Optional; = FindIndexed(Com.Annimon.Stream.Function.IIndexedPredicate)
  findIndexed(IILcom/annimon/stream/function/IndexedPredicate;)Lcom/annimon/stream/Optional; = FindIndexed(int, int, Com.Annimon.Stream.Function.IIndexedPredicate)
  findLast()Lcom/annimon/stream/Optional; = FindLast()
  findSingle()Lcom/annimon/stream/Optional; = FindSingle()
  flatMap(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Stream; = FlatMap(Com.Annimon.Stream.Function.IFunction)
  flatMapToDouble(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/DoubleStream; = FlatMapToDouble(Com.Annimon.Stream.Function.IFunction)
  flatMapToInt(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/IntStream; = FlatMapToInt(Com.Annimon.Stream.Function.IFunction)
  flatMapToLong(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/LongStream; = FlatMapToLong(Com.Annimon.Stream.Function.IFunction)
  forEach(Lcom/annimon/stream/function/Consumer;)V = ForEach(Com.Annimon.Stream.Function.IConsumer)
  forEachIndexed(Lcom/annimon/stream/function/IndexedConsumer;)V = ForEachIndexed(Com.Annimon.Stream.Function.IIndexedConsumer)
  forEachIndexed(IILcom/annimon/stream/function/IndexedConsumer;)V = ForEachIndexed(int, int, Com.Annimon.Stream.Function.IIndexedConsumer)
  generate(Lcom/annimon/stream/function/Supplier;)Lcom/annimon/stream/Stream; = Generate(Com.Annimon.Stream.Function.ISupplier)
  groupBy(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Stream; = GroupBy(Com.Annimon.Stream.Function.IFunction)
  indexed()Lcom/annimon/stream/Stream; = Indexed()
  indexed(II)Lcom/annimon/stream/Stream; = Indexed(int, int)
  iterate(Ljava/lang/Object;Lcom/annimon/stream/function/Predicate;Lcom/annimon/stream/function/UnaryOperator;)Lcom/annimon/stream/Stream; = Iterate(Java.Lang.Object, Com.Annimon.Stream.Function.IPredicate, Com.Annimon.Stream.Function.IUnaryOperator)
  iterate(Ljava/lang/Object;Lcom/annimon/stream/function/UnaryOperator;)Lcom/annimon/stream/Stream; = Iterate(Java.Lang.Object, Com.Annimon.Stream.Function.IUnaryOperator)
  iterator()Ljava/util/Iterator; = Iterator()
  limit(J)Lcom/annimon/stream/Stream; = Limit(long)
  map(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Stream; = Map(Com.Annimon.Stream.Function.IFunction)
  mapIndexed(Lcom/annimon/stream/function/IndexedFunction;)Lcom/annimon/stream/Stream; = MapIndexed(Com.Annimon.Stream.Function.IIndexedFunction)
  mapIndexed(IILcom/annimon/stream/function/IndexedFunction;)Lcom/annimon/stream/Stream; = MapIndexed(int, int, Com.Annimon.Stream.Function.IIndexedFunction)
  mapToDouble(Lcom/annimon/stream/function/ToDoubleFunction;)Lcom/annimon/stream/DoubleStream; = MapToDouble(Com.Annimon.Stream.Function.IToDoubleFunction)
  mapToInt(Lcom/annimon/stream/function/ToIntFunction;)Lcom/annimon/stream/IntStream; = MapToInt(Com.Annimon.Stream.Function.IToIntFunction)
  mapToLong(Lcom/annimon/stream/function/ToLongFunction;)Lcom/annimon/stream/LongStream; = MapToLong(Com.Annimon.Stream.Function.IToLongFunction)
  max(Ljava/util/Comparator;)Lcom/annimon/stream/Optional; = Max(Java.Util.IComparator)
  merge(Lcom/annimon/stream/Stream;Lcom/annimon/stream/Stream;Lcom/annimon/stream/function/BiFunction;)Lcom/annimon/stream/Stream; = Merge(Com.Annimon.Stream.Stream, Com.Annimon.Stream.Stream, Com.Annimon.Stream.Function.IBiFunction)
  merge(Ljava/util/Iterator;Ljava/util/Iterator;Lcom/annimon/stream/function/BiFunction;)Lcom/annimon/stream/Stream; = Merge(Java.Util.IIterator, Java.Util.IIterator, Com.Annimon.Stream.Function.IBiFunction)
  min(Ljava/util/Comparator;)Lcom/annimon/stream/Optional; = Min(Java.Util.IComparator)
  noneMatch(Lcom/annimon/stream/function/Predicate;)Z = NoneMatch(Com.Annimon.Stream.Function.IPredicate)
  nullsOnly()Lcom/annimon/stream/Stream; = NullsOnly()
  of(Ljava/lang/Iterable;)Lcom/annimon/stream/Stream; = Of(Java.Lang.IIterable)
  of(Ljava/util/Iterator;)Lcom/annimon/stream/Stream; = Of(Java.Util.IIterator)
  of(Ljava/util/Map;)Lcom/annimon/stream/Stream; = Of(System.Collections.IDictionary)
  of([Ljava/lang/Object;)Lcom/annimon/stream/Stream; = Of(params Java.Lang.Object[])
  ofNullable(Ljava/lang/Iterable;)Lcom/annimon/stream/Stream; = OfNullable(Java.Lang.IIterable)
  ofNullable(Ljava/util/Iterator;)Lcom/annimon/stream/Stream; = OfNullable(Java.Util.IIterator)
  ofNullable(Ljava/util/Map;)Lcom/annimon/stream/Stream; = OfNullable(System.Collections.IDictionary)
  ofNullable(Ljava/lang/Object;)Lcom/annimon/stream/Stream; = OfNullable(Java.Lang.Object)
  ofNullable([Ljava/lang/Object;)Lcom/annimon/stream/Stream; = OfNullable(Java.Lang.Object[])
  onClose(Ljava/lang/Runnable;)Lcom/annimon/stream/Stream; = OnClose(Java.Lang.IRunnable)
  peek(Lcom/annimon/stream/function/Consumer;)Lcom/annimon/stream/Stream; = Peek(Com.Annimon.Stream.Function.IConsumer)
  range(II)Lcom/annimon/stream/Stream; = Range(int, int)
  range(JJ)Lcom/annimon/stream/Stream; = Range(long, long)
  rangeClosed(II)Lcom/annimon/stream/Stream; = RangeClosed(int, int)
  rangeClosed(JJ)Lcom/annimon/stream/Stream; = RangeClosed(long, long)
  reduce(Lcom/annimon/stream/function/BiFunction;)Lcom/annimon/stream/Optional; = Reduce(Com.Annimon.Stream.Function.IBiFunction)
  reduce(Ljava/lang/Object;Lcom/annimon/stream/function/BiFunction;)Ljava/lang/Object; = Reduce(Java.Lang.Object, Com.Annimon.Stream.Function.IBiFunction)
  reduceIndexed(IILjava/lang/Object;Lcom/annimon/stream/function/IndexedBiFunction;)Ljava/lang/Object; = ReduceIndexed(int, int, Java.Lang.Object, Com.Annimon.Stream.Function.IIndexedBiFunction)
  reduceIndexed(Ljava/lang/Object;Lcom/annimon/stream/function/IndexedBiFunction;)Ljava/lang/Object; = ReduceIndexed(Java.Lang.Object, Com.Annimon.Stream.Function.IIndexedBiFunction)
  sample(I)Lcom/annimon/stream/Stream; = Sample(int)
  scan(Lcom/annimon/stream/function/BiFunction;)Lcom/annimon/stream/Stream; = Scan(Com.Annimon.Stream.Function.IBiFunction)
  scan(Ljava/lang/Object;Lcom/annimon/stream/function/BiFunction;)Lcom/annimon/stream/Stream; = Scan(Java.Lang.Object, Com.Annimon.Stream.Function.IBiFunction)
  select(Ljava/lang/Class;)Lcom/annimon/stream/Stream; = Select(Java.Lang.Class)
  single()Ljava/lang/Object; = Single()
  skip(J)Lcom/annimon/stream/Stream; = Skip(long)
  slidingWindow(I)Lcom/annimon/stream/Stream; = SlidingWindow(int)
  slidingWindow(II)Lcom/annimon/stream/Stream; = SlidingWindow(int, int)
  sortBy(Lcom/annimon/stream/function/Function;)Lcom/annimon/stream/Stream; = SortBy(Com.Annimon.Stream.Function.IFunction)
  sorted()Lcom/annimon/stream/Stream; = Sorted()
  sorted(Ljava/util/Comparator;)Lcom/annimon/stream/Stream; = Sorted(Java.Util.IComparator)
  takeUntil(Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/Stream; = TakeUntil(Com.Annimon.Stream.Function.IPredicate)
  takeUntilIndexed(Lcom/annimon/stream/function/IndexedPredicate;)Lcom/annimon/stream/Stream; = TakeUntilIndexed(Com.Annimon.Stream.Function.IIndexedPredicate)
  takeUntilIndexed(IILcom/annimon/stream/function/IndexedPredicate;)Lcom/annimon/stream/Stream; = TakeUntilIndexed(int, int, Com.Annimon.Stream.Function.IIndexedPredicate)
  takeWhile(Lcom/annimon/stream/function/Predicate;)Lcom/annimon/stream/Stream; = TakeWhile(Com.Annimon.Stream.Function.IPredicate)
  takeWhileIndexed(Lcom/annimon/stream/function/IndexedPredicate;)Lcom/annimon/stream/Stream; = TakeWhileIndexed(Com.Annimon.Stream.Function.IIndexedPredicate)
  takeWhileIndexed(IILcom/annimon/stream/function/IndexedPredicate;)Lcom/annimon/stream/Stream; = TakeWhileIndexed(int, int, Com.Annimon.Stream.Function.IIndexedPredicate)
  toArray()[Ljava/lang/Object; = ToArray()
  toArray(Lcom/annimon/stream/function/IntFunction;)[Ljava/lang/Object; = ToArray(Com.Annimon.Stream.Function.IIntFunction)
  toList()Ljava/util/List; = ToList()
  withoutNulls()Lcom/annimon/stream/Stream; = WithoutNulls()
  zip(Lcom/annimon/stream/Stream;Lcom/annimon/stream/Stream;Lcom/annimon/stream/function/BiFunction;)Lcom/annimon/stream/Stream; = Zip(Com.Annimon.Stream.Stream, Com.Annimon.Stream.Stream, Com.Annimon.Stream.Function.IBiFunction)
  zip(Ljava/util/Iterator;Ljava/util/Iterator;Lcom/annimon/stream/function/BiFunction;)Lcom/annimon/stream/Stream; = Zip(Java.Util.IIterator, Java.Util.IIterator, Com.Annimon.Stream.Function.IBiFunction)
